@model InvoiceHeader
@using HDBank.Core.Entities
@{
    ViewBag.Title = "Chi tiết thanh toán";
    var newdata = new InvoiceHeader();
}


<form action="@Url.Content("~/StockIn/UpdateHeader")" id="EditForm" method="post" enctype="multipart/form-data">
    <div class="row-fluid">
        <div class="span2">
            <input type="hidden" name="id" value="@Model.id" />
            <div class="control-group">
                <label>Số phiếu</label>
                <div class="controls">
                    <input type="text" class="span12" placeholder="Số phiếu" name="ma_phieu" id="ma_phieu" readonly>
                </div>
            </div>
        </div>
        
        <div class="span2">
            <div class="control-group">
                <label>Phiếu nhập kho</label>
                <div class="controls">
                    <input type="text" class="span12" placeholder="Phiếu nhập kho" name="ma_phieu_nhap_kho" id="ma_phieu_nhap_kho" readonly>
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Tên đơn vị</label>
                <div class="controls">
                    <input type="text" class="span12" placeholder="Tên đơn vị"   name="ten_don_vi" id="ten_don_vi" readonly>
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        @(Html.Kendo()
        .Grid<HDBank.Core.Entities.InvoiceDetail>()
        .Name("grid")
        .Columns(columns =>
        {
        columns.Bound(p => p.id).Hidden();
        columns.Template(@<text></text>).HeaderHtmlAttributes(new { @style = "text-align: center" })
        .ClientTemplate("<span><a class='btn btn-mini btn-danger' onclick='removeDetail(#=id#)'><i class='fa fa-trash'></i></a></span>").Width(45);
            columns.ForeignKey(p => p.ma_san_pham, (System.Collections.IEnumerable)ViewBag.listProduct, "ma_san_pham", "ten_san_pham")
            .Title("Tên vật tư").Width(160);
            columns.Bound(p => p.so_luong).Title("SL").Filterable(false).Width(75).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right" });
            columns.Bound(p => p.don_gia).Title("Đơn giá").Filterable(false).Width(100).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right" });
            columns.Bound(p => p.don_gia_vat).Title("Đơn giá VAT").Filterable(false).Width(100).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right" });
            columns.Bound(p => p.chi_phi).Title("Chi phí(VAT)").Filterable(false).Width(120).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right" });
            //columns.Bound(p => p.chi_phi_nhap).Title("Chi phí nhập(VAT)").Filterable(false).Width(120).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right" });
            columns.Bound(p => p.thong_so_ky_thuat).Title("Thông tin kỹ thuật").Filterable(false).Width(220);
            columns.Bound(p => p.muc_dich_su_dung).Title("Mục đích sử dụng").Filterable(false).Width(180);
            columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right" });
            columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
            columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right" });
            columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
        })
            .ToolBar(toolbar =>
            {
            toolbar.Template(@<text>
            @*@if (Model.trang_thai == "KET_THUC_MUA_SAM" || Model.trang_thai == "NHAP_HOAN_TAT")
            {
                <div class="pull-left" style="display:none">
                    <a class="btn btn-info btn-mini" href="javascript:void(0)" onclick="showPopupImport()">
                        Nhập hóa đơn
                    </a>
                </div>
            }else
            {
                <div class="pull-left">
                    <a class="btn btn-info btn-mini" href="javascript:void(0)" onclick="showPopupImport()">
                        Nhập hóa đơn
                    </a>
                </div>
            }*@

                @*<div class="pull-left">
                    <a class="btn btn-danger btn-mini" href="javascript:void(0)" onclick="OpenPopup()">
                        Thêm chi tiết
                    </a>
                </div>
                <div class="pull-left">
                    <a class="btn btn-primary btn-mini" href="javascript:void(0)" onclick="review('print')">
                        In phiếu
                    </a>
                </div>*@
            </text>
                );
            })
                .Sortable()
                .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                .Pageable(p => p
                .Messages(m => m
                .Display("{0}-{1} của {2} dòng")
                .Empty("Không có dòng nào")
                .ItemsPerPage("dòng trên trang")
                .First("Trang kế")
                .Last("Trang tiếp")
                .Next("Đầu trang")
                .Previous("Cuối trang")
                )
                )
                .Scrollable()
                .Events(e =>
                {
                    e.DataBound("Databound");
                })
                //.Editable(edit => edit.Mode(GridEditMode.InCell))
                .Navigatable()
                
                .Reorderable(r => r.Columns(true))
                .Resizable(r => r.Columns(true))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); events.Change("onChange"); })
                .Model(model =>
                {
                    model.Id(p => p.id);
                    model.Field(m => m.ma_san_pham).Editable(false);
                    model.Field(m => m.so_luong).Editable(false);
                    model.Field(m => m.thong_so_ky_thuat).Editable(false);
                    model.Field(m => m.muc_dich_su_dung).Editable(false);
                    model.Field(m => m.nguoi_tao).Editable(false);
                    model.Field(m => m.so_luong_da_nhap).Editable(false);
                    model.Field(m => m.ngay_tao).Editable(false);
                    model.Field(m => m.ngay_cap_nhat).Editable(false);
                    model.Field(m => m.nguoi_cap_nhat).Editable(false);
                    //model.Field(m => m.chi_phi_nhap).Editable(false);
                })
                    .Read(read => read.Action("ReadDetail", "Invoice", new { @ma_phieu_header = Model.ma_phieu }))
                ))
        <br />
    </div>

</form>
<div id="popup-import" class="modal hide">
    <form action="~/Plan/Import" method="post" id="importForm" enctype="multipart/form-data" class="form-inline" style="margin:0px">
        <div class="k-window-titlebar k-header">
            <span class="k-window-title">Hóa đơn mua hang</span>
        </div>
        <div class="modal-body overflow-visible">
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Số hóa đơn(*)</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Số hóa đơn" name="so_hoa_don" id="so_hoa_don" value="" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Tên đơn vị</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Tên đơn vị" name="ten_don_vi" id="ten_don_vi" value="" readonly />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Chọn năm tạo kế hoạch </label>
                        <div class="controls">
                            <select id='nam_ke_hoach' name="nam_ke_hoach" class='select' style="width:220px">
                                <option value="">Năm</option>
                                @for (int z = 2017; z <= 2100; z++)
                                {
                                    <option value="@z"> @z</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Ghi chú</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Ghi chú" name="ghi_chu" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid form-group">
                <input name="FileUpload" type="file" id="FileUpload" />
                <label>Chọn file </label>
            </div>
        </div>
        <div class="modal-footer">
            <a class="btn btn-info btn-small" onclick="Import()"> Đồng ý</a>
            <a class="btn btn-default btn-small" data-dismiss="modal">Thoát</a>
        </div>
    </form>
</div>
<div id="popup-import-hd" class="modal hide" style="border: 0px solid rgba(0,0,0,0.2);">
    <form action="~/StockIn/CreateIn" method="post" id="importForm-HD" enctype="multipart/form-data" class="form-inline" style="margin:0px">
        <div class="k-window-titlebar k-header">
            <span class="k-window-title">Nhập hóa đơn</span>
        </div>
        <div class="modal-body overflow-visible">
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Số hóa đơn</label>
                        <div class="controls">
                            <input type="text" class="span12" name="so_hoa_don" id="so_hoa_don" value="" />
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>VAT</label>
                        <div class="controls">
                            <input type="number" class="span12" name="vat_" id="vat_" value="" />
                        </div>
                    </div>
                </div>
            </div>*@
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Tổng tiền</label>
                        <div class="controls">
                            <input type="text" class="span12" name="tong_tien" id="tong_tien" value="" readonly />
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label>Ghi chú</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Ghi chú" name="ghi_chu" id="ghi_chu" value="" />
                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" class="span12" name="ma_don_vi" id="ma_don_vi" value="" />

        </div>
        <div class="modal-footer">
            <a class="btn btn-info btn-small" onclick="imporInvoice()"> Đồng ý</a>
            <a class="btn btn-default btn-small" data-dismiss="modal">Thoát</a>
        </div>
    </form>
</div>
<script>
    function numberFormat(nStr)
    {
        nStr += '';
        x = nStr.split(',');
        x1 = x[0];
        x2 = x.length > 1 ? ',' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + '.' + '$2');
        }
        return x1 + x2;
    }
    function showPopupImport()
    {
        var tongtien=0;
        $.each($("#grid").data("kendoGrid").dataSource.data(), function () {
            tongtien += this.so_luong_nhap*this.don_gia_vat;
        });
        if(tongtien==0)
        {
            $.gritter.add({
                text: "Vui lòng nhập tối thiểu số lượng cho hóa đơn",
                class_name: 'gritter-error'
            });
            return;
        }
        $("#tong_tien").val(tongtien);
        $('#popup-import-hd').modal('show');
    }
    function imporInvoice()
    {
        $('#importForm-HD').submit();
    }
    $(document).ready(function () {
        $("#importForm-HD").validate({
            rules: {
                'so_hoa_don': { required: true },
                'vat_': { required: true },
                'tong_tien': { required: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                var details = [];
                $.each($("#grid").data("kendoGrid").dataSource.data(), function () {
                    details.push({
                        id: this.id,
                        ma_hoa_don: this.ma_hoa_don,
                        ma_san_pham: this.ma_san_pham,
                        so_luong: this.so_luong_nhap,
                        chi_phi: this.chi_phi,
                        don_gia: this.don_gia,
                        don_gia_vat:this.don_gia_vat,
                        thong_so_ky_thuat: this.thong_so_ky_thuat,
                        muc_dich_su_dung: this.muc_dich_su_dung,
                    });
                });
                $("#importForm-HD").ajaxSubmit({
                    clearForm: false,
                    data: {
                        id: @ViewBag.InvoiceHeader.id,
                        so_hoa_don: $("#so_hoa_don").val(),
                        tong_tien: $("#tong_tien").val(),
                        ghi_chu: $("#ghi_chu").val(),
                        ma_don_vi:$("#ma_don_vi").val(),
                        ma_phieu:$("#ten_phieu_nhap_kho").val(),
                        details: details,
                    },
                    success: function (data) {
                        if (data.success) {
                            
                            Save();
                            $('#popup-import-hd').modal('hide');
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }
                    }
                });
                return false;
            }
        });
    })
    function onChange(e){
        if (e.action === "itemchange") {
            if(e.field  == "so_luong_nhap"){
                var model = e.items[0];
                var so_luong_nhap = model.so_luong_nhap;
                var so_luong = model.so_luong;
                var so_luong_da_nhap = model.so_luong_da_nhap;
                var don_gia_vat = model.don_gia_vat;
                if(so_luong_nhap> so_luong - so_luong_da_nhap)
                {
                    so_luong_nhap = so_luong - so_luong_da_nhap;
                    model.set("so_luong_nhap", so_luong_nhap);
                }
                if(so_luong_nhap<0)
                {
                    so_luong_nhap = 0;
                    model.set("so_luong_nhap", so_luong_nhap);
                }
                var chiphi = numberFormat(so_luong_nhap*don_gia_vat);
                model.set("chi_phi_nhap", chiphi);
            }
        }
    }
    function OnEdit(e){
        $(e.container).find('.so_luong_da_nhap').val();
        var a = $('input[name="so_luong_nhap"]');

    }
    function error_handler(e) {
        if (e.errors) {
            var message = "\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            $.gritter.add({
                text: message,
                class_name: 'gritter-error'
            });
        }
    }
    function onRequestEnd(e) {
        if (e.type == "update" || e.type == "create" || e.type == "delete") {
            if (!e.response.Errors) {
                $.gritter.add({
                    title: '',
                    text: 'Lưu dữ liệu thành công',
                    class_name: 'gritter-success'
                });
                $("#grid").data("kendoGrid").dataSource.read()
            }

        }
    }
    $(document).ready(function () {

        $("#ma_don_vi").val('@ViewBag.InvoiceHeader.ma_don_vi');
        $("#so_phieu_nhap_kho").val('@ViewBag.InvoiceHeader.ma_phieu');

    })

    $(document).ready(function () {
        $("#ma_phieu").val('@ViewBag.InvoiceHeader.ma_phieu');
        $("#ma_phieu_nhap_kho").val('@ViewBag.InvoiceHeader.ma_phieu_nhap_kho');
        $("#ten_don_vi").val('@Html.Raw(ViewBag.InvoiceHeader.ten_don_vi)');
        $("#EditForm").validate({
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    clearForm: false,
                    data: {
                        id: @ViewBag.InvoiceHeader.id,
                    },
                    success: function (data) {
                        if (data.success) {
                            $('#grid').data('kendoGrid').saveChanges();
                            $("#grid").data("kendoGrid").dataSource.read({ ma_phieu: '@ViewBag.InvoiceHeader.ma_phieu' });
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }
                    }
                });
                return false;
            }
        });


    })

    var Id;

    function Databound() {
        resizeGrid();
    }

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 12);
    }

    function Save() {

        $("#EditForm").submit();
    }
</script>


<script>
    function review() {
        Process(@ViewBag.InvoiceHeader.id);
    }
    function printContract(html) {
        var printWin = window.open("target", "duynh", "toolbar=yes,scrollbars=yes,resizable=yes");
        printWin.document.write(html);
        printWin.document.close();
        printWin.focus();
        setTimeout(function () {
            printWin.window.print();
            window.close();
        }, 100);
    }
    function Process(id) {
        var listrowid = "";
        if (id != "") {
            listrowid = id;
            if (listrowid != "" && listrowid != null) {
                $.ajax({
                    url: r + '/StockIn/ExportPrint/',
                    type: 'POST',
                    data: { Id: 1, isView: 'True', listPO: '@ViewBag.InvoiceHeader.ma_phieu' },
                    success: function (data, textStatus, jqXHR) {
                        printContract(data);
                    },
                });
            }
        }
        else {
            $.gritter.add({
                title: '',
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
</script>
