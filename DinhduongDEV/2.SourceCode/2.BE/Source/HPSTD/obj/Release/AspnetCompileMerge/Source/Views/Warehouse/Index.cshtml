@using HDBank.Core.Entities;
@{
    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;

    ViewBag.Title = "Kho";
    var listActive = new List<SelectListItem>
    {
    new SelectListItem{Text = "Đang hoạt động", Value = "DANG_HOAT_DONG"},
    new SelectListItem{Text = "Không hoạt động", Value = "KHONG_HOAT_DONG"},
    };
    ViewBag.listActive = listActive;

    var listloaikho = new List<SelectListItem>
    {
    new SelectListItem{Text = "Kho công ty", Value = "KhoCT"},
    new SelectListItem{Text = "Kho chi nhánh", Value = "KhoCN"},
    };

    ViewBag.WHType = listloaikho;
    var newData = new WareHouse();
}

<style>
    .form-actions {
        background: 0 0 !important;
        padding: 19px 10px !important;
    }

        .form-actions.right {
            text-align: right !important;
        }
</style>

<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid">
            <div class="col-sm-6">
                <div class="tabbable">
                    <ul class="nav nav-tabs tab-color-blue" id="myTab">
                        <li class="active">
                            <a data-toggle="tab" href="#home" aria-expanded="true" id="tabList">
                                <i class="green ace-icon fa fa-home bigger-120"></i>
                                Danh sách kho
                            </a>
                        </li>
                        <li class="">
                            <a data-toggle="tab" href="#edit" aria-expanded="false" id="tabAdd" style="display:none;">
                                Thêm kho
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding-bottom:0px!important">
                        <div id="home" class="tab-pane fade active in">
                            <div class="row-fluid widget-box">
                                <div class="span12">
                                    <div class="span4">
                                        <input type="text" class="span12" placeholder="Tên kho, email, điện thoại" onkeyup="filter(this)" />
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid">
                                @(Html.Kendo()
                                    .Grid<HDBank.Core.Entities.WareHouse>
                                        ()
                                        .Name("grid")
                                        .HtmlAttributes(new { @style = "height:500px" })
                                        .Columns(columns =>
                                        {
                                            columns.ForeignKey(p => p.loai_kho, (System.Collections.IEnumerable)ViewBag.WHType, "Value", "Text").Title("Loại kho")
                                            .Width(100).EditorTemplateName("GridNullableForeignKey").Hidden();
                                            columns.ForeignKey(p => p.cong_ty_id, (System.Collections.IEnumerable)ViewBag.Company, "id", "ten_cong_ty").Title("")
                                            .Width(100).EditorTemplateName("GridNullableForeignKey").Hidden();
                                            columns.ForeignKey(p => p.chi_nhanh_id, (System.Collections.IEnumerable)ViewBag.Branch, "id", "ten_chi_nhanh").Title("")
                                            .Width(100).EditorTemplateName("GridNullableForeignKey").Hidden();
                                            columns.Bound(p => p.id)
                                            .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id='checkboxcheckAll' onClick='checkAll(this)' />")
                                            .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#' />")
                                            .Width(35).Filterable(false).Sortable(false);
                                            columns.Bound(p => p.ten_kho).Width(150).Title("Tên kho")
                                            .ClientTemplate("<span style='cursor:pointer; color:\\#428bca' onclick='edit(this)'>#=ten_kho#</span>");
                                            columns.ForeignKey(p => p.loai_kho, (System.Collections.IEnumerable)ViewBag.WHType, "Value", "Text").Title("Loại kho").Width(160)
                                            .ClientTemplate("<span class='textInGrid'>Loại kho: #:foreignWHType[loai_kho]#<br>" +
                                                            @"#if(chi_nhanh_id != null){#<span class='textInGrid'>Tên chi nhánh: <label class='input'></label><span>#:foreignCN[chi_nhanh_id]#</span>#}
                                                                else {#<span class='textInGrid'>Tên công ty: <label class='input'></label><span>#:foreignCT[cong_ty_id]#</span>#}#"
                                                            );
                                            columns.Bound(p => p.dia_chi).Width(200).Title("Địa chỉ");
                                            columns.Bound(p => p.email).Width(140).Title("Email");
                                            columns.Bound(p => p.thu_kho).Width(140).Title("Thủ kho");
                                            columns.Bound(p => p.dien_thoai_thu_kho).Width(140).Title("Điện thoại thủ kho");
                                            columns.ForeignKey(p => p.trang_thai, (System.Collections.IEnumerable)ViewBag.listActive, "Value", "Text").Title("Trạng Thái").Width(140);
                                            columns.Bound(p => p.ghi_chu).Width(200).Title("Ghi chú");
                                            columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                                            columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
                                            columns.Bound(o => o.ngay_cap_nhat).Title("Ngày sửa").Format("{0:dd/MM/yyyy}").Width(110).
                                            ClientTemplate("#if(kendo.toString(ngay_cap_nhat,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(ngay_cap_nhat,'dd/MM/yyyy') #" + "#}#");
                                            columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
                                        })
                                          .ToolBar(toolbar =>
                                          {
                                          toolbar.Template(@<text>
                                            <div class="pull-left">
                                                @if (them)
                                                {
                                                    <a class="btn btn-success btn-small" href="javascript:void(0)" id="btnGridAdd">
                                                        Thêm
                                                    </a>
                                                }
                                            </div>
                                        </text>);
                                          })
                                        .Sortable()
                                        .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                                        //.Selectable(s=>s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                        .Pageable(p => p
                                        .Messages(m => m
                                        .Display("{0}-{1} của {2} dòng")
                                        .Empty("Không có dòng nào")
                                        .ItemsPerPage("dòng trên trang")
                                        .First("Trang kế")
                                        .Last("Trang tiếp")
                                        .Next("Đầu trang")
                                        .Previous("Cuối trang")
                                        )
                                        )
                                        .Scrollable()
                                        .Events(e => { e.DataBound("Databound"); })
                                        .Navigatable()
                                        //.Excel(excel => excel
                                        //.FileName("CompanyList.xlsx")
                                        //.Filterable(true).AllPages(true)
                                        //.ProxyURL(Url.Action("Excel_Export", "Company")))
                                        .Reorderable(r => r.Columns(true))
                                        .Resizable(r => r.Columns(true))
                                        .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(20)
                                        //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                        .Model(model =>
                                        {
                                            model.Id(p => p.id);
                                        })

                                        .Read(read => read.Action("Read", "Warehouse"))
                                        ))
                            </div>

                        </div>
                        <div id="edit" class="tab-pane fade">
                            <div class="span12 formEdit">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script type="text/template" id="EditTemplate">
    <form action="@Url.Content("~/Warehouse/CreateUpdate")" id="EditForm" method="post" enctype="multipart/form-data">
        <div class="row-fluid">
            <div class="span4">
                <input type="hidden" name="id" value="#=id#" />
                <div class="control-group">
                    <label>Tên kho (*)</label>
                    <div class="controls">
                        #if(id > 0){#
                        <input type="text" class="span12" placeholder="Tên kho" name="ten_kho" value="#=ten_kho!=null ? ten_kho : ''#">
                        #}else{#
                        <input type="text" class="span12" placeholder="Tên kho" name="ten_kho" value="#=ten_kho!=null ? ten_kho : ''#">
                        #}#
                    </div>
                </div>
                <div class="control-group">
                    <label>Loại kho</label>
                    <div class="controls">
                        <select name="loai_kho" id="loai_kho" class="span12" onchange="Changeloai_kho()">
                            #if(!loai_kho){#
                            <option value="KhoCT">Kho công ty</option>
                            <option value="KhoCN" selected>Kho chi nhánh</option>
                            #}else{#
                            <option value="KhoCT" selected>Kho công ty</option>
                            <option value="KhoCN">Kho chi nhánh</option>
                            #}#
                        </select>
                    </div>
                </div>

                <div class="control-group" id="rowcty">
                    <label>Công ty</label>
                    <div class="controls">
                        @(Html.Kendo().ComboBox()
                        .Name("cong_ty_id")
                        .DataTextField("ten_cong_ty")
                        .Value("#=cong_ty_id ? cong_ty_id : ''#")
                        .DataValueField("id")
                        .HtmlAttributes(new { @style = "width:100%;" })
                        .Filter("contains")
                        .Placeholder("Công ty")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetCompany", "Warehouse");
                            })
                            .ServerFiltering(true);
                        }).ToClientTemplate()
                        )
                    </div>
                </div>
                <div class="control-group" id="rowcn">
                    <label>Chi nhánh</label>
                    <div class="controls">
                        @(Html.Kendo().ComboBox()
                        .Name("chi_nhanh_id")
                        .DataTextField("ten_chi_nhanh")
                        .DataValueField("id")
                        .Value("#=chi_nhanh_id ? chi_nhanh_id : ''#")
                        .HtmlAttributes(new { @style = "width:100%;" })
                        .Filter("contains")
                        .Placeholder("Chi nhánh")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetBranch", "Warehouse");
                            })
                            .ServerFiltering(true);
                        }).ToClientTemplate()
                        )
                    </div>
                </div>
                <div class="control-group">
                    <label>Địa chỉ (*)</label>
                    <div class="controls">
                        #if(id > 0){#
                        <input type="text" class="span12" placeholder="Địa chỉ" name="dia_chi" value="#=dia_chi!=null ? dia_chi : ''#">
                        #}else{#
                        <input type="text" class="span12" placeholder="Địa chỉ" name="dia_chi" value="#=dia_chi!=null ? dia_chi : ''#">
                        #}#
                    </div>
                </div>
                <div class="control-group">
                    <label>Email (*)</label>
                    <div class="controls">
                        #if(id > 0){#
                        <input type="text" class="span12" placeholder="example@gmail.com" name="email" value="#=email!=null ? email : ''#">
                        #}else{#
                        <input type="text" class="span12" placeholder="example@gmail.com" name="email" value="#=email!=null ? email : ''#">
                        #}#
                    </div>
                </div>

            </div>

            <div class="span4">
                <div class="control-group">
                    <label>Tên thủ kho</label>
                    <div class="controls">
                        <input type="text" class="span12" placeholder="Tên thủ kho" name="thu_kho" value="#=thu_kho!=null ? thu_kho : ''#">
                    </div>
                </div>
                <div class="control-group">
                    <label>Điện thoại thủ kho</label>
                    <div class="controls">
                        <input type="text" class="span12" placeholder="Điện thoại thủ kho" name="dien_thoai_thu_kho" value="#=dien_thoai_thu_kho!=null ? dien_thoai_thu_kho : ''#">
                    </div>
                </div>
                <div class="control-group">
                    <label>Ghi chú</label>
                    <div class="controls">
                        <input type="text" class="span12" placeholder="Ghi chú" name="ghi_chu" value="#=ghi_chu!=null ? ghi_chu : ''#">
                    </div>
                </div>
                <div class="control-group">
                    <label>Trạng thái</label>
                    <div class="controls">
                        <select name="trang_thai" class="span12">
                            #if(!trang_thai){#
                            <option value="DANG_HOAT_DONG" selected>Đang hoạt động</option>
                            <option value="KHONG_HOAT_DONG">Không hoạt động</option>
                            #}else{#
                            <option value="DANG_HOAT_DONG" selected>Đang hoạt động</option>
                            <option value="KHONG_HOAT_DONG">Không hoạt động</option>
                            #}#
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-actions right">
            <a onclick="clearForm()" class="btn btn-xs">Hủy</a>
            #if(id > 0){#
            <a onclick="removeUser('#=id#')" class="btn btn-danger">Xóa</a>
            #}#
            <button type="button" onclick="Save()" class="btn btn-info">Lưu</button>
            <a onclick="saveAndClear()" class="btn btn-primary">Lưu &amp; Mới</a>
        </div>

    </form>
</script>

<script src="~/Scripts/jquery.validate.js"></script>

<script type="text/kendo" id="template">
    <ul style="margin-left: 12px;">
        #if(data != null){#
        #for(var i = 0; i< data.length; i++){#
        <li>#:data[i].Name#</li>
        #}#
        #}#
    </ul>
</script>
<script type="text/javascript">
    var Template = kendo.template($("#template").html(), { useWithBlock: false });
</script>
<script>

    var foreignWHType = {};
    $(function () {
        var grid = $("#grid").data("kendoGrid"),
            values = grid.columns[0].values;

        for (var i = 0; i < values.length; i++) {
            foreignWHType[values[i].value] = values[i].text;
        }
    });

    var foreignCT = {};
    $(function () {
        var grid = $("#grid").data("kendoGrid"),
            values = grid.columns[1].values;

        for (var i = 0; i < values.length; i++) {
            foreignCT[values[i].value] = values[i].text;
        }
    });

    var foreignCN = {};
    $(function () {
        var grid = $("#grid").data("kendoGrid"),
            values = grid.columns[2].values;

        for (var i = 0; i < values.length; i++) {
            foreignCN[values[i].value] = values[i].text;
        }
    });

    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        loadValidate(data);
    }
    function clearForm() {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
        $("#loai_kho").trigger("change");
    }
    function edit(e) {
        var data = $("#grid").data("kendoGrid").dataItem($(e).closest("tr"));
        $("#tabAdd").trigger("click");
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Chỉnh sửa kho')
        loadForm(data);


        var currentRow = $(e).closest("tr");
        var dataItem = $("#grid").data("kendoGrid").dataItem(currentRow);
        $("#loai_kho").val(dataItem.loai_kho).trigger("change");
        $("#cong_ty_id").val(dataItem.cong_ty_id).trigger("change");
        $("#chi_nhanh_id").val(dataItem.chi_nhanh_id).trigger("change");
    }
    $("#tabList").bind('click', function () {
        //$('#tabAdd').text('').append('Thêm kho')
        $('#tabAdd').css('display', 'none');
    });

    $('#btnGridAdd').bind('click', function () {
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Thêm kho')
        $("#tabAdd").trigger("click");
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
        $("#loai_kho").trigger("change");
    })

    @*$("#tabAdd").bind('click', function () {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
        $("#loai_kho").trigger("change");
    });*@

    function Changeloai_kho() {
        var loai_kho = $("#loai_kho").val();
        $("#rowcty").hide();
        $("#rowcn").hide();
        if (loai_kho == 'KhoCT') {
            $("#rowcty").show();
        }
        else
            if (loai_kho == 'KhoCN')
                $("#rowcn").show();

    }
    var reset = false;

    function Save() {
        if ($("#cong_ty_id").val() == '' && $("#chi_nhanh_id").val() == '') {
            $.gritter.add({
                text: "Vui lòng chọn công ty/chi nhánh",
                class_name: 'gritter-error'
            });
            return;
        }
        $('#EditForm').submit();
    }

    function saveAndClear() {
        reset = true;
        if ($("#cong_ty_id").val() == '' && $("#chi_nhanh_id").val() == '') {
            $.gritter.add({
                text: "Vui lòng chọn công ty/chi nhánh",
                class_name: 'gritter-error'
            });
            return;
        }
        $('#EditForm').submit();
    }
    function loadValidate() {
        $("#EditForm").validate({
            rules: {
                'ten_kho': { required: true },
                'dia_chi': { required: true },
                'email': { required: true, email: true },
                'thu_kho': { required: true },
                'dien_thoai_thu_kho': { required: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    clearForm: false,
                    success: function (data) {
                        if (data.success) {
                            $("#grid").data("kendoGrid").dataSource.read()
                            $.gritter.add({
                                text: "Lưu thành công",
                                class_name: 'gritter-success'
                            });
                            if (reset) {
                                reset = false;
                                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                            }
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }

                    }
                });
                return false;
            }
        });
    }

    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#grid").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }


    function Databound() {
        resizeGrid();
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
            dataArea = gridElement.find(".k-grid-content"),
            otherElements = gridElement.children().not(".k-grid-content"),
            otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 12);
    }
    function Active() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            var cf = confirm("Are you sure you want to Active this record");
            if (cf == true) {
                $.post(r + "/WareHouse/Active", { data: checkrowid }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: "Active successfully " + data.message + " records!",
                            class_name: 'gritter-success',
                        });
                        $("#grid").data("kendoGrid").dataSource.read();
                        $("#checkboxcheckAll").prop('checked', false);
                    }
                    else {
                        $.gritter.add({
                            text: data.error,
                            class_name: 'gritter-error',
                        });

                    }
                });
            }
            else {
                return false;
            }
        } else {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function Inactive() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            var cf = confirm("Are you sure you want to inactive this record");
            if (cf == true) {
                $.post(r + "/WareHouse/Inactive", { data: checkrowid }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: "Inactive successfully " + data.message + " records!",
                            class_name: 'gritter-success',
                        });
                        $("#grid").data("kendoGrid").dataSource.read();
                        $("#checkboxcheckAll").prop('checked', false);
                    }
                    else {
                        $.gritter.add({
                            text: data.error,
                            class_name: 'gritter-error',
                        });

                    }
                });
            }
            else {
                return false;
            }
        } else {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function filter(e) {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = e.value;
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ten_kho", operator: "contains", value: text });
            filterOr.filters.push({ field: "email", operator: "contains", value: text });
            filterOr.filters.push({ field: "thu_kho", operator: "contains", value: text });
            filterOr.filters.push({ field: "dien_thoai_thu_kho", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
        console.log(text)
    }
</script>
