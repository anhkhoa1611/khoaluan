@using HDBank.Models;
@using HDBank.Helpers;
@{

    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;

    ViewBag.Title = "Quản lý người dùng";
    var listActive = new List<SelectListItem>
    {
        new SelectListItem{Text = "Hoạt động", Value = "true"},
        new SelectListItem{Text = "Ngưng hoạt động", Value = "false" },
    };
    ViewBag.listActive = listActive;

    var newData = new User();
    var listDomain = Utilities.getDomain();
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />
<link href="~/Content/assets/global/plugins/jquery-multi-select/css/multi-select.css" rel="stylesheet" />
<script src="~/Content/assets/global/plugins/jquery-multi-select/js/jquery.multi-select.js"></script>


<style>
    .form-actions {
        background: 0 0 !important;
        padding-right: 0px;
        padding-top: 20px !important;
        padding-bottom: 0px !important;
        border-top: 1px solid #e5e5e5;
        margin-top: 0px;
        margin-bottom: 0px;
    }
    .form-actions.right {
        text-align: right !important;
    }
    .ms-container .ms-list {
        height: 350px !important;
    }
    .k-dropdown-wrap {
        padding-top: 3px;
    }
</style>
<script src="~/Scripts/jquery.validate.js"></script>

<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid">
            <div class="col-sm-6">
                <div class="tabbable">
                    <ul class="nav nav-tabs tab-color-blue" id="myTab">
                        <li class="active">
                            <a data-toggle="tab" href="#home" aria-expanded="true" id="tabList">Danh sách người dùng</a>
                        </li>
                        <li class="">
                            <a data-toggle="tab" href="#edit" aria-expanded="true" id="tabAdd">Thêm người dùng</a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding-bottom:0px!important">
                        <div id="home" class="tab-pane fade active in">
                            <div class="row-fluid widget-box">
                                <div class="span12">
                                    <input type="text" id="txtSearch" class="span3" placeholder="Nhập mã người dùng, tên người dùng, email, điện thoại" onkeyup="filter()" />
                                    <select name="select" id="listStatus" class='chosen-select span2' data-placeholder="Chọn trạng thái..." multiple onchange="filter()">
                                        <option value="true">Hoạt động</option>
                                        <option value="false">Ngưng hoạt động </option>
                                    </select>

                                    <select name="select" id="listCNPBPGD" class='chosen-select span4' data-placeholder="Chọn CN/Phòng/Ban/PGD..." multiple onchange="filter()">
                                        <option value=""></option>
                                        @foreach (var item in ViewBag.listCNPBPGD)
                                        {
                                            <option value="@item.ma_chi_nhanh">@item.ten_chi_nhanh</option>
                                        }
                                    </select>
                                    <select name="select" id="listChucVu" class='chosen-select span3' data-placeholder="Chọn chức vụ..." multiple onchange="filter()">
                                        <option value=""></option>
                                        @foreach (var item in ViewBag.listChucVu)
                                        {
                                            <option value="@item.ma_tham_so">@item.gia_tri</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row-fluid">
                                @(Html.Kendo()
                            .Grid<HDBank.Models.User>()
                            .Name("grid")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.id)
                                    .HeaderTemplate("<input  type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
                                    .ClientTemplate("#if(ma_nguoi_dung!='administrator'){# <input class='checkrowid' type='checkbox' id='#=id#' />#}#")
                                    .Width(25).Filterable(false).Sortable(false).HtmlAttributes(new { style = "text-align:center" });
                                columns.Template(@<text></text>).HtmlAttributes(new { style = "text-align: center;" }).ClientTemplate("<span ><a class='btn btn-mini btn-warning' style ='width:40px' onclick='edit(this)'> Sửa </a></span>").Width(70);
                            columns.Bound(p => p.ma_nguoi_dung).Width(100).Title("Tên đăng nhập");
                            columns.Bound(p => p.domain).Width(80).Title("Domain");
                            columns.Bound(p => p.ma_nguoi_dung_domain).Width(140).Title("Tên đăng nhập domain");
                            columns.Bound(p => p.ma_nhan_vien).Width(90).Title("Mã nhân viên");
                            columns.Bound(p => p.ten_nguoi_dung).Width(180).Title("Họ tên");
                            columns.ForeignKey(p => p.gioi_tinh, (System.Collections.IEnumerable)ViewBag.listGender, "ma_tham_so", "gia_tri").Title("Giới tính").Width(60);
                            columns.Bound(p => p.email).Width(180).Title("Email");
                            columns.Bound(p => p.dien_thoai).Width(90).Title("Điện thoại");
                            columns.ForeignKey(p => p.trang_thai, (System.Collections.IEnumerable)ViewBag.listActive, "Value", "Text").Title("Trạng thái").Width(110);
                            columns.Bound(p => p.ma_don_vi).Width(70).Title("Mã đơn vị");
                            columns.Bound(p => p.profit_center).Width(90).Title("Profit centres");
                           
                                columns.Template(@<text></text>).HeaderHtmlAttributes(new { style = "color: #428bca" }).Title("CN/Phòng/Ban/PGD").HtmlAttributes(new { style = "text-align: left;" })
                                                       .ClientTemplate("#if(tat_ca_chi_nhanh == 1){#<span >Tất cả chi nhánh</span> #} else{#<span >#=ten_chi_nhanh#</span> #}#").Width(200);
                                columns.Bound(p => p.ngay_vao_lam).Title("Ngày vào làm").Filterable(false).Width(100).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
                                columns.ForeignKey(p => p.chuc_danh, (System.Collections.IEnumerable)ViewBag.listChucDanh, "ma_tham_so", "gia_tri").Title("Chức danh").Width(300);
                                columns.ForeignKey(p => p.cap_bac, (System.Collections.IEnumerable)ViewBag.listChucVu, "ma_tham_so", "gia_tri").Title("Cấp bậc").Width(150);
                                columns.ForeignKey(p => p.bien_che_dinh_bien, (System.Collections.IEnumerable)ViewBag.listBCDinhBien, "ma_tham_so", "gia_tri").Title("Biên chế định biên").Width(150);
                                columns.Bound(p => p.dia_chi).Width(300).Title("Địa chỉ");
                                columns.Bound(p => p.ghi_chu).Width(150).Title("Ghi chú");
                                columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                                columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90).HtmlAttributes(new { style = "text-align:right" });
                                columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                                columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90).HtmlAttributes(new { style = "text-align:right" });
                            })
                            .ToolBar(toolbar =>
                            {
                            toolbar.Template(@<text>

                                    <div class="pull-left">
                                        @if (them)
                                        {
                                            <a class="btn btn-success btn-small" href="javascript:void(0)" id="btnGridAdd">Thêm</a>
                                        }
                                        @if (sua)
                                        {
                                            <a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnGridActive">Hoạt động</a>
                                            <a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnGridInactive">Ngưng hoạt động</a>
                                            <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridResetPass">Cấp lại mật khẩu</a>
                                        }
                                        @if (xuat)
                                        {
                                            <a class="btn btn-info btn-mini export" href="@Url.Action("ExportData", "Users", new { page = "~", pageSize = "~", filter = "~", sort = "~"})">Xuất excel</a>
                                        }
                                        @if (nhap)
                                        {
                                            <a class="btn btn-info btn-small" href="@Url.Action("ExportTemplate", "Users")">Tải excel mẫu</a>
                                            <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridImport" onclick="showConfirmPopupImport()">Nhập excel</a>
                                        }
                                    </div>
                            </text>);
                            })
                                .Sortable()
                                .Pageable(pager => pager.PageSizes(new[] { 20, 50, 100, 200, 300, 500 }))
                                .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                .Pageable(p => p
                                    .Messages(m => m
                                        .Display("{0}-{1} của {2} dòng")
                                        .Empty("Không có dòng nào")
                                        .ItemsPerPage("dòng trên trang")
                                        .First("Trang kế")
                                        .Last("Trang tiếp")
                                        .Next("Đầu trang")
                                        .Previous("Cuối trang")
                                    )
                                )
                                .Scrollable()
                                .Events(e => { e.DataBound("Databound"); })
                                .Navigatable()
                                .Excel(excel => excel
                                .FileName("UsersList.xlsx")
                                .Filterable(true).AllPages(true)
                                .ProxyURL(Url.Action("Excel_Export", "Users")))
                                .Reorderable(r => r.Columns(true))
                                .Resizable(r => r.Columns(true))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                    .Model(model =>
                                    {
                                        model.Id(p => p.id);
                                    })
                                    .Read(read => read.Action("Read", "Users"))
                                ))
                            </div>
                        </div>
                        <div id="edit" class="tab-pane fade">
                            <div class="span12 formEdit">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script type="text/template" id="EditTemplate">
    <form action="@Url.Content("~/Users/CreateUpdate")" id="EditForm" method="post" enctype="multipart/form-data">

        <div class="row-fluid">
            <div class="span4">
                <input type="hidden" name="id" value="#=id#" />
                <div class="row-fluid">
                    <div class="control-group span7">
                        <label>Mã người dùng (*)</label>
                        <div class="controls">
                            #if(id > 0){#
                            <input type="text" class="span12" name="ma_nguoi_dung" value="#=ma_nguoi_dung!=null ? ma_nguoi_dung : ''#" readonly>
                            #}else{#
                            <input type="text" class="span12" placeholder="Nhập mã người dùng" name="ma_nguoi_dung" value="#=ma_nguoi_dung!=null ? ma_nguoi_dung : ''#">
                            #}#
                        </div>
                    </div>
                    <div class="control-group span5">
                        <label>Mật khẩu (*)</label>
                        <div class="controls">
                            #if(id > 0){#
                            <input type="password" class="span12" name="mat_khau" value="#=mat_khau!=null ? mat_khau : ''#" readonly>
                            #}else{#
                            <input type="password" class="span12" placeholder="Nhập mật khẩu" name="mat_khau" value="#=mat_khau!=null ? mat_khau : ''#">
                            #}#

                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="control-group span7">
                        <label>Tên người dùng</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Nhập tên người dùng" name="ten_nguoi_dung" value="#=ten_nguoi_dung!=null ? ten_nguoi_dung : ''#">
                        </div>
                    </div>
                    <div class="control-group span5">
                        <label>Giới tính</label>
                        <div class="controls">
                            <div class="controls">
                                @(Html.Kendo().DropDownList()
                                    .Name("gioi_tinh")
                                    .DataTextField("gia_tri")
                                    .DataValueField("ma_tham_so")
                                    .HtmlAttributes(new { @style = "width:100%;" })
                                    .Filter("contains")
                                    .OptionLabel("Giới tính")
                                    .Value("#=gioi_tinh !=null ? gioi_tinh: ''#")
                                    .BindTo(ViewBag.listGender)
                                    .ToClientTemplate()
                                )
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="control-group span7">
                        <label>Email (*)</label>
                        <div class="controls">
                            #if(id > 0){#
                            <input type="text" class="span12" name="email" value="#=email!=null ? email : ''#" readonly>
                            #}else{#
                            <input type="text" class="span12" placeholder="youremail@domain.com" name="email" value="#=email!=null ? email : ''#">
                            #}#

                        </div>
                    </div>
                    <div class="control-group span5">
                        <label>Điện thoại</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Nhập số điện thoại" name="dien_thoai" value="#=dien_thoai!=null ? dien_thoai : ''#">
                        </div>
                    </div>

                </div>
                <div class="control-group">
                    <label>Địa chỉ</label>
                    <div class="controls">
                        <input type="text" class="span12" placeholder="Nhập địa chỉ" name="dia_chi" value="#=dia_chi!=null ? dia_chi : ''#">
                    </div>
                </div>
                <div class="control-group">
                    <label>Người dùng thuộc nhóm</label>
                    <div class="controls">
                        @(Html.Kendo().MultiSelect()
                            .Name("groupId")
                            .DataTextField("ten_nhom")
                            .DataValueField("id")
                            .HtmlAttributes(new { @style = "width:100%;" })
                            .Filter("contains")
                            .Placeholder("Chọn nhóm")
                            .BindTo(ViewBag.listGroup)
                            .ToClientTemplate()
                        )
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="control-group span3">
                        <label>Trạng thái</label>
                        <div class="controls">
                            <select name="trang_thai" class="span12">
                                #if(trang_thai =="true"){#
                                <option value="true" selected>Hoạt động</option>
                                <option value="false">Ngưng hoạt động</option>
                                #}else{#
                                <option value="true">Hoạt động</option>
                                <option value="false" selected>Ngưng hoạt động</option>
                                #}#
                            </select>
                        </div>
                    </div>
                    <div class="control-group span9">
                        <label>Ghi chú</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Ghi chú" name="ghi_chu" value="#=ghi_chu!=null ? ghi_chu : ''#">
                        </div>
                    </div>
                </div>
            </div>
            <div class="span3">
                <div class="row-fluid">
                    <div class="control-group span5">
                        <label>Domain</label>
                        <div class="controls">
                            @(Html.Kendo().DropDownList()
                                .Name("domain")
                                .DataTextField("gia_tri")
                                .DataValueField("gia_tri")
                                .HtmlAttributes(new { @style = "width:100%;" })
                                .Filter("contains")
                                .OptionLabel("Chọn domain")
                                .Value("#=domain !=null ? domain: ''#")
                                .BindTo(listDomain)
                                .ToClientTemplate()
                            )
                        </div>
                    </div>
                    <div class="control-group span7">
                        <label>Tên đăng nhập domain</label>
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Tên đăng nhập domain" name="ma_nguoi_dung_domain" value="#=ma_nguoi_dung_domain!=null ? ma_nguoi_dung_domain : ''#">
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="control-group span5">
                        <label>Mã nhân viên</label>
                        <div class="controls">
                            #if(id > 0){#
                            <input type="text" class="span12" readonly name="ma_nhan_vien" value="#=ma_nhan_vien!=null ? ma_nhan_vien : ''#">
                            #}else{#
                            <input type="text" class="span12" placeholder="Nhập mã nhân viên" name="ma_nhan_vien" value="#=ma_nhan_vien!=null ? ma_nhan_vien : ''#">
                            #}#

                        </div>
                    </div>
                    <div class="control-group span7">
                        <label>Ngày vào làm</label>
                        <div class="controls">
                            <input type="text" class="span12 date-picker" placeholder="Ngày vào làm" name="ngay_vao_lam" value="#=kendo.toString(kendo.parseDate(ngay_vao_lam),'dd/MM/yyyy') !='01/01/0001' && kendo.toString(kendo.parseDate(ngay_vao_lam),'dd/MM/yyyy') !='01/01/1900'  ? kendo.toString(kendo.parseDate(ngay_vao_lam),'dd/MM/yyyy'): ''#">
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="control-group span5">
                        <label>Profit centres</label>
                        @*<div class="controls">
                            @(Html.Kendo().DropDownList()
                                .Name("profit_center")
                                .DataTextField("gia_tri")
                                .DataValueField("ma_tham_so")
                                .HtmlAttributes(new { @style = "width:100%;" })
                                .Filter("contains")
                                .OptionLabel("Profit center")
                                .Value("#=profit_center !=null ? profit_center: ''#")
                                .BindTo(ViewBag.listProfitCenter)
                                .ToClientTemplate()
                            )
                        </div>*@
                        <div class="controls">
                            <input type="text" class="span12" placeholder="Profit-center" name="profit_center" value="">
                        </div>
                    </div>
                    <div class="control-group span7">
                        <label>Mã đơn vị</label>
                        <div class="controls">
                            @(Html.Kendo().DropDownList()
                                .Name("ma_don_vi")
                                .DataTextField("ma_don_vi")
                                .DataValueField("ma_don_vi")
                                .HtmlAttributes(new { @style = "width:100%;" })
                                .Filter("contains")
                                .OptionLabel("Đơn vị")
                                .Value("#=ma_don_vi !=null ? ma_don_vi: ''#")
                                .BindTo(ViewBag.listDonVi)
                                .ToClientTemplate()
                            )
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label>Chức danh</label>
                    <div class="controls">
                        @(Html.Kendo().DropDownList()
                            .Name("chuc_danh")
                            .DataTextField("gia_tri")
                            .DataValueField("ma_tham_so")
                            .HtmlAttributes(new { @style = "width:100%;" })
                            .Filter("contains")
                            .OptionLabel("Chức danh")
                            .Value("#=chuc_danh !=null ? chuc_danh: ''#")
                            .BindTo(ViewBag.listChucDanh)
                            .ToClientTemplate()
                        )
                    </div>

                </div>
                <div class="control-group">
                    <label>Cấp bậc</label>
                    <div class="controls">
                        @(Html.Kendo().DropDownList()
                            .Name("cap_bac")
                            .DataTextField("gia_tri")
                            .DataValueField("ma_tham_so")
                            .HtmlAttributes(new { @style = "width:100%;" })
                            .Filter("contains")
                            .OptionLabel("Cấp bậc")
                            .Value("#=cap_bac !=null ? cap_bac: ''#")
                            .BindTo(ViewBag.listChucVu)
                            .ToClientTemplate()
                        )
                    </div>
                </div>
                <div class="control-group">
                    <label>Biên chế định biên</label>
                    <div class="controls">
                        <div class="controls">
                            @(Html.Kendo().DropDownList()
                                .Name("bien_che_dinh_bien")
                                .DataTextField("gia_tri")
                                .DataValueField("ma_tham_so")
                                .HtmlAttributes(new { @style = "width:100%;" })
                                .Filter("contains")
                                .OptionLabel("Biên chế định biên")
                                .Value("#=bien_che_dinh_bien !=null ? bien_che_dinh_bien: ''#")
                                .BindTo(ViewBag.listBCDinhBien)
                                .ToClientTemplate()
                            )
                        </div>
                    </div>
                </div>
            </div>
            <div class="span5">
                <div class="control-group">
                    <label class="control-label">Chi nhánh/Phòng/Ban/Phòng giao dịch</label>
                    #if(tat_ca_chi_nhanh){#
                    <input type="checkbox" id="tat_ca_chi_nhanh" value="true" checked name="tat_ca_chi_nhanh" onchange="checkTextbox()" /> Tất cả
                    #}else{#
                    <input type="checkbox" id="tat_ca_chi_nhanh" value="false" name="tat_ca_chi_nhanh" onchange="checkTextbox()" /> Tất cả
                    #}#
                    <div class="controls">
                        <select multiple="multiple" class="multi-select" id="multi_selectUsersBranch" name="lstbranch">
                            @foreach (var item in ViewBag.listCNPBPGD)
                            {
                                <option value="@item.ma_chi_nhanh">@Html.Raw(item.ten_chi_nhanh)</option>
                            }
                        </select>
                    </div>
                    @*<div class="span12">
                        <div class="span5">
                            <select name="from[]" id="search" class="form-control" size="8" multiple="multiple">
                                <option value="1" data-position="1">Item 1</option>
                                <option value="2" data-position="2">Item 5</option>
                                <option value="2" data-position="3">Item 2</option>
                                <option value="2" data-position="4">Item 4</option>
                                <option value="3" data-position="5">Item 3</option>
                            </select>
                        </div>

                        <div class="span2">
                            <button type="button" id="search_rightAll" class="btn btn-block"><i class="glyphicon glyphicon-forward"></i></button>
                            <button type="button" id="search_rightSelected" class="btn btn-block"><i class="glyphicon glyphicon-chevron-right"></i></button>
                            <button type="button" id="search_leftSelected" class="btn btn-block"><i class="glyphicon glyphicon-chevron-left"></i></button>
                            <button type="button" id="search_leftAll" class="btn btn-block"><i class="glyphicon glyphicon-backward"></i></button>
                        </div>

                        <div class="span5">
                            <select name="to[]" id="search_to" class="form-control" size="8" multiple="multiple"></select>
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
        <div class="form-actions right">
            <a onclick="clearForm()" class="btn btn-xs btn-small">Hủy</a>
            #if(id > 0 && ma_nguoi_dung !='administrator'){#
            <a onclick="removeUser('#=id#')" class="btn btn-danger btn-small">Xóa</a>
            #}#
            <button type="submit" class="btn btn-info btn-small">Lưu</button>
            <a onclick="saveAndClear()" class="btn btn-primary btn-small">Lưu &amp; Mới</a>
        </div>
    </form>
</script>

<div id="popup-confirm" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu?</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="Delete()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
    </div>
</div>

<div id="popup-resetpass" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn cấp lại mật khẩu?</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="ResetPass()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
    </div>
</div>

<div id="popup-active" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn cập nhật?</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="Active()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
    </div>
</div>

<div id="popup-inactive" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn cập nhật?</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="Inactive()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
    </div>
</div>
<div id="popup-import" class="modal hide">
    <form action="~/Users/Import" method="post" id="importForm" enctype="multipart/form-data" class="form-inline" style="margin:0px">
        <div class="k-window-titlebar k-header">
            <span class="k-window-title">Import</span>
            @*<button type="button" class="btclose" data-dismiss="modal">&times;</button>*@
        </div>
        <div class="modal-body overflow-visible">
            <div class="row-fluid form-horizontal">
                <label>Chọn file </label>
                <input name="FileUpload" type="file" id="FileUpload" />
            </div>
        </div>
        <div class="modal-footer">
            <a class="btn btn-info btn-small" onclick="Import()"> Đồng ý</a>
            <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
        </div>
    </form>
</div>
@* Import *@

<script src="~/Scripts/multiselect.js"></script>

<script>
    //$(document).ready(function () {
    //    debugger;
    //    window.prettyPrint && prettyPrint();

    //    $('#search').multiselect({
    //        search: {
    //            left: '<input type="text" name="q" class="form-control" placeholder="Search..." />',
    //            right: '<input type="text" name="q" class="form-control" placeholder="Search..." />',
    //        },
    //        fireSearch: function (value) {
    //            return value.length > 3;
    //        }
    //    });
    //});

    function checkTextbox() {
        if ($("#tat_ca_chi_nhanh").prop("checked") == true) {
            $("#tat_ca_chi_nhanh").attr("checked", true);
            $("#tat_ca_chi_nhanh").val("true");
        }
        else {
            $("#tat_ca_chi_nhanh").attr("checked", false);
            $("#tat_ca_chi_nhanh").val("false");
        }
    }
    $(document).ready(function () {
        $('#FileUpload').ace_file_input({
            no_file: 'Chưa chọn tập tin ...',
            btn_choose: 'Chọn',
            btn_change: 'Thay đổi',
            droppable: false,
            onchange: null,
            thumbnail: false, //| true | large
            allowExt: ['gif', 'png', 'jpg', 'jpeg', 'xlsx', 'xls', 'doc', 'docx', 'pdf'],
            denyExt: ['exe', 'php'],
            maxSize: 5120000,
            //onchange:''
            before_change: function (files, dropped) {
                var allowed_files = [];
                for (var i = 0 ; i < files.length; i++) {
                    var file = files[i];
                    if (typeof file === "string") {
                        //IE8 and browsers that don't support File Object
                        if (!(/\.(xlsx|xls)$/i).test(file))
                            //if (!(/\.(jpe?g|png|gif|bmp|doc|docx|xlsx|xls|pdf)$/i).test(file))
                            return false;
                    }
                    else {
                        var type = $.trim(file.type);
                        var isValidLength = type.length > 0;
                        var isApplication = (/^application\/(pdf|msword|vnd.openxmlformats-officedocument.spreadsheetml.sheet)$/i).test(type);
                        //var isValidFileName = (/\.(jpe?g|png|gif|bmp|doc|docx|xlsx|xls|pdf)$/i).test(file.name);
                        var isValidFileName = (/\.(xlsx|xls)$/i).test(file.name);
                        //var isImage = (/^image\/(jpe?g|png|gif|bmp)$/i).test(type);
                        if (isValidLength) {
                            if (!isApplication && !isValidFileName) {
                                alert('Sai định dạng file(*.xlsx,*.xls): ' + file.name);
                                continue;
                            }
                        } else {
                            continue;
                        }
                    }

                    allowed_files.push(file);
                }
                if (allowed_files.length === 0) return false;
                return allowed_files;
            }
        });
    });
    function Import() {
        $('#importForm').submit();
    }
    function showConfirmPopupImport(e) {
        $('#popup-import').modal('show');
    }

    function onCloseForm() {
        $('#txtcontent').val('');
        $('.modal').modal('hide');
    }
    $("#importForm").validate({
        submitHandler: function (form) {
            $("#importForm").ajaxSubmit({
                uploadProgress: function (event, position, total, percentComplete) { },
                success: function (data) {
                    if (data.success) {
                        $("#grid").data("kendoGrid").dataSource.read();
                        if (data.totalError > 0) {
                            $.gritter.add({
                                title: 'Lỗi',
                                text: "Có dòng lỗi, tải về để sửa lại.",
                                class_name: 'gritter-error'
                            });
                            window.open(r + "/ExcelImport/" + data.link, "_blank");
                        }
                        else {
                            $.gritter.add({
                                title: '',
                                text: "Nhập thành công " + data.total + " trang",
                                class_name: 'gritter-success',
                                button: 'zzz'
                            });
                        }
                        $('#FileUpload').ace_file_input('reset_input');
                    } else {
                        $.gritter.add({
                            title: '',
                            text: "Báo lỗi " + data.message,
                            class_name: 'gritter-error',
                            button: 'zzz'
                        });
                    }
                    onCloseForm();
                }
            });
        },
    });
</script>

<script>
   
    $("#listStatus").chosen();
    $("#listCNPBPGD").chosen();
    $("#listChucVu").chosen();

    function filter() {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_nguoi_dung", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_nguoi_dung", operator: "contains", value: text });
            filterOr.filters.push({ field: "email", operator: "contains", value: text });
            filterOr.filters.push({ field: "dien_thoai", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }

        var listStatus = $("#listStatus option:selected");
        var fillterStatus = { logic: "or", filters: [] };
        if (listStatus.length > 0) {
            for (var i = 0; i < listStatus.length; i++) {
                var option = listStatus[i].value;
                console.log(option);
                debugger;
                if (option != '') {
                    fillterStatus.filters.push({ field: "trang_thai", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterStatus);
        }

        var listDonVi = $("#listCNPBPGD option:selected");
        var fillterdonvi = { logic: "or", filters: [] };
        if (listDonVi.length > 0) {
            for (var i = 0; i < listDonVi.length; i++) {
                var option = listDonVi[i].value;
                if (option != '') {
                    fillterdonvi.filters.push({ field: "ma_chi_nhanh", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterdonvi);
        }

        var listChucVu = $("#listChucVu option:selected");
        var fillterchucvu = { logic: "or", filters: [] };
        if (listChucVu.length > 0) {
            for (var i = 0; i < listChucVu.length; i++) {
                var option = listChucVu[i].value;
                if (option != '') {
                    fillterchucvu.filters.push({ field: "cap_bac", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterchucvu);
        }

        grid.dataSource.filter(filter);
        console.log(text)
    }
    $('#btnGridExcel').bind('click', function () {
        $("#grid").getKendoGrid().saveAsExcel();
    });
    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        $('.date-picker').datepicker({ format: 'dd/mm/yyyy', autoclose: true, todayHighlight: true });
        if (data.id > 0) {
            if (data.listGroup != null) {
                var listGroup = $.map(data.listGroup, function (value, index) {
                    return [value];
                });
                console.log(listGroup);
                $("#groupId").data("kendoMultiSelect").value(listGroup);
            }
        }

        $("#multi_selectUsersBranch").multiSelect();
      
        var selectuserbranch = $.map(data.ListUserBranch, function (value, index) {
            return [value];
        });
        $("#multi_selectUsersBranch").val(selectuserbranch);
        $("#multi_selectUsersBranch").multiSelect('refresh');

        loadValidate(data);
    }
    function clearForm() {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    }
    function edit(e) {
        var data = $("#grid").data("kendoGrid").dataItem($(e).closest("tr"));
        $("#tabAdd").trigger("click");
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Chỉnh sửa người dùng')
        loadForm(data);
    }
    $("#tabList").bind('click', function () {       
        $('#tabAdd').css('display', 'none');
    });
    $('#btnGridAdd').bind('click', function () {
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Thêm người dùng')
        $("#tabAdd").trigger("click");
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    })
  
    var reset = false;
    function saveAndClear() {
        reset = true;
        $('#EditForm').submit();
    }
    function loadValidate() {
        $("#EditForm").validate({
            rules: {
                'ma_nguoi_dung': { required: true },
                'mat_khau': { required: true },
                'ten_nguoi_dung': { required: true },
                'email': { required: true },
                'ma_nhan_vien': { required: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    clearForm: false,
                    success: function (data) {
                        if (data.success) {
                            $("#grid").data("kendoGrid").dataSource.read()
                            $.gritter.add({
                                text: "Lưu thành công",
                                class_name: 'gritter-success'
                            });
                            if (reset) {
                                reset = false;
                                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                            }
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }

                    }
                });
                return false;
            }
        });
    }
    var Id;
    function removeUser(id) {
        $('#popup-confirm').modal('show');
        Id = id;
    }
    function Delete() {
        $.post(r + "/Users/Delete", { id: Id }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Xóa thành công",
                    class_name: 'gritter-success'
                });
                $("#grid").data("kendoGrid").dataSource.read();
                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
            } else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'error-success'
                });
            }
        })
    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#grid").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function filterLevel() {
        return {
            Position: $("#Position").val()
        };
    }
    function successUploadImage(e) {
        var imagePath = e.files[0];
        $('#imgDisplayAvatar').attr('src', imagePath.name);
    }
    function Databound() {
        resizeGrid();
        var grid = $("#grid").data("kendoGrid");
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            pageSize: grid.dataSource.total(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });
        var $exportLink = grid.element.find('.export');
        var href = $exportLink.attr('href');
        if (href) {
            href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
            href = href.replace(/pageSize=([^&]*)/, 'pageSize=' + (requestObject.pageSize || '~'));
            href = href.replace(/page=([^&]*)/, 'page=' + (requestObject.page || '~'));
            href = href.replace(/sort=([^&]*)/, 'sort=' + (requestObject.sort || '~'));
            $exportLink.attr('href', href);
        }
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 12);
    }

    $('#btnGridResetPass').bind('click', function () {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $('#popup-resetpass').modal('show');
        }
        else {
            $.gritter.add({
                text: "Vui lòng chọn dữ liệu",
                class_name: 'gritter-error',
            });
            return false;
        }
    })

    $('#btnGridActive').bind('click', function () {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $('#popup-active').modal('show');
        }
        else {
            $.gritter.add({
                text: "Vui lòng chọn dữ liệu",
                class_name: 'gritter-error',
            });
            return false;
        }
    });

    $('#btnGridInactive').bind('click', function () {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $('#popup-inactive').modal('show');
        }
        else {
            $.gritter.add({
                text: "Vui lòng chọn dữ liệu",
                class_name: 'gritter-error',
            });
            return false;
        }
    });
    function Active() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $.post(r + "/Users/Active", { data: checkrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Cập nhật thành công",
                        class_name: 'gritter-success',
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#checkboxcheckAll").prop('checked', false);
                    $('#popup-active').modal('hide');
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error',
                    });

                }
            });
        }
        else {
            $.gritter.add({
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function Inactive() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $.post(r + "/Users/Inactive", { data: checkrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Cập nhật thành công",
                        class_name: 'gritter-success',
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#checkboxcheckAll").prop('checked', false);
                    $('#popup-inactive').modal('hide');
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error',
                    });

                }
            });
        }
        else {
            $.gritter.add({
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function ResetPass() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $.post(r + "/Users/ResetPass", { data: checkrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Cấp lại mật khẩu thành công",
                        class_name: 'gritter-success',
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#checkboxcheckAll").prop('checked', false);
                    $('#popup-resetpass').modal('hide');
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error',
                    });

                }
            });
        } else {
            $.gritter.add({
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }

</script>
