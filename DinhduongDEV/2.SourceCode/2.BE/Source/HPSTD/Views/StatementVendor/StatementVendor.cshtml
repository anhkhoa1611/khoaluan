@using HPSTD.Core.Entities;
@{
    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;

    ViewBag.Title = "NCC Báo giá";
    var listActive = new List<SelectListItem>
    {
    new SelectListItem{Text = "Đang hoạt động", Value = "DANG_HOAT_DONG"},
    new SelectListItem{Text = "Không hoạt động", Value = "KHONG_HOAT_DONG"},
    };
    ViewBag.listActive = listActive;
    var newData = new StatementVendorHeader();
    var newDataDetail = new StatementVendorDetail();
    newDataDetail.thue_vat = 10;
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">

<style>
    .form-actions {
        background: 0 0 !important;
        padding: 19px 10px !important;
    }

        .form-actions.right {
            text-align: right !important;
        }
</style>
<script src="~/Scripts/autoNumeric-min.js"></script>

@*<script src="~/Scripts/utilitycommon.js"></script>*@
<script src="~/Scripts/jquery.validate.min.js"></script>
<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid">
            <div class="col-sm-6">
                <div class="tabbable">
                    <ul class="nav nav-tabs tab-color-blue" id="myTab">
                        <li class="active">
                            <a data-toggle="tab" href="#home" aria-expanded="true" id="tabList">
                                NCC Báo giá
                            </a>
                        </li>
                        <li class="">
                            <a data-toggle="tab" href="#edit" aria-expanded="false" id="tabAdd" style="display:none;">
                                Thêm báo giá NCC
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding-bottom:0px!important">
                        <div id="home" class="tab-pane fade active in">
                            <div class="row-fluid widget-box">
                                <div class="span12">
                                    <div class="span4">
                                        @*<input type="text" class="span12" placeholder="Mã chính sách, Tên NCC, email, điện thoại" onkeyup="filter(this)" />*@
                                        <input type="text" id="txtSearch" class="span12" placeholder="Mã chính sách, Tên NCC, email, điện thoại" />
                                    </div>
                                    <div class="span2">
                                        <input type="text" class="date-picker" placeholder="Ngày báo giá" name="date_bao_gia" id="date_bao_gia">
                                    </div>
                                    <div class="span2">
                                        <input type="text" class="date-picker" placeholder="Ngày áp dụng" name="from_date" id="from_date">
                                    </div>
                                    <div class="span2">
                                        <input type="text" class="date-picker" placeholder="Ngày kết thúc" name="to_date" id="to_date">
                                    </div>
                                    <div class="span2">
                                        <button type="button" id="btnSearch" class="btn btn-primary btn-small btnSearch" onclick="filterToTrinh()" style="float:none">Lọc dữ liệu</button>
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid">
                                @(Html.Kendo().Grid<HPSTD.Core.Entities.StatementVendorHeader>()
                                        .Name("gridHeader")                                        
                                        .Columns(columns =>
                                        {
                                            columns.Bound(p => p.id)
                                                .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id='checkboxcheckAll' onClick='checkAll(this)' />")
                                                .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' # if (trang_thai != 'MOI') { # disabled # } # id='#=ma_to_trinh_ncc#' />")
                                                .Width(35).Filterable(false).Sortable(false);
                                            columns.Template(@<text></text>).HtmlAttributes(new { style = "text-align: center;" }).ClientTemplate("<span ><a class='btn btn-mini btn-warning' style ='width:40px' onclick='edit(this)'> Sửa </a></span>").Width(70);
                                            columns.Bound(p => p.ma_to_trinh_ncc).Width(100).Title("Mã tờ trình NCC");
                                            columns.Bound(p => p.ten_nha_cung_Cap).Width(150).Title("Tên nhà cung cấp");
                                            columns.Bound(p => p.dien_thoai).Width(140).Title("Điện thoại liên hệ");
                                            columns.Bound(p => p.ngay_bao_gia).Title("Ngày báo giá").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}");
                                            columns.Bound(p => p.ngay_ap_dung).Title("Ngày áp dụng").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}");
                                            columns.Bound(p => p.ngay_ket_thuc).Title("Ngày kết thúc").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}");
                                            columns.Bound(p => p.email).Width(140).Title("Email liên hệ");
                                            columns.Bound(p => p.dia_chi).Width(200).Title("Địa chỉ");
                                            columns.Bound(p => p.website).Width(200).Title("Website");
                                            columns.Bound(p => p.file_hop_dong).Width(200).Title("File Hợp đồng")
                                               .ClientTemplate("<div>#if(file_hop_dong == null){# " +
                                               "<span ></span> #}" +
                                               " else{# " +
                                               "<span ><a style='cursor:pointer; color:\\#428bca' href='#=file_hop_dong#'>#=file_hop_dong#</a></span> #}#" +
                                               "</div>");
                                            columns.Bound(p => p.file_bao_gia).Width(200).Title("File báo giá")
                                               .ClientTemplate("<div>#if(file_bao_gia == null){# " +
                                               "<span ></span> #}" +
                                               " else{# " +
                                               "<span ><a style='cursor:pointer; color:\\#428bca' href='#=file_bao_gia#'>#=file_bao_gia#</a></span> #}#" +
                                               "</div>");
                                            columns.Bound(p => p.ghi_chu).Width(200).Title("Ghi chú");
                                            columns.ForeignKey(p => p.trang_thai, (System.Collections.IEnumerable)ViewBag.listTrangThai, "ma_tham_so", "gia_tri").Title("Trạng Thái").Width(140);
                                            columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                                            columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
                                            columns.Bound(o => o.ngay_cap_nhat).Title("Ngày sửa").Format("{0:dd/MM/yyyy}").Width(110).
                                            ClientTemplate("#if(kendo.toString(ngay_cap_nhat,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(ngay_cap_nhat,'dd/MM/yyyy') #" + "#}#");
                                            columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
                                            columns.Bound(p => p.file_hop_dong).Hidden();
                                            columns.Bound(p => p.file_bao_gia).Hidden();
                                        })
                                        .ToolBar(toolbar =>
                                        {
                                            if (them)
                                            {
                                                toolbar.Custom().Text("Thêm").HtmlAttributes(new { @class = "btn btn-success", @Href = "javascript:void(0)", @onclick = "Create()" });
                                            }
                                            if (xoa)
                                            {
                                                toolbar.Custom().Text("Xóa").HtmlAttributes(new { @class = "btn btn-danger", @Href = "javascript:void(0)", @onclick = "showConfirmPopup(1)" });
                                            }
                                            if (them)
                                            {
                                                toolbar.Custom().Text("Duyệt").HtmlAttributes(new { @class = "btn btn-primary", @Href = "javascript:void(0)", @onclick = "showConfirmPopup(2)" });
                                            }
                                        })
                                        .Sortable()
                                        .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                                        .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                        .Pageable(p => p
                                            .Messages(m => m
                                                .Display("{0}-{1} của {2} dòng")
                                                .Empty("Không có dòng nào")
                                                .ItemsPerPage("dòng trên trang")
                                                .First("Trang kế")
                                                .Last("Trang tiếp")
                                                .Next("Đầu trang")
                                                .Previous("Cuối trang"))
                                        )
                                        .Scrollable()
                                        .Events(e => { e.DataBound("Databound"); })
                                        .Navigatable()
                                        .Excel(excel => excel
                                            .FileName("Chinhsachgia.xlsx")
                                            .Filterable(true).AllPages(true)
                                            .ProxyURL(Url.Action("Excel_Export", "Branch"))
                                         )
                                        .Reorderable(r => r.Columns(true))
                                        .Resizable(r => r.Columns(true))
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(20)
                                            //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                            .Model(model =>
                                            {
                                                model.Id(p => p.id);
                                            })

                                            .Read(read => read.Action("Read", "StatementVendor"))
                                        ))
                            </div>
                        </div>
                        <div id="edit" class="tab-pane fade">
                            <div class="span12 formEdit">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div id="popup-confirm" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
        <button type="button" class="btclose" data-dismiss="modal">&times;</button>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span id="txtcontent"></span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="Delete()">Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>
<script type="text/template" id="EditTemplate">
    <div class="row-fluid">
        <div class="span2">
            <input type="hidden" name="id" value="#=id#" />
            <input type="hidden" name="ma_to_trinh_ncc" value="#=ma_to_trinh_ncc#" />
            <input type="hidden" name="ma_to_trinh_ncc" value="#=ma_to_trinh_ncc#" />
            <div class="control-group">
                <label>Nhà cung cấp (*)</label>
                <div class="controls">
                    @*<select name="nha_cung_cap_id" class="span12" id="nha_cung_cap_id" data-placeholder="Nhà cung câp">
                            <option value="">--Chọn nhà cung cấp--</option>
                            @foreach (var item in ViewBag.listVendor)
                            {
                                <option value="@item.nha_cung_cap_id">@Html.Raw(item.ten_nha_cung_cap)</option>
                            }
                        </select>*@
                    @(Html.Kendo().DropDownList()
                        .Name("nha_cung_cap_id")
                        .DataTextField("ten_nha_cung_cap")
                        .DataValueField("nha_cung_cap_id")
                        .HtmlAttributes(new { @style = "width:100%;" })
                        .Filter("contains")
                        .OptionLabel("Nhà cung cấp")
                        .Value("#=nha_cung_cap_id !=null ? nha_cung_cap_id: ''#")
                        .BindTo(ViewBag.listVendor)
                        .ToClientTemplate()
                    )
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Mã tờ trình NCC</label>
                <div class="controls">
                    <input type="text" class="span12" onchange="isChangeHeader()" placeholder="Số HĐ" name="so_hop_dong" value="#=so_hop_dong!=null ? so_hop_dong : ''#">
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Ngày áp dụng</label>
                <div class="controls">
                    <input type="text" onchange="isChangeHeader()" class="span12 date-picker" placeholder="Ngày áp dụng" name="ngay_ap_dung" value="#=kendo.toString(kendo.parseDate(ngay_ap_dung),'dd/MM/yyyy') !='01/01/0001' && kendo.toString(kendo.parseDate(ngay_ap_dung),'dd/MM/yyyy') !='01/01/1900'  ? kendo.toString(kendo.parseDate(ngay_ap_dung),'dd/MM/yyyy'): ''#">
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Ngày kết thúc</label>
                <div class="controls">
                    <input type="text" onchange="isChangeHeader()" class="span12 date-picker" placeholder="Ngày kết thúc" name="ngay_ket_thuc" value="#=kendo.toString(kendo.parseDate(ngay_ket_thuc),'dd/MM/yyyy') !='01/01/0001' && kendo.toString(kendo.parseDate(ngay_ket_thuc),'dd/MM/yyyy') !='01/01/1900'  ? kendo.toString(kendo.parseDate(ngay_ket_thuc),'dd/MM/yyyy'): ''#">
                </div>
            </div>
        </div>

        <div class="span2">
            <div class="control-group">
                <label>Ghi chú</label>
                <div class="controls">
                    <input type="text" class="span12" onchange="isChangeHeader()" placeholder="Ghi chú" name="ghi_chu" value="#=ghi_chu!=null ? ghi_chu : ''#">
                </div>
            </div>
        </div>

    </div>
    <div class="row-fluid">
        <form action="@Url.Content("~/StatementVendor/UploadFile")" method="post" id="importForm" enctype="multipart/form-data" class="form-inline" style="margin:0px">
            <div class="span2">
                <input type="hidden" id="ma_ttncc" name="ma_ttncc" />
                <div class="control-group">
                    <label>File hợp đồng </label>
                    <div class="row-fluid form-horizontal">
                        <input name="FileUploadHD" type="file" id="FileUploadHD" />
                    </div>
                </div>

            </div>
            <div class="span2">
                <div class="control-group">
                    <label>File Báo giá </label>
                    <div class="row-fluid form-horizontal">
                        <input name="FileUploadBG" type="file" id="FileUploadBG" />
                    </div>
                </div>
            </div>
        </form>
        <div class="span2">
            <div class="control-group">
                <label>Ngày báo giá</label>
                <div class="controls">
                    <input type="text" onchange="isChangeHeader()" class="span12 date-picker" placeholder="Ngày báo giá" name="ngay_bao_gia" value="#=kendo.toString(kendo.parseDate(ngay_bao_gia),'dd/MM/yyyy') !='01/01/0001' && kendo.toString(kendo.parseDate(ngay_bao_gia),'dd/MM/yyyy') !='01/01/1900'  ? kendo.toString(kendo.parseDate(ngay_bao_gia),'dd/MM/yyyy'): ''#">
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span2">
            <div class="control-group">
                <a id="linkFileUploadHD"></a>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <a id="linkFileUploadBG"></a>
            </div>
        </div>
    </div>

    <div class="row-fluid" id="templateDetail">
        <h4>Danh sách giá vật tư NCC</h4>
        @(Html.Kendo()
            .Grid<HPSTD.Core.Entities.StatementVendorDetail>
                ()
                .Name("gridDetail")
                .Columns(columns =>
                {

                    columns.Template(@<text></text>).HeaderHtmlAttributes(new { @style = "text-align: center" })
                            .ClientTemplate("<span>\\#if(id==0){\\#<span></span>\\#}else{\\#<a class='btn btn-danger btn-mini' onclick='removeDetail(\\#=id\\#)'><i class='fa fa-trash'></i></a>\\#}\\#</span>").Width(40);

                    columns.ForeignKey(p => p.ma_vat_tu, (System.Collections.IEnumerable)ViewBag.listProduct, "ma_san_pham", "ten_san_pham")
                    .Title("Tên hàng hóa, dịch vụ").Width(400).EditorTemplateName("GridNullableForeignKey")
                    .HtmlAttributes("style='cursor:pointer; color:\\#040001;'").HtmlAttributes(new { columnname = "vat_tu" });
                    columns.Bound(p => p.ma_vat_tu).HtmlAttributes(new { columnname = "ma_vat_tu" }).Title("Mã hàng hóa, dịch vụ").Width(200);
                    columns.ForeignKey(p => p.don_vi_tinh, (System.Collections.IEnumerable)ViewBag.listDonViTinh, "ma_tham_so", "gia_tri")
                    .Title("Đơn vị tính").Width(150)
                    .HtmlAttributes("style='cursor:pointer; color:\\#040001;'").HtmlAttributes(new { columnname = "don_vi_tinh" });
                    columns.Bound(p => p.sl_min).Width(140).Title("SL tối thiểu").HtmlAttributes(new { columnname = "sl_min" }).Format("{0:N0}"); ;
                    columns.Bound(p => p.sl_max).Width(140).Title("SL tối đa").HtmlAttributes(new { columnname = "sl_max" }).Format("{0:N0}"); ;
                    columns.Bound(p => p.gia_bao).Width(140).Title("Giá báo").HtmlAttributes(new { columnname = "gia_bao" }).Format("{0:N0}"); ;
                    columns.Bound(p => p.thue_vat).Width(80).Title("Thuế VAT").HtmlAttributes(new { columnname = "thue_vat" }).Format("{0:N0} %"); ; ;
                    columns.Bound(p => p.gia_bao_gom_vat).Width(140).Title("Giá bao gồm VAT").Format("{0:N0}"); ;
                    columns.Bound(p => p.ngay_ap_dung).Title("Ngày áp dụng").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").EditorTemplateName("Date")
                    .HtmlAttributes(new { columnname = "ngay_ap_dung" });
                    columns.Bound(p => p.ngay_ket_thuc).Title("Ngày kết thúc").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").EditorTemplateName("Date")
                        .HtmlAttributes(new { columnname = "ngay_ket_thuc" });

                })
                    .ToolBar(toolBar =>
                    {
                    toolBar.Template(@<text>
                            <div class="pull-left">
                                <a class="btn btn-warning btn-small" href="javascript:void(0)" onclick="AddDetail()" id="btnAddProduct">
                                    <i class="icon-plus"></i> Thêm sản phẩm
                                    <input type="number" id="so_dong_them" class="span4" value="2" min="1" max="20"
                                           style="font-size: small;background-color: \\#ffb752;color: \\#a61818;border: none; text-align: center; min-height:22px;" />
                                </a>

                                <a class="btn btn-default btn-small" href="javascript:void(0)" onclick="cancelChange()">Hủy</a>

                            </div>
                    </text>);

                    })
                //.Sortable()
                        .Editable(editable => editable.Mode(GridEditMode.InCell))
                        .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                        .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                        .Pageable(p => p
                        .Messages(m => m
                        .Display("{0}-{1} của {2} dòng")
                        .Empty("Không có dòng nào")
                        .ItemsPerPage("dòng trên trang")
                        .First("Trang kế")
                        .Last("Trang tiếp")
                        .Next("Đầu trang")
                        .Previous("Cuối trang")
                        )
                        )
                        .Scrollable()
                        .Events(e => { e.DataBound("onDatabound"); e.Edit("onEdit"); e.Save("onSave"); })
                        .Navigatable()
                        .Reorderable(r => r.Columns(true))
                        .Resizable(r => r.Columns(true))
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .Batch(true)
                        .PageSize(20)
                        .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); events.Change("onChange"); })
                        .Model(model =>
                        {
                            model.Field(p => p.thue_vat).DefaultValue(10);
                            model.Field(p => p.don_vi_tinh).Editable(false);
                            model.Field(p => p.gia_bao_gom_vat).Editable(false);
                            model.Field(p => p.ngay_cap_nhat).Editable(false);
                            model.Field(p => p.ngay_tao).Editable(false);
                            model.Id(p => p.id);
                        })
                            .Create(c => c.Action("Update", "StatementVendor").Data("getHeader"))
                            .Update(c => c.Action("Update", "StatementVendor").Data("getHeader"))
                            .Read(read => read.Action("ReadDetail", "StatementVendor", new { ma_to_trinh_ncc = "" }))
                        ).ToClientTemplate())
    </div>

    <div class="row-fluid fixed" style="position: fixed;bottom: 0;right: 0;">
        <div class="form-actions pull-right" style="width:100%; padding-right:10px !important; padding-top:5px !important; padding-bottom:5px !important; margin:0px; background-color: whitesmoke !important">
            <div style="float:right">
                <a onclick="SavePageOne()" class="btn btn-info btn-small" id="btnLuu">Lưu</a>
                <a onclick="saveAndClear()" class="btn btn-primary btn-small" id="btnLuuNew">Lưu &amp; Mới</a>
                <a onclick="Approve()" class="btn btn-primary btn-small" id="btnDuyet">Duyệt</a>
            </div>
        </div>
    </div>
</script>

<div id="popup-confirmHead" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="DeleteList()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>

<div id="popup-approve" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn duyệt dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="ApproveList()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>

<div id="popup-confirmDetail" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="DeleteDetail()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>

<script>
    $(document).ready(function () {

    })
    function loadValidate() {
        $("#importForm").validate({
            rules: {
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                $("#importForm").ajaxSubmit({
                    clearForm: false,
                    success: function (data) {
                        if (data.success) {
                            $.gritter.add({
                                text: "Thành công",
                                class_name: 'gritter-success'
                            });

                            $('#linkFileUploadHD').prop("href", r + data.data.file_hop_dong)
                            $('#linkFileUploadHD').text('');
                            if (data.data.file_hop_dong != null)
                                $('#linkFileUploadHD').text('Download file');

                            $('#linkFileUploadBG').prop("href", r + data.data.file_bao_gia)
                            $('#linkFileUploadBG').text('');
                            if (data.data.file_bao_gia != null)
                                $('#linkFileUploadBG').text('Download file');

                        } else {
                            $.gritter.add({
                                title: '',
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }
                    }
                });
            },
        });
    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $('#gridHeader').find(".checkrowid:not(:disabled)").each(function () {
            $(this).prop('checked', x);
        });
    }
    function showConfirmPopup(e) {
        var listrowid = "";
        $('#gridHeader').find(".checkrowid:not(:disabled)").each(function () {
            if ($(this).prop('checked') == true) {
                listrowid += $(this).attr("id") + '@@@@';
            }
        });

        if (listrowid != "" && listrowid != null) {
        }
        else {
            $.gritter.add({
                title: '',
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
            return;
        }

        if (e == 1) {
            deleteId = 1;
            $("#divMaskPopup").show();
            $('#popup-confirmHead').modal('show');
        }
        else {
            $("#divMaskPopup").show();
            $('#popup-approve').modal('show');
        }
    }


    function Approve() {
        $.post(r + "/StatementVendor/ApproveList", { data: ma_to_trinh_ncc }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Duyệt thành công",
                    class_name: 'gritter-success'
                });
                $("#gridHeader").data("kendoGrid").dataSource.read();
                $("#tabList").trigger("click");
            }
            else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'gritter-error'
                });
            }
            $('#popup-approve').modal('hide');
        });
    }

    function ApproveList() {
        var listrowid = "";
        $('#gridHeader').find(".checkrowid:not(:disabled)").each(function () {
            if ($(this).prop('checked') == true) {
                listrowid += $(this).attr("id") + '@@@@';
            }
        });
        if (listrowid != "" && listrowid != null) {
            $.post(r + "/StatementVendor/ApproveList", { data: listrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Duyệt thành công",
                        class_name: 'gritter-success'
                    });
                    $("#gridHeader").data("kendoGrid").dataSource.read();
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error'
                    });
                }
                $('#popup-approve').modal('hide');
            });
        }

    }

    function DeleteList() {
        if (deleteId == 1) {
            var listrowid = "";
            $('#gridHeader').find(".checkrowid:not(:disabled)").each(function () {
                if ($(this).prop('checked') == true) {
                    listrowid += $(this).attr("id") + '@@@@';
                }
            });
            if (listrowid != "" && listrowid != null) {
                $.post(r + "/StatementVendor/DeleteList", { data: listrowid }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: "Xóa thành công",
                            class_name: 'gritter-success'
                        });
                        $("#gridHeader").data("kendoGrid").dataSource.read();
                    }
                    else {
                        $.gritter.add({
                            text: data.error,
                            class_name: 'gritter-error'
                        });
                    }
                    $('#popup-confirmHead').modal('hide');
                });
            }
        }

    }

    var ma_to_trinh_ncc;
    var ngay_ap_dung_header;
    var ngay_ket_thuc_header;
    $(document).ready(function () {
        $('#FileUploadBG,#FileUploadHD').ace_file_input({
            no_file: 'chưa có file...',
            btn_choose: 'Chọn',
            btn_change: 'Thay đổi',
            droppable: false,
            onchange: null,
            thumbnail: false
        });
    });


    //BaoHV add
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
        }
    }
    var idDetail;
    function removeDetail(e) {
        if (trang_thai == '@AllConstant.TRANGTHAI_MOI') {
            $('#popup-confirmDetail').modal('show');
            idDetal = e;
        }
        else {
            $.gritter.add({
                text: 'Không thể xóa phiếu đã duyệt',
                class_name: 'gritter-error'
            });
        }
    }

    function DeleteDetail() {
        $.post(r + "/StatementVendor/DeleteDetail", { id: idDetal }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Xóa thành công",
                    class_name: 'gritter-success'
                });
                $("#gridDetail").data("kendoGrid").dataSource.read({ ma_to_trinh_ncc: ma_to_trinh_ncc });
                $('#popup-confirmDetail').modal('hide');
            } else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'gritter-error'
                });
            }
        })
    }
    function onRequestEnd(e) {
        if (e.type == "update" || e.type == "create" || e.type == "delete") {
            if (e.response.success) {
                $("input[name='id']").val(e.response.IdHead);
                $("#ma_ttncc").val(e.response.ma_ttncc);
                $("#gridHeader").data("kendoGrid").dataSource.read();
                if ($('#FileUploadBG').val() != "" || ($('#FileUploadHD').val() != "")) {
                    $("#importForm").submit();

                    //$.ajax({
                    //    type: "POST",
                    //    async: false,
                    //    url: r + "/PricePolicy/UploadFile",
                    //    data: { ma_csg: e.response.ma_csg },
                    //    success: function (data) {
                    //        if (data.success) {
                    //            $.gritter.add({
                    //                text: "Thành công",
                    //                class_name: 'gritter-success'
                    //            });
                    //        } else {
                    //            $.gritter.add({
                    //                title: '',
                    //                text: data.error,
                    //                class_name: 'gritter-error'
                    //            });
                    //        }
                    //    }
                    //});
                }
                else {
                    $.gritter.add({
                        text: "Thành công",
                        class_name: 'gritter-success'
                    });
                }
            }
            else {
                $.gritter.add({
                    title: '',
                    text: e.response.error,
                    class_name: 'gritter-error'
                });
            }

        }
    }

    function convertDate(str) {
        var splitDate = str.split('/');
        var day = splitDate[0];
        var month = splitDate[1];
        var year = splitDate[2];
        return year + "/" + month + "/" + day;
    }

    function getHeader() {
        var obj = {};
        obj.id = $("input[name='id']").val();
        obj.ma_to_trinh_ncc = $("input[name='ma_to_trinh_ncc']").val();
        obj.nha_cung_cap_id = $('#nha_cung_cap_id').val();
        obj.ngay_ap_dung = convertDate($("input[name='ngay_ap_dung']").val());
        obj.ngay_ket_thuc = convertDate($("input[name='ngay_ket_thuc']").val());
        obj.ngay_bao_gia = convertDate($("input[name='ngay_bao_gia']").val());
        obj.ghi_chu = $("input[name='ghi_chu']").val();
        obj.so_hop_dong = $("input[name='so_hop_dong']").val();
        return {
            inputHead: obj,
        }
    }
    var isChange = false;
    function isChangeHeader() {
        isChange = true;
    }
    function onEdit(e) {
        // numberFormatCustom(e);
    }
    function SavePageOne() {
        if (SaveCheck()) {
            $('#gridDetail').data('kendoGrid').saveChanges();
        }
    }
    function saveAndClear() {
        if (SaveCheck()) {
            $('#gridDetail').data('kendoGrid').saveChanges();
            clearForm();
        }
    }
    function cancelChange() {
        $("#gridDetail").data("kendoGrid").dataSource.cancelChanges();
    }
    function onSave(e) {
        if (e.container.attr('columnname') == 'sl_min') {
            var sl_min = e.values.sl_min;
            var sl_max = e.model.sl_max;
            if (sl_min >= sl_max && sl_max > 0) {
                $.gritter.add({
                    title: 'Lỗi ',
                    text: 'Số lượng tối thiểu không thể lớn số lượng tối đa',
                    class_name: 'gritter-error',
                    time: 3000
                });
                e.preventDefault();
                return;
            }
            else {
                e.model.sl_min = sl_min;
                $(e.container).html(kendo.toString(sl_min, "n0"));
            }
        }
        if (e.container.attr('columnname') == 'sl_max') {
            var sl_max = e.values.sl_max;
            var sl_min = e.model.sl_min;
            if (sl_min >= sl_max) {
                $.gritter.add({
                    title: 'Lỗi ',
                    text: 'Số lượng tối thiểu không thể lớn số lượng tối đa',
                    class_name: 'gritter-error',
                    time: 3000
                });
                e.preventDefault();
                return;
            }
            else {
                e.model.sl_max = sl_max;
                $(e.container).html(kendo.toString(sl_max, "n0"));
            }
        }
        if (e.container.attr('columnname') == 'gia_bao') {
            var sl_min = e.model.sl_min;
            var sl_max = e.model.sl_max;
            if (sl_min > sl_max) {
                $.gritter.add({
                    title: 'Lỗi ',
                    text: 'Số lượng tối thiểu không thể lớn số lượng tối đa',
                    class_name: 'gritter-error',
                    time: 3000
                });
                e.preventDefault();
                return;
            }
            var gia_bao = e.values.gia_bao;
            var thue_vat = e.model.thue_vat;
            var gia_bao_gom_vat = gia_bao + Math.round((gia_bao / 100) * thue_vat, 0);
            e.model.gia_bao_gom_vat = gia_bao_gom_vat;
            e.model.gia_bao = gia_bao;
            $(e.container).html(kendo.toString(gia_bao, "n0"));
            $(e.container).next().next().html(kendo.toString(gia_bao_gom_vat, "n0"));
        }
        if (e.container.attr('columnname') == 'thue_vat') {
            var thue_vat = e.values.thue_vat;
            var gia_bao = e.model.gia_bao;
            var gia_bao_gom_vat = gia_bao + Math.round((gia_bao / 100) * thue_vat, 0);
            e.model.gia_bao_gom_vat = gia_bao_gom_vat;
            e.model.thue_vat = thue_vat;
            $(e.container).prev().html(kendo.toString(gia_bao, "n0"));
            $(e.container).next().html(kendo.toString(gia_bao_gom_vat, "n0"));
        }

    }
    function SaveCheck() {
        //validate tay
        var ma_ncc = $('#nha_cung_cap_id').val();
        if (ma_ncc == "") {
            $.gritter.add({
                title: '',
                text: 'Chọn nhà cung cấp',
                class_name: 'gritter-error'
            });
            $('#nha_cung_cap_id').focus();
            return false;
        }
        var ngaybaogia = $("input[name='ngay_bao_gia']").val();
        if (ngaybaogia == "") {
            $.gritter.add({
                title: '',
                text: 'Chọn ngày báo giá',
                class_name: 'gritter-error'
            });
            $("input[name='ngay_bao_gia']").focus();
            return false;
        }
        else {
            return true;
        }
    }
    function AddDetail() {
        if (SaveCheck()) {
            var so_dong = $('#so_dong_them').val();
            for (var i = 0; i < so_dong; i++) {
                $("#gridDetail").data("kendoGrid").dataSource.insert({
                    id: 0,
                    ma_vat_tu: '',
                    don_vi_tinh: '',
                    sl_min: 0,
                    sl_max: 0,
                    gia_bao: 0,
                    thue_vat: 10,
                    gia_bao_gom_vat: 0,
                    ngay_ap_dung: $("input[name='ngay_ap_dung']").val() ? $("input[name='ngay_ap_dung']").val() : new Date(),
                    ngay_ket_thuc: $("input[name='ngay_ket_thuc']").val() ? $("input[name='ngay_ket_thuc']").val() : new Date(),
                });
            }
        }
    }
    loadForm(@Html.Raw(Json.Encode(newData)));
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        $('.date-picker').datepicker({ format: 'dd/mm/yyyy', autoclose: true, todayHighlight: true });
    }
    function clearForm() {
        loadForm(@Html.Raw(Json.Encode(newData)));
    }

    var trang_thai;
    function edit(e) {
        var data = $("#gridHeader").data("kendoGrid").dataItem($(e).closest("tr"));
        $("#tabAdd").trigger("click");
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Chỉnh sửa chính sách giá')
        loadForm(data);
        loadValidate(data);

        $('#linkFileUploadHD').prop("href", r + data.file_hop_dong)
        $('#linkFileUploadHD').text('');
        if (data.file_hop_dong != null)
            $('#linkFileUploadHD').text('Download file');

        $('#linkFileUploadBG').prop("href", r + data.file_bao_gia)
        $('#linkFileUploadBG').text('');
        if (data.file_bao_gia != null)
            $('#linkFileUploadBG').text('Download file');

        $("#gridDetail").data("kendoGrid").dataSource.read({ ma_to_trinh_ncc: data.ma_to_trinh_ncc });
        ma_to_trinh_ncc = data.ma_to_trinh_ncc;
        ngay_ap_dung_header = data.ngay_ap_dung;
        ngay_ket_thuc_header = data.ngay_ket_thuc;
        $("#nha_cung_cap_id").val(data.nha_cung_cap_id);
        $("#nha_cung_cap_id").attr('disabled', 'true');

        $('#btnLuu').hide();
        $('#btnLuuNew').hide();
        $('#btnAddProduct').hide();
        $('#btnDuyet').hide();

        trang_thai = data.trang_thai;

        if (data.trang_thai == '@AllConstant.TRANGTHAI_MOI') {
            $('#btnLuu').show();
            $('#btnLuuNew').show();
            $('#btnAddProduct').show();
            $('#btnDuyet').show();
        }
    }
    $("#tabList").bind('click', function () {
        @*$('#tabAdd').text('').append('Thêm chính sách giá');
        loadForm(@Html.Raw(Json.Encode(newData)));*@
        $('#tabAdd').css('display', 'none');
    });

    @*$("#tabAdd").bind('click', function () {
        $('#tabAdd').text('').append('Thêm chính sách giá');
        loadForm(@Html.Raw(Json.Encode(newData)));

    });*@

    function Create() {
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Thêm báo giá NCC')
        $("#tabAdd").trigger("click");
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
        loadValidate();
    }

    function currencyToNumber(currency) {
        if (currency == "" || !currency) {
            return 0;
        }
        return parseFloat(currency.split(",").join(''));
    }
    function numberToCurrency(number) {
        return (parseFloat(number) + "").replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
    }
    var reset = false;
    function Databound() {
        resizeGrid();

    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#gridHeader').offset().top);
        var gridElement = $("#gridHeader"),
            dataArea = gridElement.find(".k-grid-content"),
            otherElements = gridElement.children().not(".k-grid-content"),
            otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 25);
    }
    //function filter(e) {
    //    grid = $("#gridHeader").data("kendoGrid");
    //    var filter = { logic: "and", filters: [] };
    //    var text = e.value;

    //    if (text) {
    //        var filterOr = { logic: "or", filters: [] };
    //        filterOr.filters.push({ field: "ma_to_trinh_ncc", operator: "contains", value: text });
    //        filterOr.filters.push({ field: "ten_nha_cung_Cap", operator: "contains", value: text });
    //        filterOr.filters.push({ field: "dien_thoai", operator: "contains", value: text });
    //        filterOr.filters.push({ field: "email", operator: "contains", value: text });
    //        filter.filters.push(filterOr);
    //    }

    //    grid.dataSource.filter(filter);
    //}

    function filterToTrinh() {

        //if ($("#ma_don_vi").val() != "" && $("#ma_don_vi").val() != null) {
        grid = $("#gridHeader").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearch").val();

        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_to_trinh_ncc", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_nha_cung_Cap", operator: "contains", value: text });
            filterOr.filters.push({ field: "dien_thoai", operator: "contains", value: text });
            filterOr.filters.push({ field: "email", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        var from_bao_gia = $('#date_bao_gia').val();
        if (from_bao_gia) {
            var from = from_bao_gia.trim().split("/");
            var startdate = new Date(from[2], from[1] - 1, from[0]);
            filter.filters.push({ field: "ngay_bao_gia", operator: "gte", value: kendo.toString(startdate, 'yyyy-MM-dd') });
        }

        var from_date = $('#from_date').val();
        if (from_date) {
            var from = from_date.trim().split("/");
            var startdate = new Date(from[2], from[1] - 1, from[0]);
            filter.filters.push({ field: "ngay_ap_dung", operator: "gte", value: kendo.toString(startdate, 'yyyy-MM-dd') });
        }

        var to_date = $('#to_date').val();
        if (to_date) {
            var to = to_date.trim().split("/");
            var todate = new Date(to[2], to[1] - 1, to[0]);
            todate.setDate(todate.getDate() + 1);
            filter.filters.push({ field: "ngay_ket_thuc", operator: "lt", value: kendo.toString(todate, 'yyyy-MM-dd') });
        }

        grid.dataSource.filter(filter);
    }

    function onDatabound(e) {
        //var data = e.sender.dataSource._data;
        //if (data.length == 0) {
        //    AddDetail();
        //}
        var dataSource = $("#gridDetail").data("kendoGrid").dataSource.data();
        for (item in dataSource) {
            dataSource[item].dirty = true;
        }
    }

    function onChange(e) {
        //var model = $('#grid').data('kendoGrid').dataItem($(e.container).closest("tr"));
        var model = e.items[0];
        if (model != null) {
            if (model.ma_vat_tu != "")
                $.ajax({
                    type: "GET",
                    async: false,
                    url: r + "/Product/GetProductByCode",
                    data: { ma_san_pham: model.ma_vat_tu },
                    success: function (data) {
                        if (data.success) {
                            model.don_vi_tinh = data.data.ma_don_vi_tinh;
                            model.ma_vat_tu = data.data.ma_san_pham;
                            $("#gridDetail").find("tr[data-uid='" + model.uid + "'] td[columnname='ma_vat_tu']").text(data.data.ma_san_pham);
                            $("#gridDetail").find("tr[data-uid='" + model.uid + "'] td[columnname='don_vi_tinh']").text(data.dvt.gia_tri);
                        }
                    }
                });
        }
    }
</script>
