@using HPSTD.Models;
@using HPSTD.Helpers;
@{

    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;

    ViewBag.Title = "Quản lý Users";
    var listActive = new List<SelectListItem>
{
new SelectListItem{Text = "Hoạt động", Value = "true"},
new SelectListItem{Text = "Ngưng hoạt động", Value = "false" },
};
    ViewBag.listActive = listActive;

    var newData = new User();
    var listDomain = Utilities.getDomain();
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" />
<link href="~/Content/assets/global/plugins/jquery-multi-select/css/multi-select.css" rel="stylesheet" />
<script src="~/Content/assets/global/plugins/jquery-multi-select/js/jquery.multi-select.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="@Url.Content("~/Scripts/jquery.blockUI.js")"></script>

<style>
    .form-actions {
        background: 0 0 !important;
        padding-right: 0px;
        padding-top: 20px !important;
        padding-bottom: 0px !important;
        border-top: 1px solid #e5e5e5;
        margin-top: 0px;
        margin-bottom: 0px;
    }

        .form-actions.right {
            text-align: right !important;
        }


    .k-dropdown-wrap {
        padding-top: 3px;
    }

    .modal-add-user {
        width: 80% !important;
        left: 25% !important;
    }

    .btn-collapse {
        width: 100%;
        text-align: left;
        border: none;
        padding: 5px;
        font-size: 16px;
        color: #fff;
        background: #147682;
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>
<div class="row-fluid widget-box">
    <div class="span12">
        <input type="text" id="txtSearch" class="span3" placeholder="Nhập mã người dùng, tên người dùng, email, điện thoại" onchange="filter()" />
        <select name="select" id="listStatus" class='chosen-select span2' data-placeholder="Chọn trạng thái..." multiple onchange="filter()">
            <option value="true">Hoạt động</option>
            <option value="false">Ngưng hoạt động </option>
        </select>

        <select name="select" id="listCNPBPGD" class='chosen-select span4' data-placeholder="Chọn chi nhánh..." multiple onchange="filter()">
            <option value=""></option>
            @foreach (var item in ViewBag.listCNPBPGD)
            {
                <option value="@item.ma_chi_nhanh">@item.ten_chi_nhanh</option>
            }
        </select>
        <button type="button" class="btn btn-small btn-primary" onclick="filter()">Lọc</button>
        <button type="button" id="btnSearch" class="btn btn-grey btn-small" onclick="cancelFilter()">Hủy lọc</button>
    </div>
</div>
<div class="row-fluid">

    <div class="tabbable">
        <ul class="nav nav-tabs tab-color-blue" id="myTab">
            <li class="active">
                <a data-toggle="tab" href="#home" aria-expanded="true" id="tabList">Danh sách quản lý</a>
            </li>
            <li class="">
                <a data-toggle="tab" href="#edit" aria-expanded="true" id="tabAdd">Danh sách người dùng</a>
            </li>
        </ul>
        <div class="tab-content" style="padding-bottom:0px!important">
            <div id="home" class="tab-pane fade active in">
                @(Html.Kendo()
                    .Grid<HPSTD.Models.User>()
                    .Name("grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.id).HeaderTemplate("<input  type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />").ClientTemplate("#if(ma_nguoi_dung!='administrator'){# <input class='checkrowid' type='checkbox' id='#=id#' />#}#").Width(25).Filterable(false).Sortable(false).HtmlAttributes(new { style = "text-align:center" });
                        columns.Template(@<text></text>).HtmlAttributes(new { style = "text-align: center;" }).ClientTemplate("<span ><a class='btn btn-mini btn-warning' style ='width:40px' onclick='edit(this)'> Sửa </a></span>").Width(70);
                    columns.Bound(p => p.ma_nguoi_dung).Width(100).Title("Tên đăng nhập");
                    columns.Bound(p => p.ten_nguoi_dung).Width(180).Title("Họ tên");
                    columns.ForeignKey(p => p.gioi_tinh, (System.Collections.IEnumerable)ViewBag.listGender, "ma_tham_so", "gia_tri").Title("Giới tính").Width(60);
                    columns.Bound(p => p.email).Width(180).Title("Email");
                    columns.Bound(p => p.dien_thoai).Width(90).Title("Điện thoại");
                        columns.Bound(p => p.dia_chi).Width(300).Title("Địa chỉ");
                        columns.Bound(p => p.ghi_chu).Width(150).Title("Ghi chú");
                        columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                        columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90).HtmlAttributes(new { style = "text-align:right" });
                        columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { style = "text-align:right" });
                        columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90).HtmlAttributes(new { style = "text-align:right" });
                    })
                                                                    .ToolBar(s =>
                                                                    {
                                                                        if (them)
                                                                        {
                                                                            s.Custom().Text("Thêm").HtmlAttributes(new { @class = "btn btn-success btn-small", @Href = "javascript:void(0)", @onclick = "add(this)" });
                                                                        }
                                                                        if (xoa)
                                                                        {
                                                                            s.Custom().Text("Xóa")
                                                                                 .HtmlAttributes(new { @class = "btn btn-danger btn-small", @Href = "javascript:void(0)", @onclick = "showConfirmPopup()" });
                                                                        }
                                                                        if (nhap)
                                                                        {
                                                                            s.Custom().Text("Tải mẫu Excel")
                                                                                 .HtmlAttributes(new { @class = "btn btn-info btn-small", @Href = @Url.Action("ExportTemplate", "Users") });
                                                                            s.Custom().Text("Nhập Excel")
                                                                                 .HtmlAttributes(new { @class = "btn btn-primary btn-small", @Href = "javascript:void(0)", @onclick = "showConfirmPopupImport()" });
                                                                        }
                                                                        if (xuat)
                                                                        {
                                                                            s.Excel().Text("Xuất dữ liệu").HtmlAttributes(new { @class = "btn btn-primary btn-small" });
                                                                        }
                                                                        if (sua)
                                                                        {
                                                                            s.Custom().Text("Cấp lại mật khẩu")
                                                                                .HtmlAttributes(new { @class = "btn btn-warning btn-small", @Href = "javascript:void(0)", @id = "btnGridResetPass" });
                                                                        }

                                                                        //@if (them){
                                                                        //    toolbar.Custom().Text("Thêm").HtmlAttributes(new { @class = "btn btn-success btn-small", @Href = "javascript:void(0)", @onclick = "add(this)" });
                                                                        //}
                                                                        // @if (sua){
                                                                        //    <a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnGridActive">Hoạt động</a>
                                                                        //    <a class="btn btn-warning btn-small" href="javascript:void(0)" id="btnGridInactive">Ngưng hoạt động</a>
                                                                        //    <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridResetPass">Cấp lại mật khẩu</a>
                                                                        //}
                                                                        //@if (xuat){
                                                                        //    <a class="btn btn-info btn-mini export" href="@Url.Action("ExportData", "Users", new { page = "~", pageSize = "~", filter = "~", sort = "~"})">Xuất excel</a>
                                                                        //}
                                                                        //@if (nhap){
                                                                        //    <a class="btn btn-info btn-small" href="@Url.Action("ExportTemplate", "Users")">Tải excel mẫu</a>
                                                                        //    <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridImport" onclick="showConfirmPopupImport()">Nhập excel</a>
                                                                        //}

                                                                    })
                                                                    .Sortable()
                                                                    .Pageable(pager => pager.PageSizes(new[] { 100, 200, 300, 500 }))
                                                                    .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                                                    .Pageable(p => p
                                                                        .Messages(m => m
                                                                            .Display("{0}-{1} của {2} dòng")
                                                                            .Empty("Không có dòng nào")
                                                                            .ItemsPerPage("dòng trên trang")
                                                                            .First("Trang kế")
                                                                            .Last("Trang tiếp")
                                                                            .Next("Đầu trang")
                                                                            .Previous("Cuối trang")
                                                                        )
                                                                    )
                                                                    .Scrollable()
                                                                    .Events(e => { e.DataBound("Databound"); })
                                                                    .Navigatable()
                                                                    .Excel(excel => excel
                                                                    .FileName("UsersList.xlsx")
                                                                    .Filterable(true).AllPages(true)
                                                                    .ProxyURL(Url.Action("Excel_Export", "Users")))
                                                                    .Reorderable(r => r.Columns(true))
                                                                    .Resizable(r => r.Columns(true))
                                                                    .DataSource(dataSource => dataSource
                                                                        .Ajax()
                                                                        .PageSize(100)
                                                                        //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                                                        .Model(model =>
                                                                        {
                                                                            model.Id(p => p.id);
                                                                        })
                                                                        .Read(read => read.Action("Read", "Users"))
                                                                    ))
            </div>
        </div>
    </div>

            
            </div>

            @* begin popup thêm/sửa thông tin người dùng *@
            <div id="popup-add-edit-user" class="modal hide modal-add-user">
                <form action=@Url.Action("CreateUpdate", "Users") id="createEditFrom" method="post" enctype="multipart/form-data" style="margin:0px">
                    <div class="k-window-titlebar k-header">
                        <span class="k-window-title" id="title-process">Thêm người dùng</span>
                    </div>
                    <div class="form-edit-add-user"></div>
                    <div class="modal-footer">
                        <div class="span12">
                            <button type="button" id="btn-submit" class="btn btn-info btn-small" onclick="save()">Lưu & Đóng</button>
                            @*<button type="button" class="btn btn-info btn-small" onclick="saveAndClear()">Lưu</button>*@
                            <button type="button" class="btn btn-danger btn-small" data-dismiss="modal">Đóng</button>
                        </div>
                    </div>
                </form>
            </div>

            <script type="text/template" id="EditTemplate">
                <div class="modal-body overflow-visible">
                    <button data-toggle="collapse" type="button" data-target="\\#tt_nhan_vien" class="btn-collapse">THÔNG TIN NHÂN VIÊN</button>
                    <div id="tt_nhan_vien" class="collapse in">
                        <div class="row-fluid">
                            <div class="span12">
                                <input type="hidden" name="id" id="iddetail" value="#=id#" />
                                <div class="row-fluid">
                                    <div class="control-group span6">
                                        <label>Mã người dùng (*)</label>
                                        <div class="controls">
                                            #if(id > 0){#
                                            <input type="text" class="span12" name="ma_nguoi_dung" value="#=ma_nguoi_dung!=null ? ma_nguoi_dung : ''#">
                                            #}else{#
                                            <input type="text" class="span12" placeholder="Nhập mã người dùng" name="ma_nguoi_dung" value="#=ma_nguoi_dung!=null ? ma_nguoi_dung : ''#">
                                            #}#
                                        </div>
                                    </div>
                                    <div class="control-group span6">
                                        <label>Mật khẩu (*)</label>
                                        <div class="controls">
                                            #if(id > 0){#
                                            <input type="password" class="span12" name="mat_khau" value="#=mat_khau!=null ? mat_khau : ''#" readonly>
                                            #}else{#
                                            <input type="password" class="span12" placeholder="Nhập mật khẩu" name="mat_khau" value="#=mat_khau!=null ? mat_khau : ''#">
                                            #}#

                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="control-group span6">
                                        <label>Tên người dùng</label>
                                        <div class="controls">
                                            <input type="text" class="span12" placeholder="Nhập tên người dùng" name="ten_nguoi_dung" value="#=ten_nguoi_dung!=null ? ten_nguoi_dung : ''#">
                                        </div>
                                    </div>
                                    <div class="control-group span6">
                                        <label>Giới tính</label>
                                        <div class="controls">
                                            <div class="controls">
                                                @(Html.Kendo().DropDownList()
                                                                                .Name("gioi_tinh")
                                                                                .DataTextField("gia_tri")
                                                                                .DataValueField("ma_tham_so")
                                                                                .HtmlAttributes(new { @style = "width:100%;" })
                                                                                .Filter("contains")
                                                                                .OptionLabel("Giới tính")
                                                                                .Value("#=gioi_tinh !=null ? gioi_tinh: ''#")
                                                                                .BindTo(ViewBag.listGender)
                                                                                .ToClientTemplate()
                                                )
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="control-group span6">
                                        <label>Mã người dùng</label>
                                        <div class="controls">
                                            #if(id > 0){#
                                            <input type="text" class="span12" name="ma_nguoi_dung" value="#=ma_nguoi_dung!=null ? ma_nguoi_dung : ''#">
                                            #}else{#
                                            <input type="text" class="span12" placeholder="Mã số trên bảng tên" name="ma_nguoi_dung" value="#=ma_nguoi_dung!=null ? ma_nguoi_dung : ''#">
                                            #}#

                                        </div>
                                    </div>
                                    <div class="control-group span6">
                                        <label>Trạng thái</label>
                                        <div class="controls">
                                            <select name="trang_thai" class="span12">
                                                #if(trang_thai =="true"){#
                                                <option value="true" selected>Hoạt động</option>
                                                <option value="false">Ngưng hoạt động</option>
                                                #}else{#
                                                <option value="true">Hoạt động</option>
                                                <option value="false" selected>Ngưng hoạt động</option>
                                                #}#
                                            </select>
                                        </div>
                                    </div>

                                </div>
                                <div class="row-fluid">
                                    <div class="control-group span6">
                                        <label>Email (*)</label>
                                        <div class="controls">
                                            #if(id > 0){#
                                            <input type="text" class="span12" name="email" value="#=email!=null ? email : ''#">
                                            #}else{#
                                            <input type="text" class="span12" placeholder="youremail@domain.com" name="email" value="#=email!=null ? email : ''#">
                                            #}#

                                        </div>
                                    </div>
                                    <div class="control-group span6">
                                        <label>Điện thoại</label>
                                        <div class="controls">
                                            <input type="text" class="span12" placeholder="Nhập số điện thoại" name="dien_thoai" value="#=dien_thoai!=null ? dien_thoai : ''#">
                                        </div>
                                    </div>

                                </div>
                                <div class="control-group">
                                    <label>Địa chỉ</label>
                                    <div class="controls">
                                        <input type="text" class="span12" placeholder="Nhập địa chỉ" name="dia_chi" value="#=dia_chi!=null ? dia_chi : ''#">
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label>Ghi chú</label>
                                    <div class="controls">
                                        <input type="text" class="span12" placeholder="Ghi chú" name="ghi_chu" value="#=ghi_chu!=null ? ghi_chu : ''#">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </script>

            @*<div class="form-actions right">
                    <a onclick="clearForm()" class="btn btn-xs btn-small">Hủy</a>
                    #if(id > 0 && ma_nguoi_dung !='administrator'){#
                    <a onclick="removeUser('#=id#')" class="btn btn-danger btn-small">Xóa</a>
                    #}#
                    <button class="btn btn-info btn-small" onclick="Import()">Lưu</button>
                    <a onclick="saveAndClear()" class="btn btn-primary btn-small">Lưu &amp; Mới</a>
                </div>*@

            @* end popup thêm/sửa thông tin người dùng *@

            <div id="popup-confirm" class="modal hide">
                <div class="k-window-titlebar k-header">
                    <span class="k-window-title">Thông báo</span>
                </div>
                <div class="modal-body overflow-visible">
                    <div class="row-fluid form-horizontal">
                        <p>
                            <span>Bạn có chắc chắn muốn xóa dữ liệu?</span>
                        </p>
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-info btn-small" onclick="Delete()"> Đồng ý</a>
                    <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
                </div>
            </div>

            <div id="popup-resetpass" class="modal hide">
                <div class="k-window-titlebar k-header">
                    <span class="k-window-title">Thông báo</span>
                </div>
                <div class="modal-body overflow-visible">
                    <div class="row-fluid form-horizontal">
                        <p>
                            <span>Bạn có chắc chắn muốn cấp lại mật khẩu?</span>
                        </p>
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-info btn-small" onclick="ResetPass()"> Đồng ý</a>
                    <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
                </div>
            </div>

            <div id="popup-active" class="modal hide">
                <div class="k-window-titlebar k-header">
                    <span class="k-window-title">Thông báo</span>
                </div>
                <div class="modal-body overflow-visible">
                    <div class="row-fluid form-horizontal">
                        <p>
                            <span>Bạn có chắc chắn muốn cập nhật?</span>
                        </p>
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-info btn-small" onclick="Active()"> Đồng ý</a>
                    <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
                </div>
            </div>

            <div id="popup-inactive" class="modal hide">
                <div class="k-window-titlebar k-header">
                    <span class="k-window-title">Thông báo</span>
                </div>
                <div class="modal-body overflow-visible">
                    <div class="row-fluid form-horizontal">
                        <p>
                            <span>Bạn có chắc chắn muốn cập nhật?</span>
                        </p>
                    </div>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-info btn-small" onclick="Inactive()"> Đồng ý</a>
                    <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
                </div>
            </div>

            <div id="popup-import" class="modal hide">
                <form action="~/Users/Import" method="post" id="importFormImport" enctype="multipart/form-data" class="form-inline" style="margin:0px">
                    <div class="k-window-titlebar k-header">
                        <span class="k-window-title">Import</span>
                        @*<button type="button" class="btclose" data-dismiss="modal">&times;</button>*@
                    </div>
                    <div class="modal-body overflow-visible">
                        <div class="row-fluid form-horizontal">
                            <label>Chọn file </label>
                            <input name="FileUpload" type="file" id="FileUpload" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a class="btn btn-info btn-small" onclick="ImportExcell()"> Đồng ý</a>
                        <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
                    </div>
                </form>
            </div>
            @* Import *@
            <script>
    function checkTextbox() {
        if ($("#tat_ca_chi_nhanh").prop("checked") == true) {
            $("#tat_ca_chi_nhanh").attr("checked", true);
            $("#tat_ca_chi_nhanh").val("true");
        }
        else {
            $("#tat_ca_chi_nhanh").attr("checked", false);
            $("#tat_ca_chi_nhanh").val("false");
        }
    }
    $(document).ready(function () {
        $('#FileUpload').ace_file_input({
            no_file: 'Chưa chọn tập tin ...',
            btn_choose: 'Chọn',
            btn_change: 'Thay đổi',
            droppable: false,
            onchange: null,
            thumbnail: false, //| true | large
            allowExt: ['gif', 'png', 'jpg', 'jpeg', 'xlsx', 'xls', 'doc', 'docx', 'pdf'],
            denyExt: ['exe', 'php'],
            maxSize: 5120000,
            //onchange:''
            before_change: function (files, dropped) {
                var allowed_files = [];
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    if (typeof file === "string") {
                        //IE8 and browsers that don't support File Object
                        if (!(/\.(xlsx|xls)$/i).test(file))
                            //if (!(/\.(jpe?g|png|gif|bmp|doc|docx|xlsx|xls|pdf)$/i).test(file))
                            return false;
                    }
                    else {
                        var type = $.trim(file.type);
                        var isValidLength = type.length > 0;
                        var isApplication = (/^application\/(pdf|msword|vnd.openxmlformats-officedocument.spreadsheetml.sheet)$/i).test(type);
                        //var isValidFileName = (/\.(jpe?g|png|gif|bmp|doc|docx|xlsx|xls|pdf)$/i).test(file.name);
                        var isValidFileName = (/\.(xlsx|xls)$/i).test(file.name);
                        //var isImage = (/^image\/(jpe?g|png|gif|bmp)$/i).test(type);
                        if (isValidLength) {
                            if (!isApplication && !isValidFileName) {
                                alert('Sai định dạng file(*.xlsx,*.xls): ' + file.name);
                                continue;
                            }
                        } else {
                            continue;
                        }
                    }

                    allowed_files.push(file);
                }
                if (allowed_files.length === 0) return false;
                return allowed_files;
            }
        });
        filter();
    });
    function ImportExcell() {
        $('#importFormImport').submit();
    }
    function showConfirmPopupImport(e) {
        $('#popup-import').modal('show');
    }

    function onCloseForm() {
        $('#txtcontent').val('');
        $('.modal').modal('hide');
    }
    $("#importFormImport").validate({
        submitHandler: function (form) {
            $("#importFormImport").ajaxSubmit({
                uploadProgress: function (event, position, total, percentComplete) { },
                success: function (data) {
                    if (data.success) {
                        $("#grid").data("kendoGrid").dataSource.read();
                        if (data.totalError > 0) {
                            $.gritter.add({
                                title: 'Lỗi',
                                text: "Có dòng lỗi, tải về để sửa lại.",
                                class_name: 'gritter-error'
                            });
                            window.open("/ExcelImport/" + data.link, "_blank");
                        }
                        else {
                            $.gritter.add({
                                title: '',
                                text: "Nhập thành công " + data.total + " trang",
                                class_name: 'gritter-success',
                                button: 'zzz'
                            });
                        }
                        $('#FileUpload').ace_file_input('reset_input');
                    } else {
                        $.gritter.add({
                            title: '',
                            text: "Báo lỗi " + data.message,
                            class_name: 'gritter-error',
                            button: 'zzz'
                        });
                    }
                    onCloseForm();
                }
            });
        },
    });
            </script>

            <script>
    function loadValidate() {
        $("#createEditFrom").validate({
            rules: {
                'ma_nguoi_dung': { required: true },
                'mat_khau': { required: true },
                'email': { required: true },
                'ten_nguoi_dung': { required: true },
                'ma_nhan_vien': { required: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                var listrowid = "";
                $('#gridUserBranch').find(".checkrowiduserbranch").each(function () {
                    if ($(this).prop('checked') == true) {
                        listrowid += $(this).attr("id") + '@@@@';
                    }
                });
                $('input[name="user_thuoc_chi_nhanh"]').val(listrowid)
                var listrowid2 = "";
                $('#gridUserGroup').find(".checkrowidusergroup").each(function () {
                    if ($(this).prop('checked') == true) {
                        listrowid2 += $(this).attr("id") + '@@@@';
                    }
                });
                $('input[name="user_thuoc_nhom"]').val(listrowid2)
                $(form).ajaxSubmit({
                    clearForm: false,
                    success: function (data) {
                        if (data.success) {
                            $("#grid").data("kendoGrid").dataSource.read()
                            $.gritter.add({
                                text: "Lưu thông tin người dùng thành công",
                                class_name: 'gritter-success'
                            });
                            if (reset) {
                                reset = false;
                                if($("#iddetail").val() < 1){
                                    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                                }
                            }
                            else {
                                $('#popup-add-edit-user').modal('hide');
                            }
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }
                    }
                });
                return false;
            }
        });
    }
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".form-edit-add-user").html(EditTemplate(data));
        $('.date-picker').datepicker({ format: 'dd/mm/yyyy', autoclose: true, todayHighlight: true });

        loadValidate(data);
    }
            </script>
            <script>
    var reset = false;

    //Xử lý khi nhấn nút Thêm
    function add(e) {
        $("#popup-add-edit-user").modal('show');
        $('#title-process').text('').append('Thêm người dùng');
        loadForm(@Html.Raw(Json.Encode(newData)));
    }
    //Xử lý khi nhấn nút Sửa
    var ma_nguoi_dung;
    var ma_dia_ban=[];
    function getMaNguoiDung() {

        return {
            ma_nguoi_dung: ma_nguoi_dung,
            ma_dia_ban: ma_dia_ban,
        }
    }
    function edit(e) {
        var data = $("#grid").data("kendoGrid").dataItem($(e).closest("tr"));
        $("#popup-add-edit-user").modal('show');
        $('#title-process').text('').append('Sửa thông tin người dùng');
        ma_nguoi_dung = data.ma_nguoi_dung;
        loadForm(data)
        $('select[name="trang_thai"]').val(data.trang_thai).trigger('chosen:updated');
    }
    //Xử lý khi nhấn nút Lưu và đóng
    function save() {
        reset = false;
        $('#createEditFrom').submit();
    }
    //Xử lý khi nhấn nút Lưu
    function saveAndClear() {
        reset = true;
        $('#createEditFrom').submit();
    }
            </script>

            <script>
    $("#listStatus").chosen();
    $("#listCNPBPGD").chosen();

    function filter() {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_nguoi_dung", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_nguoi_dung", operator: "contains", value: text });
            filterOr.filters.push({ field: "email", operator: "contains", value: text });
            filterOr.filters.push({ field: "dien_thoai", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }

        var listStatus = $("#listStatus option:selected");
        var fillterStatus = { logic: "or", filters: [] };
        if (listStatus.length > 0) {
            for (var i = 0; i < listStatus.length; i++) {
                var option = listStatus[i].value;
                console.log(option);
                debugger;
                if (option != '') {
                    fillterStatus.filters.push({ field: "trang_thai", operator: "eq", value: option });
                }
            }
            filter.filters.push(fillterStatus);
        }

        var listDonVi = $("#listCNPBPGD option:selected");
        var fillterdonvi = { logic: "or", filters: [] };
        if (listDonVi.length > 0) {
            for (var i = 0; i < listDonVi.length; i++) {
                var option = listDonVi[i].value;
                if (option != '') {
                    fillterdonvi.filters.push({ field: "ma_chi_nhanh", operator: "contains", value: option });
                }
            }
            filter.filters.push(fillterdonvi);
        }

        grid.dataSource.filter(filter);
    }

    function cancelFilter() {
        $('input').val
        $('select').val('').trigger('chosen:updated');
        filter();
    }

    $('#btnGridExcel').bind('click', function () {
        $("#grid").getKendoGrid().saveAsExcel();
    });


    function Import() {
        $('#EditForm').submit();
        blockUI(true);
    }

    var Id;
    function removeUser(id) {
        $('#popup-confirm').modal('show');
        Id = id;
    }
    function Delete() {
        var listrowid = "";
        $('#grid').find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                listrowid += $(this).attr("id") + '@@@@';
            }
        });
        if (listrowid != "" && listrowid != null) {
            $.post("Users/DeleteList", { data: listrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Xóa dữ liệu thành công",
                        class_name: 'gritter-success'
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error'
                    });
                }
                $('#popup-confirm').modal('hide');
            });
        }

    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#grid").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function filterLevel() {
        return {
            Position: $("#Position").val()
        };
    }
    function successUploadImage(e) {
        var imagePath = e.files[0];
        $('#imgDisplayAvatar').attr('src', imagePath.name);
    }
    function Databound() {
        resizeGrid();
        var grid = $("#grid").data("kendoGrid");
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
            .options.parameterMap({
                page: grid.dataSource.page(),
                pageSize: grid.dataSource.total(),
                sort: grid.dataSource.sort(),
                filter: grid.dataSource.filter()
            });
        var $exportLink = grid.element.find('.export');
        var href = $exportLink.attr('href');
        if (href) {
            href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
            href = href.replace(/pageSize=([^&]*)/, 'pageSize=' + (requestObject.pageSize || '~'));
            href = href.replace(/page=([^&]*)/, 'page=' + (requestObject.page || '~'));
            href = href.replace(/sort=([^&]*)/, 'sort=' + (requestObject.sort || '~'));
            $exportLink.attr('href', href);
        }
        ma_dia_ban = [];
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
            dataArea = gridElement.find(".k-grid-content"),
            otherElements = gridElement.children().not(".k-grid-content"),
            otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 25);
    }

    $('#btnGridResetPass').bind('click', function () {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $('#popup-resetpass').modal('show');
        }
        else {
            $.gritter.add({
                text: "Vui lòng chọn dữ liệu",
                class_name: 'gritter-error',
            });
            return false;
        }
    })

    $('#btnGridActive').bind('click', function () {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $('#popup-active').modal('show');
        }
        else {
            $.gritter.add({
                text: "Vui lòng chọn dữ liệu",
                class_name: 'gritter-error',
            });
            return false;
        }
    });

    $('#btnGridInactive').bind('click', function () {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $('#popup-inactive').modal('show');
        }
        else {
            $.gritter.add({
                text: "Vui lòng chọn dữ liệu",
                class_name: 'gritter-error',
            });
            return false;
        }
    });
    function Active() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $.post("Users/Active", { data: checkrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Cập nhật thành công",
                        class_name: 'gritter-success',
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#checkboxcheckAll").prop('checked', false);
                    $('#popup-active').modal('hide');
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error',
                    });

                }
            });
        }
        else {
            $.gritter.add({
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function Inactive() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $.post("Users/Inactive", { data: checkrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Cập nhật thành công",
                        class_name: 'gritter-success',
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#checkboxcheckAll").prop('checked', false);
                    $('#popup-inactive').modal('hide');
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error',
                    });

                }
            });
        }
        else {
            $.gritter.add({
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function ResetPass() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            $.post("Users/ResetPass", { data: checkrowid }, function (data) {
                if (data.success) {
                    $.gritter.add({
                        text: "Cấp lại mật khẩu thành công",
                        class_name: 'gritter-success',
                    });
                    $("#grid").data("kendoGrid").dataSource.read();
                    $("#checkboxcheckAll").prop('checked', false);
                    $('#popup-resetpass').modal('hide');
                }
                else {
                    $.gritter.add({
                        text: data.error,
                        class_name: 'gritter-error',
                    });

                }
            });
        } else {
            $.gritter.add({
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }

    function blockUI(isMark) {
        if (isMark) {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false })).ajaxStop($.unblockUI);
        }
        else {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false, overlayCSS: { backgroundColor: 'transparent' } })).ajaxStop($.unblockUI);
        }
    }
    //Confirm delete
    function showConfirmPopup() {
        var listrowid = "";
        $('#grid').find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                listrowid += $(this).attr("id") + '@@@@';
            }
        });
        if (listrowid != "" && listrowid != null) {
            deleteId = 1;
            $("#divMaskPopup").show();
            $('#popup-confirm').modal('show');
        }
        else {
            $.gritter.add({
                title: '',
                text: 'Vui lòng chọn dữ liệu muốn xóa',
                class_name: 'gritter-error'
            });
        }
    }
            </script>


            @*Xử lý lưới UsersBranch*@
            <script>
    var timeout;
    //checked những chi nhánh của người dùng
    //set dirty
    //set height của lưới
    function onDataboundUserBranch(e) {
        $('#gridUserBranch').find(".checkrowiduserbranch").each(function () {
            if ($(this).val() == '1') {
                $(this).prop('checked', true);
            }
            else {
                $(this).prop('checked', false);
            }
        });
        var dataSource = $("#gridUserBranch").data("kendoGrid").dataSource.data();
        for (item in dataSource) {
            dataSource[item].dirty = true;
        }
        resizeGridUserBranch();
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id_nguoi_dung = $('input[name=id]').val();
        if (id_nguoi_dung > 0) {
            $('#gridUserBranch').find(".checkrowiduserbranch").click(function () {
                var ma_chi_nhanh = $(this).attr("id");
                $.ajax({
                    url: 'Users/UpdateBranch',
                    method: 'POST',
                    data: {
                        id_nguoi_dung: id_nguoi_dung,
                        ma_nguoi_dung: ma_nguoi_dung,
                        ma_chi_nhanh: ma_chi_nhanh
                    },
                    success: function () {
                        clearTimeout(timeout);
                        timeout = setTimeout(function () {
                            $.gritter.add({
                                text: "Cập nhật thành công",
                                class_name: 'gritter-success',
                            });
                        }, 1000);
                        $("#grid_Location").data("kendoGrid").dataSource.read();
                    }
                });
            });
        } else {
            $("#gridUserBranch").find(".checkrowiduserbranch").each(function () {
                $(this).prop('checked', false);
            });
        }

    }

    function resizeGridUserBranch() {
        var gridElement = $("#gridUserBranch"),
            dataArea = gridElement.find(".k-grid-content");
        dataArea.height(262);
    }

    function checkAllThuocChiNhanh(e) {
        var x = $(e).prop('checked');
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $.ajax({
                url: 'Users/UpdateAllBranch',
                method: 'POST',
                data: {
                    id_nguoi_dung: id,
                    ma_nguoi_dung: ma_nguoi_dung,
                    checkAll: x,
                },
                success: function () {
                    clearTimeout(timeout);
                    timeout = setTimeout(function () {
                        $.gritter.add({
                            text: "Cập nhật thành công",
                            class_name: 'gritter-success',
                        });
                    }, 1000);
                    $("#grid_Location").data("kendoGrid").dataSource.read();
                }
            });
        }
        $("#gridUserBranch").find(".checkrowiduserbranch").each(function () {
            $(this).prop('checked', x);
        });
    }

    function filterBranch() {
        grid = $("#gridUserBranch").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearchUserBranch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_chi_nhanh", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_chi_nhanh", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }
            </script>

            @*Xử lý lưới UserGroup*@
            <script>
    function onDataboundUserGroup(e) {
        $('#gridUserGroup').find(".checkrowidusergroup").each(function () {
            if ($(this).val() == '1') {
                $(this).prop('checked', true);
            }
            else {
                $(this).prop('checked', false);
            }
        });
        var dataSource = $("#gridUserGroup").data("kendoGrid").dataSource.data();
        for (item in dataSource) {
            dataSource[item].dirty = true;
        }
        resizeGridUserGroup();
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $('#gridUserGroup').find(".checkrowidusergroup").click(function () {
                var id_group = $(this).attr("id");
                $.ajax({
                    url: 'Users/UpdateGroup',
                    method: 'POST',
                    data: {
                        ma_nguoi_dung: ma_nguoi_dung,
                        id_group: id_group
                    },
                    success: function () {
                        clearTimeout(timeout);
                        timeout = setTimeout(function () {
                            $.gritter.add({
                                text: "Cập nhật thành công",
                                class_name: 'gritter-success',
                            });
                        }, 1000);
                    }
                });
            });
        } else {
            $("#gridUserGroup").find(".checkrowidusergroup").each(function () {
                $(this).prop('checked', false);
            });
        }

    }

    function onDataboundUserCompany(e) {
        $('#gridUserCompany').find(".checkrowidusercompany").each(function () {
            if ($(this).val() == '1') {
                $(this).prop('checked', true);
            }
            else {
                $(this).prop('checked', false);
            }
        });
        var dataSource = $("#gridUserCompany").data("kendoGrid").dataSource.data();
        for (item in dataSource) {
            dataSource[item].dirty = true;
        }
        resizeGridUserCompany();
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $('#gridUserCompany').find(".checkrowidusercompany").click(function () {
                var id_company = $(this).attr("id");
                $.ajax({
                    url: 'Users/UpdateCompany',
                    method: 'POST',
                    data: {
                        ma_nguoi_dung: ma_nguoi_dung,
                        id_company: id_company
                    },
                    success: function () {
                        clearTimeout(timeout);
                        timeout = setTimeout(function () {
                            $.gritter.add({
                                text: "Cập nhật thành công",
                                class_name: 'gritter-success',
                            });
                        }, 1000);

                    }

                });
            });
        } else {
            $("#gridUserCompany").find(".checkrowidusercompany").each(function () {
                $(this).prop('checked', false);
            });
        }

    }
    function resizeGridUserCompany() {
        var gridElement = $("#gridUserCompany"),
            dataArea = gridElement.find(".k-grid-content");
        dataArea.height(262);
    }

    function resizeGridUserGroup() {
        var gridElement = $("#gridUserGroup"),
            dataArea = gridElement.find(".k-grid-content");
        dataArea.height(262);
    }

    function checkAllThuocNhom(e) {
        var x = $(e).prop('checked');
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $.ajax({
                url: 'Users/UpdateAllGroup',
                method: 'POST',
                data: {
                    ma_nguoi_dung: ma_nguoi_dung,
                    checkAll: x
                },
                success: function () {
                    $.gritter.add({
                        text: "Cập nhật thành công",
                        class_name: 'gritter-success',
                    });
                }
            });
        }

        $("#gridUserGroup").find(".checkrowidusergroup").each(function () {
            $(this).prop('checked', x);
        });
    }

    function checkAllThuocNhomCompany(e) {
        var x = $(e).prop('checked');
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $.ajax({
                url: 'Users/UpdateAllCompany',
                method: 'POST',
                data: {
                    ma_nguoi_dung: ma_nguoi_dung,
                    checkAll: x
                },
                success: function () {
                    $.gritter.add({
                        text: "Cập nhật thành công",
                        class_name: 'gritter-success',
                    });
                }
            });
        }

        $("#gridUserCompany").find(".checkrowidusercompany").each(function () {
            $(this).prop('checked', x);
        });
    }

    function filterNhom() {
        grid = $("#gridUserGroup").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearchUserGroup").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_nhom", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_nhom", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }

    function filterCompany() {
        grid = $("#gridUserCompany").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearchCompany").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_cong_ty", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_cong_ty", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }
            </script>
            @*LOCATION*@
            <script type="text/javascript">
    function onDataboundLocation(e) {
        $('#grid_Location').find(".checkrowidlocation").each(function () {
            if ($(this).val() == '1') {
                $(this).prop('checked', true);
            }
            else {
                $(this).prop('checked', false);
            }
        });
        var dataSource = $("#grid_Location").data("kendoGrid").dataSource.data();
        for (item in dataSource) {
            dataSource[item].dirty = true;
        }
        resizeGridUserLocation();
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $('#grid_Location').find(".checkrowidlocation").click(function () {
                clearTimeout(timeout);
                timeout = setTimeout(function () {

                    $("#grid_Location").find(".checkrowidlocation").each(function () {
                        if ($(this).prop("checked")) {
                            ma_dia_ban.push($(this).attr("id"));
                        }
                    });

                    $("#grid_project").data("kendoGrid").dataSource.read();
                    ma_dia_ban = [];
                }, 1000);

            });
        } else {
            $("#grid_Location").find(".checkrowidlocation").each(function () {
                $(this).prop('checked', false);
            });

        }

    }
    function resizeGridUserLocation() {
        var gridElement = $("#grid_Location"),
            dataArea = gridElement.find(".k-grid-content");
        dataArea.height(262);
    }
    function checkAllLocation(e) {
        var x = $(e).prop('checked');
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            clearTimeout(timeout);
            timeout = setTimeout(function () {

                $("#grid_Location").find(".checkrowidlocation").each(function () {
                    if ($(this).prop("checked")) {
                        ma_dia_ban.push($(this).attr("id"));
                    }
                });

                $("#grid_project").data("kendoGrid").dataSource.read();
                ma_dia_ban = [];
            }, 1000);
        }
        $("#grid_Location").find(".checkrowidlocation").each(function () {
            $(this).prop('checked', x);
        });
    }

    function filterLocation() {
        grid = $("#grid_Location").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearchUserLocation").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_dia_ban", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_dia_ban", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }
            </script>
            @*PROJECT*@
            <script>
    function onDataboundProject(e) {
        $('#grid_project').find(".checkrowidproject").each(function () {
            if ($(this).val() == '1') {
                $(this).prop('checked', true);
            }
            else {
                $(this).prop('checked', false);
            }
        });
        var dataSource = $("#grid_project").data("kendoGrid").dataSource.data();
        for (item in dataSource) {
            dataSource[item].dirty = true;
        }
        resizeGridUserProject();
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        if (id > 0) {
            $('#grid_project').find(".checkrowidproject").click(function () {
                var ma_cong_trinh = $(this).attr("id");
                blockUI(true);
                $.ajax({
                    url: 'Users/UpdateUserProject',
                    method: 'POST',
                    data: {
                        ma_nguoi_dung: ma_nguoi_dung,
                        ma_cong_trinh: ma_cong_trinh,
                    },
                    success: function () {
                        blockUI(false);
                        clearTimeout(timeout);
                        timeout = setTimeout(function () {
                            $.gritter.add({
                                text: "Cập nhật thành công",
                                class_name: 'gritter-success',
                            });
                        }, 1000);
                    }
                });
            });
        } else {
            $("#grid_project").find(".checkrowidproject").each(function () {
                $(this).prop('checked', false);
            });
        }

    }
    function resizeGridUserProject() {
        var gridElement = $("#grid_project"),
            dataArea = gridElement.find(".k-grid-content");
        dataArea.height(262);
    }
    function checkAllProject(e) {
        var x = $(e).prop('checked');
        var ma_nguoi_dung = $('input[name=ma_nguoi_dung]').val();
        var id = $('input[name=id]').val();
        var ma_cong_trinh = [];
        $("#grid_project").find(".checkrowidproject").each(function () {
            ma_cong_trinh.push($(this).attr("id"));
        });
        $("#grid_project").find(".checkrowidproject").each(function () {
            $(this).prop('checked', x);
        });
        blockUI(true);

        if (id > 0) {
            $.ajax({
                url: 'Users/UpdateAllUserProject',
                method: 'POST',
                data: {
                    ma_nguoi_dung: ma_nguoi_dung,
                    ma_cong_trinh: ma_cong_trinh,
                    checkAll: x,
                },
                success: function () {
                    blockUI(false);

                    clearTimeout(timeout);
                    timeout = setTimeout(function () {
                        $.gritter.add({
                            text: "Cập nhật thành công",
                            class_name: 'gritter-success',
                        });
                    }, 1000);
                    $("#grid_project").data("kendoGrid").dataSource.read();
                }
            });
        }

    }
    function filterProject() {
        grid = $("#grid_project").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearchUserProject").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_cong_trinh", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_cong_trinh", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_dia_ban", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }

    
            </script>
