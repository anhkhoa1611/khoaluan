@using HPSTD.Core.Entities;
@{
    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;

    ViewBag.Title = "Nhà cung cấp";
    var listActive = new List<SelectListItem>
    {
    new SelectListItem{Text = "Đang hoạt động", Value = "true"},
    new SelectListItem{Text = "Không hoạt động", Value = "false"},
    };

    var listNCCHPSTD.= new List<SelectListItem>
    {
    new SelectListItem{Text = "NCC của HPSTD., Value = "LA_NCC_HDBANK"},
    new SelectListItem{Text = "Chưa là NCC của HPSTD., Value = "CHUA_LA_NCC_HDBANK"},
    };
    ViewBag.listActive = listActive;
    var newData = new Vendor();
}
<style>
    .form-actions {
        background: 0 0 !important;
        padding: 19px 0px !important;
    }

        .form-actions.right {
            text-align: right !important;
        }
</style>
<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid">
            <div class="col-sm-6">
                <div class="tabbable">
                    <ul class="nav nav-tabs tab-color-blue" id="myTab">
                        <li class="active">
                            <a data-toggle="tab" href="#home" aria-expanded="true" id="tabList">
                                Danh sách nhà cung cấp
                            </a>
                        </li>
                        <li class="">
                            <a data-toggle="tab" href="#edit" aria-expanded="false" id="tabAdd" style="display:none;">
                                Thêm nhà cung cấp
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding-bottom:0px!important">
                        <div id="home" class="tab-pane fade active in">
                            <div class="row-fluid widget-box">
                                <div class="span12">
                                    <div class="span4">
                                        <input type="text" class="span12" placeholder="Tên nhà cung cấp, email, điện thoại" onkeyup="filter(this)" />
                                    </div>
                                </div>
                            </div>
                            <div class="row-fluid">
                                @(Html.Kendo().Grid<HPSTD.Core.Entities.Vendor>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.id)
                                        .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id='checkboxcheckAll' onClick='checkAll(this)' />")
                                        .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#' />")
                                        .Width(35).Filterable(false).Sortable(false);
                                    columns.Template(@<text></text>).HtmlAttributes(new { style = "text-align: center;" }).ClientTemplate("<span ><a class='btn btn-mini btn-warning' style ='width:40px' onclick='edit(this)'> Sửa </a></span>").Width(70);
                                    columns.Bound(p => p.nha_cung_cap_id).Width(120).Title("Mã NCC");
                                    columns.Bound(p => p.ten_nha_cung_cap).Width(350).Title("Tên NCC");
                                    columns.Bound(p => p.ten_thuong_goi).Width(250).Title("Tên thường gọi");
                                    columns.Bound(p => p.ma_so_thue).Width(120).Title("Mã số thuế");
                                    columns.Bound(p => p.dia_chi).Width(350).Title("Địa chỉ");
                                    columns.Bound(p => p.dien_thoai).Width(100).Title("Điện thoại");
                                    columns.Bound(p => p.von_dieu_le).Width(100).Title("Vốn điều lệ").HtmlAttributes(new { style = "text-align:right" }).Format("{0:N0}");
                                    columns.Bound(p => p.email).Width(150).Title("Email");
                                    columns.Bound(p => p.quy_mo).Width(120).Title("Quy mô");
                                    columns.Bound(p => p.pham_vi_cung_ung).Width(150).Title("Phạm vi cung cấp");
                                    columns.Bound(p => p.bao_hanh).Width(150).Title("Bảo hành");
                                    columns.Bound(p => p.thoi_gian_cung_ung).Width(150).Title("Thời gian cung ứng");
                                    columns.Bound(p => p.khach_hang_cung_cap).Width(150).Title("Khách hàng");
                                    columns.Bound(p => p.nha_cung_cap_cua_hdbank).Width(150).Title("Nhà cung cấp của HDbank");
                                    columns.Bound(p => p.chung_loai_hang_hoa_ncc).Width(150).Title("Chủng loại hàng hóa NCC");
                                    columns.Bound(p => p.so_luong_tieu_chuan).Width(150).Title("Số lượng tiêu chuẩn");
                                    columns.Bound(p => p.thoi_gian_giao_hang).Width(140).Title("Thời gian giao hàng");
                                    columns.Bound(p => p.phuong_thuc_thanh_toan).Width(140).Title("Phương thức thanh toán");
                                    columns.Bound(p => p.dieu_kien_thanh_toan).Width(140).Title("Điều kiện thanh toán");
                                    columns.ForeignKey(p => p.trang_thai, (System.Collections.IEnumerable)ViewBag.listActive, "Value", "Text").Title("Trạng Thái").Width(140);
                                    columns.Bound(p => p.ghi_chu).Width(200).Title("Ghi chú");
                                    columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                                    columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
                                    columns.Bound(o => o.ngay_cap_nhat).Title("Ngày sửa").Format("{0:dd/MM/yyyy}").Width(110).
                                    ClientTemplate("#if(kendo.toString(ngay_cap_nhat,'dd/MM/yyyy') != '01/01/1900'){#" + "#= kendo.toString(ngay_cap_nhat,'dd/MM/yyyy') #" + "#}#");
                                    columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
                                })
                                 .ToolBar(toolbar =>
                                 {
                                     toolbar.Template(@<text>
                                        <div class="pull-left">
                                            @if (them)
                                            {
                                                <a class="btn btn-success btn-small" href="javascript:void(0)" id="btnGridAdd">Thêm</a>
                                            }
                                            @if (xuat)
                                            {
                                                <a href="@Url.Content("~/Vendor/ExportData?filter=~&sort=~")" class="btn btn-info btn-mini export" href="javascript:void(0)">Xuất excel</a>
                                            }
                                            @if (nhap)
                                            {
                                                <a class="btn btn-info btn-small" href="@Url.Action("ExportTemplate", "Vendor")">Tải excel mẫu</a>
                                                <a class="btn btn-primary btn-small" href="javascript:void(0)" id="btnGridImport" onclick="importExcel()">Nhập excel</a>
                                            }
                                        </div>
                                    </text>);
                                 })
                                .Sortable()
                                .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                                .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                .Pageable(p => p
                                    .Messages(m => m
                                                .Display("{0}-{1} của {2} dòng")
                                                .Empty("Không có dòng nào")
                                                .ItemsPerPage("dòng trên trang")
                                                .First("Trang kế")
                                                .Last("Trang tiếp")
                                                .Next("Đầu trang")
                                                .Previous("Cuối trang"))
                                )
                                .Scrollable()
                                .Events(e => { e.DataBound("Databound"); })
                                .Navigatable()
                                //.Filterable()
                                .Reorderable(r => r.Columns(true))
                                .Resizable(r => r.Columns(true))
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                    //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                    .Model(model =>
                                    {
                                        model.Id(p => p.id);
                                    })
                                    .Read(read => read.Action("Read", "Vendor"))
                                    ))
                            </div>
                        </div>
                        <div id="edit" class="tab-pane fade">
                            <div class="span12 formEdit">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/template" id="EditTemplate">
    <form action="@Url.Content("~/Vendor/CreateUpdate")" id="EditForm" method="post" enctype="multipart/form-data">
        <div class="widget-body">
            <div class="widget-main">
                <div class="row-fluid">
                    <div class="span4">
                        <input type="hidden" name="id" value="#=id#" />
                        <input type="hidden" name="nha_cung_cap_id" value="#=nha_cung_cap_id!=null ? nha_cung_cap_id : ''#" />
                        <div class="control-group">
                            <label>Tên nhà cung cấp (*)</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Tên nhà cung cấp" name="ten_nha_cung_cap" value="#=ten_nha_cung_cap!=null ? ten_nha_cung_cap : ''#">
                            </div>
                        </div>
                        <div class="row-fluid ">
                            <div class="control-group span8">
                                <label>Tên thường gọi</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Tên nhà cung cấp" name="ten_thuong_goi" value="#=ten_thuong_goi!=null ? ten_thuong_goi : ''#">
                                </div>
                            </div>
                            <div class="control-group span4">
                                <label>Mã số thuế (*)</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Mã số thuế" name="ma_so_thue" value="#=ma_so_thue!=null ? ma_so_thue : ''#">
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <label>Địa chỉ </label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Địa chỉ" name="dia_chi" value="#=dia_chi!=null ? dia_chi : ''#">
                            </div>
                        </div>

                        <div class="row-fluid ">
                            <div class="control-group span4">
                                <label>Điện thoại</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Điện thoại" name="dien_thoai" value="#=dien_thoai!=null ? dien_thoai : ''#">
                                </div>
                            </div>
                            <div class="control-group span8">
                                <label>Email</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Email" name="email" value="#=email!=null ? email : ''#">
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid ">
                            <div class="control-group span4">
                                <label>Trạng thái</label>
                                <div class="controls">
                                    <select name="trang_thai" class="span12">
                                        #if(trang_thai=="true"){#
                                        <option value="true">Hoạt động</option>
                                        <option value="false" selected>Ngưng hoạt động</option>
                                        #}else{#
                                        <option value="true" selected>Hoạt động</option>
                                        <option value="false">Ngưng hoạt động</option>
                                        #}#
                                    </select>
                                </div>
                            </div>
                            <div class="control-group span8">
                                <label>Website</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Website" name="website" value="#=website!=null ? website : ''#">
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid ">
                            <div class="control-group span4">
                                <label>Vốn điều lệ</label>
                                <div class="controls">
                                    <input type="number" class="span12" placeholder="Vốn điều lệ" name="von_dieu_le" value="#=von_dieu_le!=null ? von_dieu_le : ''#">
                                </div>
                            </div>
                            <div class="control-group span8">
                                <label>Quy mô (có chi nhánh)</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Quy mô" name="quy_mo" value="#=quy_mo!=null ? quy_mo : ''#">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="row-fluid ">
                            <div class="control-group span4">
                                <label>Phạm vi cung cấp</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Phạm vi cung cấp" name="pham_vi_cung_ung" value="#=pham_vi_cung_ung!=null ? pham_vi_cung_ung : ''#">
                                </div>
                            </div>
                            <div class="control-group span5">
                                <label>Thời gian giao hàng/triển khai</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Thời gian giao hang" name="thoi_gian_giao_hang" value="#=thoi_gian_giao_hang!=null ? thoi_gian_giao_hang : ''#">
                                </div>
                            </div>
                            <div class="control-group span3">
                                <label>Thời gian bảo hành</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Bảo hành" name="bao_hanh" value="#=bao_hanh!=null ? bao_hanh : ''#">
                                </div>

                            </div>
                        </div>
                        <div class="control-group">
                            <label>Điều kiện thanh toán</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Điều kiện thanh toán" name="dieu_kien_thanh_toan" value="#=dieu_kien_thanh_toan!=null ? dieu_kien_thanh_toan : ''#">
                            </div>
                        </div>
                        <div class="row-fluid ">

                            <div class="control-group span6">
                                <label>Phương thức thanh toán</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Phương thức thanh toán" name="phuong_thuc_thanh_toan" value="#=phuong_thuc_thanh_toan!=null ? phuong_thuc_thanh_toan : ''#">
                                </div>
                            </div>
                            <div class="control-group span6">
                                <label>Thời hạn thanh toán</label>
                                <div class="controls">
                                    <input type="text" class="span12" placeholder="Thời hạn thanh toán" name="thoi_han_thanh_toan" value="#=thoi_han_thanh_toan!=null ? thoi_han_thanh_toan : ''#">
                                </div>
                            </div>
                        </div>
                        <div class="control-group">
                            <label>Mặt hàng kinh doanh</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Mặt hàng kinh doanh" name="chung_loai_hang_hoa_ncc" value="#=chung_loai_hang_hoa_ncc!=null ? chung_loai_hang_hoa_ncc : ''#">
                            </div>
                        </div>
                        <div class="control-group">
                            <label>Thời gian đã cung cấp</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Thời gian đã cung cấp" name="thoi_gian_cung_ung" value="#=thoi_gian_cung_ung!=null ? thoi_gian_cung_ung : ''#">
                            </div>

                        </div>
                        <div class="control-group">
                            <label>Khách hàng đã cung cấp</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Khách hàng đã cung cấp" name="khach_hang_cung_cap" value="#=khach_hang_cung_cap!=null ? khach_hang_cung_cap : ''#">
                            </div>
                        </div>
                    </div>
                    <div class="span4">
                        <div class="control-group">
                            <label>Thông báo giao hàng</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Thông báo giao hàng" name="thong_bao_giao_hang" value="#=thong_bao_giao_hang!=null ? thong_bao_giao_hang : ''#">
                            </div>
                        </div>


                        <div class="control-group">
                            <label>Nhà cung cấp của HPSTD</label>
                            <div class="controls">
                                <select name="nha_cung_cap_cua_hdbank" class="span12">
                                    #if(nha_cung_cap_cua_hdbank == "CHUA_LA_NCC_HDBANK"){#
                                    <option value="NCC_HDBANK">NCC của HPSTD</option>
                                    <option value="CHUA_LA_NCC_HDBANK" selected>Chưa là NCC của HPSTD</option>
                                    #}else{#
                                    <option value="NCC_HDBANK" selected>NCC của HPSTD</option>
                                    <option value="CHUA_LA_NCC_HDBANK">Chưa là NCC của HPSTD</option>
                                    #}#
                                </select>
                            </div>
                        </div>
                        <div class="control-group">
                            <label>Số lượng tiêu chuẩn</label>
                            <div class="controls">
                                #if(id > 0){#
                                <input type="number" class="span12" placeholder="Số lượng tiêu chuẩn" name="so_luong_tieu_chuan" value="#=so_luong_tieu_chuan!=null ? so_luong_tieu_chuan : ''#">
                                #}else{#
                                <input type="number" class="span12" placeholder="Số lượng tiêu chuẩn" name="so_luong_tieu_chuan" value="#=so_luong_tieu_chuan!=null ? so_luong_tieu_chuan : ''#">
                                #}#
                            </div>
                        </div>
                        <div class="control-group">
                            <label>Ghi chú</label>
                            <div class="controls">
                                <input type="text" class="span12" placeholder="Ghi chú" name="ghi_chu" value="#=ghi_chu!=null ? ghi_chu : ''#">
                            </div>
                        </div>
                        <div class="control-group">
                            <label>File đính kèm</label>
                            <div class="controls">
                                <input type="file" class="span12 FileUpload" placeholder="File đính kèm" name="file_dinh_kem" value="#=file_dinh_kem!=null ? file_dinh_kem : ''#">
                            </div>
                        </div>
                        <div class="control-group">
                            <a id="linkFileUpload"></a>
                        </div>
                        <div class="control-group">
                            <label>Nhóm phân cấp sản phẩm</label>
                            <div class="controls">
                                @(Html.Kendo().MultiSelect()
                                    .Name("ma_phan_cap")
                                    .DataTextField("ten_phan_cap")
                                    .DataValueField("ma_phan_cap")
                                    .HtmlAttributes(new { @style = "width:100%;" })
                                    .Filter("contains")
                                    .Placeholder("Nhóm phân cấp sản phẩm")
                                    .BindTo(ViewBag.listProductCategory)
                                    .ToClientTemplate()
                                 )
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    #if(id > 0){#
    <div class="row-fluid">
        @(Html.Kendo()
        .Grid<HPSTD.Core.Entities.ContactInfor>()
        .Name("gridContact")
        .HtmlAttributes(new { @style = "height:200px" })
        .Columns(columns =>
        {
            columns.Bound(p => p.id).Hidden();
            columns.Template(@<text></text>).HeaderHtmlAttributes(new { @style = "text-align: center" }).ClientTemplate("<span><a class='btn btn-danger btn-mini' onclick='removeDetail(\\#=id\\#)'><i class='fa fa-pencil'></i>Xóa</a></span>").Width(50);
            columns.Bound(p => p.ten_nguoi_lien_he).Width(150).Title("Họ tên");
            columns.Bound(p => p.so_dien_thoai).Width(100).Title("Điện thoại");
            columns.Bound(p => p.email).Width(120).Title("Email");
            columns.Bound(p => p.nguoi_lien_he_chinh).Width(90).Title("Người liên hệ chính");
            columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(100).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <div class="pull-left">
                    @if (them)
                    {
                        <a class="btn btn-info btn-mini" href="javascript:void(0)" onclick="insertDetail()">Thêm người liên hệ</a>
                    }
                </div>
            </text>);
        })
        //.Sortable()
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
        .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
        .Pageable(p => p
            .Messages(m => m
                .Display("{0}-{1} của {2} dòng")
                .Empty("Không có dòng nào")
                .ItemsPerPage("dòng trên trang")
                .First("Trang kế")
                .Last("Trang tiếp")
                .Next("Đầu trang")
                .Previous("Cuối trang"))
        )
        .Scrollable()
        //.Events(e => { e.DataBound("onDatabound"); })
        .Navigatable()
        .Reorderable(r => r.Columns(true))
        .Resizable(r => r.Columns(true))
        .AutoBind(false)
        .DataSource(dataSource => dataSource
            .Ajax()
            .Batch(true)
            .PageSize(20)
            .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
            .Model(model =>
            {
                model.Id(p => p.id);
                model.Field(p => p.ngay_tao).Editable(false);
                model.Field(p => p.nguoi_tao).Editable(false);
                model.Field(p => p.nguoi_lien_he_chinh).DefaultValue(true);
            })
            .Update(read => read.Action("Update", "Vendor").Data("getNCC"))
            .Create(read => read.Action("Update", "Vendor").Data("getNCC"))
            .Read(read => read.Action("ReadContactInfor", "Vendor", new { nha_cung_cap_id = "" }))
        ).ToClientTemplate()
        )
    </div>
    <div class="row-fluid">
        @(Html.Kendo()
        .Grid<HPSTD.Core.Entities.ProductPriceHeader>()
        .Name("gridProductPrice")
        .Columns(columns =>
        {
            columns.Bound(p => p.id).Hidden();
            columns.Bound(p => p.ma_chinh_sach_gia).Width(90).Title("Mã chính sách");
            columns.Bound(p => p.ngay_ap_dung).Width(90).Title("Ngày áp dụng").Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.ngay_ket_thuc).Width(90).Title("Ngày kết thúc").Format("{0:dd/MM/yyyy}");
        })
            .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <div class="pull-left">
                    <a class="btn btn-info btn-mini" href="javascript:void(0)">
                        Chính sách giá
                    </a>
                </div>
            </text>);
        })
                //.Sortable()
                //.Editable(editable => editable.Mode(GridEditMode.InCell))
                                    .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                                    .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                    .Pageable(p => p
                                    .Messages(m => m
                                    .Display("{0}-{1} của {2} dòng")
                                    .Empty("Không có dòng nào")
                                    .ItemsPerPage("dòng trên trang")
                                    .First("Trang kế")
                                    .Last("Trang tiếp")
                                    .Next("Đầu trang")
                                    .Previous("Cuối trang")
                                    )
                                    )
                                    .Scrollable()
                //.Events(e => { e.DataBound("onDatabound"); })
                                    .Navigatable()
                                    .Reorderable(r => r.Columns(true))
                                    .Resizable(r => r.Columns(true))
                                    .AutoBind(false)
                                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(20)
                                        //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                    .Model(model =>
                                    {
                                        model.Id(p => p.id);
                                    })
                                    .Read(read => read.Action("ReadProductPrice", "Vendor", new { nha_cung_cap_id = "" }))
                                    )
                                    .ToClientTemplate()
        )
    </div>
    #}#

    <div class="row-fluid fixed" style="position: fixed;bottom: 0;right: 0;">
        <div class="form-actions pull-right" style="width:100%; padding-right:10px !important; padding-top:5px !important; padding-bottom:5px !important; margin:0px; background-color: whitesmoke !important">
            <div style="float:right">

                <a onclick="clearForm()" class="btn btn-small btn-xs">Hủy</a>
                #if(id > 0){#
                <a onclick="removeVendor('#=id#')" class="btn btn-small btn-danger">Xóa</a>
                #}#
                <a onclick="saveFrom()" class="btn btn-small btn-info">Lưu</a>
                <a onclick="saveAndClear()" class="btn btn-small btn-primary">Lưu &amp; Mới</a>
            </div>
        </div>
    </div>
</script>
<script src="~/Scripts/jquery.validate.js"></script>

<div id="popup-confirmDetail" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="DeleteDetail()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>
<div id="popup-confirm" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="Delete()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>
<div id="popup-import" class="modal hide">
    <form action="~/Vendor/Import" method="post" id="importForm" enctype="multipart/form-data" class="form-inline" style="margin:0px">
        <div class="k-window-titlebar k-header">
            <span class="k-window-title">Import</span>
            @*<button type="button" class="btclose" data-dismiss="modal">&times;</button>*@
        </div>
        <div class="modal-body overflow-visible">
            <div class="row-fluid form-horizontal">
                <label>Chọn file </label>
                <input name="FileUpload" type="file" id="FileUpload" />
            </div>
        </div>
        <div class="modal-footer">
            <a class="btn btn-info btn-small" onclick="Import()"> Đồng ý</a>
            <a class="btn btn-default btn-small" data-dismiss="modal">Đóng</a>
        </div>
    </form>
</div>
@* Import *@
<script>
    function importExcel() {
        $('#popup-import').modal('show');
    }
    function Import() {
        $('#importForm').submit();
    }
    $(document).ready(function () {
        $('#FileUpload').ace_file_input({
            no_file: 'Chưa chọn tập tin ...',
            btn_choose: 'Chọn',
            btn_change: 'Thay đổi',
            droppable: false,
            onchange: null,
            thumbnail: false, //| true | large
            allowExt: ['gif', 'png', 'jpg', 'jpeg', 'xlsx', 'xls', 'doc', 'docx', 'pdf'],
            denyExt: ['exe', 'php'],
            maxSize: 5120000,
            //onchange:''
            before_change: function (files, dropped) {
                var allowed_files = [];
                for (var i = 0 ; i < files.length; i++) {
                    var file = files[i];
                    if (typeof file === "string") {
                        //IE8 and browsers that don't support File Object
                        if (!(/\.(xlsx|xls)$/i).test(file))
                            //if (!(/\.(jpe?g|png|gif|bmp|doc|docx|xlsx|xls|pdf)$/i).test(file))
                            return false;
                    }
                    else {
                        var type = $.trim(file.type);
                        var isValidLength = type.length > 0;
                        var isApplication = (/^application\/(pdf|msword|vnd.openxmlformats-officedocument.spreadsheetml.sheet)$/i).test(type);
                        //var isValidFileName = (/\.(jpe?g|png|gif|bmp|doc|docx|xlsx|xls|pdf)$/i).test(file.name);
                        var isValidFileName = (/\.(xlsx|xls)$/i).test(file.name);
                        //var isImage = (/^image\/(jpe?g|png|gif|bmp)$/i).test(type);
                        if (isValidLength) {
                            if (!isApplication && !isValidFileName) {
                                alert('Sai định dạng file(*.xlsx,*.xls): ' + file.name);
                                continue;
                            }
                        } else {
                            continue;
                        }
                    }

                    allowed_files.push(file);
                }
                if (allowed_files.length === 0) return false;
                return allowed_files;
            }
        });
    });
    function onCloseForm() {
        $('#txtcontent').val('');
        $('.modal').modal('hide');
    }
    $("#importForm").validate({
        submitHandler: function (form) {
            $("#importForm").ajaxSubmit({
                uploadProgress: function (event, position, total, percentComplete) { },
                success: function (data) {
                    if (data.success) {
                        $("#grid").data("kendoGrid").dataSource.read();
                        if (data.totalError > 0) {
                            $.gritter.add({
                                title: 'Lỗi',
                                text: "Có dòng lỗi, tải về để sửa lại.",
                                class_name: 'gritter-error'
                            });
                            window.open(r + "/ExcelImport/" + data.link, "_blank");
                        }
                        else {
                            $.gritter.add({
                                title: '',
                                text: "Nhập thành công " + data.total + " trang",
                                class_name: 'gritter-success',
                                button: 'zzz'
                            });
                        }
                        $('#FileUpload').ace_file_input('reset_input');
                    } else {
                        $.gritter.add({
                            title: '',
                            text: "Báo lỗi " + data.message,
                            class_name: 'gritter-error',
                            button: 'zzz'
                        });
                    }
                    onCloseForm();
                }
            });
        },
    });
    function getNCC() {
        return {
            ma_ncc: $("input[name='nha_cung_cap_id']").val()
        }
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
        }
    }
    function onRequestEnd(e) {
        if (e.type == "update" || e.type == "create" || e.type == "delete") {
            if (e.response.Errors == null) {
                if (e.response.Errors == null) {
                }
            }
        }
    }
    function saveDetail() {
        if ($('#gridContact').data('kendoGrid').dataSource.hasChanges() == true) {
            $('#gridContact').data('kendoGrid').saveChanges();
        }
    }
    function insertDetail() {
        $("#gridContact").data("kendoGrid").dataSource.insert()
    }
    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        $('.FileUpload').ace_file_input({
            no_file: 'chưa có file...',
            btn_choose: 'Chọn',
            btn_change: 'Thay đổi',
            droppable: false,
            onchange: null,
            thumbnail: false
        });
        if (data.id > 0) {
            if (data.listMa_phan_cap != null) {
                var listMa_phan_cap = $.map(data.listMa_phan_cap, function (value, index) {
                    return [value];
                });
                $("#ma_phan_cap").data("kendoMultiSelect").value(listMa_phan_cap);
            }
        }
        loadValidate(data);
    }
    function clearForm() {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    }
    function edit(e) {
        var data = $("#grid").data("kendoGrid").dataItem($(e).closest("tr"));
        $("#tabAdd").trigger("click");
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Chỉnh sửa nhà cung cấp')
        nha_cung_cap_id = data.nha_cung_cap_id
        loadForm(data);

        $('#linkFileUpload').prop("href", r + data.file_dinh_kem)
        $('#linkFileUpload').text('');
        if (data.file_dinh_kem != null)
            $('#linkFileUpload').text('Download file');

        $("#gridProductPrice").data("kendoGrid").dataSource.read({ nha_cung_cap_id: data.nha_cung_cap_id });
        $("#gridContact").data("kendoGrid").dataSource.read({ nha_cung_cap_id: data.nha_cung_cap_id });
    }
    $("#tabList").bind('click', function () {
        //$('#tabAdd').text('').append('Thêm nhà cung cấp')
        $('#tabAdd').css('display', 'none');
    });

    @*$("#tabAdd").bind('click', function () {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    });*@

    $('#btnGridAdd').bind('click', function () {
        $('#tabAdd').css('display', 'block');
        $('#tabAdd').text('').append('Thêm nhà cung cấp')
        $("#tabAdd").trigger("click");
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    })

    var reset = false;
    function saveAndClear() {
        reset = true;
        $('#EditForm').submit();
    }
    function saveFrom() {
        $('#EditForm').submit();
    }
    function loadValidate() {
        $("#EditForm").validate({
            rules: {
                'ten_nha_cung_cap': { required: true },
                'ma_so_thue': { required: true },
                // 'dien_thoai': { required: true },
                // 'dia_chi': { required: true },
                // 'chung_loai_hang_hoa_ncc': { required: true },
                // 'von_dieu_le': { required: true },
                // 'email': { required: true, email: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    clearForm: false,
                    success: function (data) {
                        if (data.success) {
                            $("#grid").data("kendoGrid").dataSource.read()
                            $.gritter.add({
                                text: "Lưu thành công",
                                class_name: 'gritter-success'
                            });
                            saveDetail();
                            if (reset) {
                                reset = false;
                                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                            }
                            else {
                                loadForm(data.data);
                                $('#linkFileUpload').prop("href", r + data.data.file_dinh_kem)
                                $('#linkFileUpload').text('');
                                if (data.data.file_dinh_kem != null)
                                    $('#linkFileUpload').text('Download file');
                            }
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }

                    }
                });
                return false;
            }
        });
    }

    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#grid").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function Databound(e) {
        var grid = this;
        resizeGrid();
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
        .options.parameterMap({
            page: grid.dataSource.page(),
            sort: grid.dataSource.sort(),
            filter: grid.dataSource.filter()
        });
        var $exportLink = $('.export');
        var href = $exportLink.attr('href');
        if (href) {
            href = href.replace(/filter=([^&]*)/, 'filter=' + (requestObject.filter || '~'));
            $exportLink.attr('href', href);
        }
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
            dataArea = gridElement.find(".k-grid-content"),
            otherElements = gridElement.children().not(".k-grid-content"),
            otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 25);
    }
    function Active() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            var cf = confirm("Are you sure you want to Active this record");
            if (cf == true) {
                $.post(r + "/Vendor/Active", { data: checkrowid }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: "Active successfully " + data.message + " records!",
                            class_name: 'gritter-success',
                        });
                        $("#grid").data("kendoGrid").dataSource.read();
                        $("#checkboxcheckAll").prop('checked', false);
                    }
                    else {
                        $.gritter.add({
                            text: data.error,
                            class_name: 'gritter-error',
                        });

                    }
                });
            }
            else {
                return false;
            }
        } else {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function Inactive() {
        var checkrowid = "";
        $("#grid").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checkrowid += $(this).attr("id") + "@@@@";
            }
        });
        if (checkrowid != null && checkrowid != "") {
            var cf = confirm("Are you sure you want to inactive this record");
            if (cf == true) {
                $.post(r + "/Vendor/Inactive", { data: checkrowid }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: "Inactive successfully " + data.message + " records!",
                            class_name: 'gritter-success',
                        });
                        $("#grid").data("kendoGrid").dataSource.read();
                        $("#checkboxcheckAll").prop('checked', false);
                    }
                    else {
                        $.gritter.add({
                            text: data.error,
                            class_name: 'gritter-error',
                        });

                    }
                });
            }
            else {
                return false;
            }
        } else {
            $.gritter.add({
                // (string | mandatory) the heading of the notification
                title: '',
                // (string | mandatory) the text inside the notification
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
    function filter(e) {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = e.value;
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ten_nha_cung_cap", operator: "contains", value: text });
            filterOr.filters.push({ field: "dien_thoai", operator: "contains", value: text });
            filterOr.filters.push({ field: "email", operator: "contains", value: text });

            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
        console.log(text)
    }
    var idDetail = 0, Id = 0;
    function removeDetail(e) {
        idDetail = e;
        $('#popup-confirmDetail').modal('show');
    }
    function removeVendor(e) {
        Id = e;
        $('#popup-confirm').modal('show');
    }
    function Delete() {
        $.post(r + "/Vendor/Delete", { id: Id }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Xóa thành công",
                    class_name: 'gritter-success'
                });
                $("#grid").data("kendoGrid").dataSource.read();
                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                $('#popup-confirm').modal('hide');
            } else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'error-success'
                });
            }
        })
    }
    var nha_cung_cap_id;
    function DeleteDetail() {
        $.post(r + "/Vendor/DeleteDetail", { id: idDetail }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Xóa thành công",
                    class_name: 'gritter-success'
                });
                $("#gridContact").data("kendoGrid").dataSource.read({ nha_cung_cap_id: $("input[name='nha_cung_cap_id']").val() });
                $('#popup-confirmDetail').modal('hide');
            } else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'error-success'
                });
            }
        })
    }
</script>

