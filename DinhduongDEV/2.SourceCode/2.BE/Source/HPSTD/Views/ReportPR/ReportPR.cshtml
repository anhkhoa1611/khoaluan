@using HPSTD.Core.Entities
@{
    ViewBag.Title = "Theo dõi kế hoạch mua sắm năm";
}
<div class="row-fluid widget-box">
    <div class="span12">
        <input type="text" id="txtSearch" class="span3" placeholder="Phiếu mua sắm, tên phiếu, mã sản phẩm..." onkeyup="filter()" />
    </div>
</div>
<div class="row-fluid">
    @(Html.Kendo()
    .Grid<HPSTD.Core.Entities.ReportPR>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ma_phieu).Width(130).Title("GĐN mua sắm số");
        columns.ForeignKey(p => p.ma_chi_nhanh, (System.Collections.IEnumerable)ViewBag.listBranch, "ma_chi_nhanh", "ten_chi_nhanh").Title("Tên CN/Phòng/Ban/PGD ").Width(250);
        columns.Bound(p => p.ten_phieu).Width(180).Title("Tên");
        columns.Bound(p => p.ngay_tao_yeu_cau).Title("Ngày yêu cầu").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
        columns.ForeignKey(p => p.ma_san_pham, (System.Collections.IEnumerable)ViewBag.listProduct, "ma_san_pham", "ten_san_pham").Title("Tên hàng hóa").Width(250).EditorTemplateName("GridNullableForeignKey").HtmlAttributes(new { columnname = "ma_san_pham" });

        columns.Group(group => group
        .Title("Trưởng đơn vị").HeaderHtmlAttributes(new { style = "text-align:center" })
        .Columns(info =>
        {
            info.Bound(p => p.y_kien_cua_don_vi).Title("Ý kiến").Width(150);
            info.Bound(p => p.ngay_duyet_TDV).Title("Ngày duyệt").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
            info.Bound(p => p.nguoi_duyet_TDV).Width(180).Title("Người duyệt");
        }));

        columns.Group(group => group
       .Title("Phòng HCQT").HeaderHtmlAttributes(new { style = "text-align:center" })
       .Columns(info =>
       {
           info.Bound(p => p.y_kien_HCQT).Title("Ý kiến").Width(150);
           info.Bound(p => p.ngay_duyet_HCQT).Title("Ngày duyệt").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
           info.Bound(p => p.nguoi_duyet_HCQT).Width(180).Title("Người duyệt");
       }));

        columns.Group(group => group
       .Title("Khối TTCN").HeaderHtmlAttributes(new { style = "text-align:center" })
       .Columns(info =>
       {
           info.Bound(p => p.y_kien_TTCNTT_NHDT).Title("Ý kiến").Width(150);
           info.Bound(p => p.ngay_duyet_TTCNTT_NHDT).Title("Ngày duyệt").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
           info.Bound(p => p.nguoi_duyet_TTCNTT_NHDT).Width(180).Title("Người duyệt");
       }));

        columns.Group(group => group
       .Title("Phòng QLDVKH").HeaderHtmlAttributes(new { style = "text-align:center" })
       .Columns(info =>
       {
           info.Bound(p => p.y_kien_QLDVKH_NQT).Title("Ý kiến").Width(150);
           info.Bound(p => p.ngay_duyet_QLDVKH_NQT).Title("Ngày duyệt").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
           info.Bound(p => p.nguoi_duyet_QLDVKH_NQT).Width(180).Title("Người duyệt");
       }));

        columns.Group(group => group
       .Title("Đơn vị HO khác").HeaderHtmlAttributes(new { style = "text-align:center" })
       .Columns(info =>
       {
           info.Bound(p => p.y_kien_khac_HO).Title("Ý kiến").Width(150);
           info.Bound(p => p.ngay_duyet_khac_HO).Title("Ngày duyệt").Filterable(false).Width(120).Format("{0:dd/MM/yyyy}").HtmlAttributes(new { style = "text-align:right" });
           info.Bound(p => p.nguoi_duyet_khac_HO).Width(180).Title("Người duyệt");
       }));

        columns.Bound(p => p.so_luong).Title("Số lượng").Filterable(false).Width(90).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right", columnname = "so_luong" });
        columns.ForeignKey(p => p.ma_nha_cung_cap, (System.Collections.IEnumerable)ViewBag.listVender, "nha_cung_cap_id", "ten_nha_cung_cap").Title("Nhà cung cấp").Width(250).EditorTemplateName("GridNullableForeignKey").HtmlAttributes(new { columnname = "ma_nha_cung_cap" });
        columns.Bound(p => p.don_gia_vat).Title("Đơn giá (Đã VAT)").Filterable(false).Width(120).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right", columnname = "don_gia_vat" });
        columns.Bound(p => p.thong_so_ky_thuat).Title("Thông số kỹ thuật").Filterable(false).Width(200).HtmlAttributes(new { columnname = "thong_so_ky_thuat" }); ;
        columns.Bound(p => p.chuc_danh_nguoi_su_dung).Title("Chức danh người sử dụng").Filterable(false).Width(200);
        columns.Bound(p => p.ke_hoach_nam).Width(100).Title("Kế hoạch năm").ClientTemplate("#if(ke_hoach_nam){#Có#}else{#Không có#}#");
        columns.ForeignKey(p => p.trang_thai, (System.Collections.IEnumerable)ViewBag.listTrangThai, "ma_tham_so", "gia_tri").Title("Trạng thái").Width(150);
    })
    .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
    .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
    .Pageable(p => p
        .Messages(m => m
            .Display("{0}-{1} của {2} dòng")
            .Empty("Không có dòng nào")
            .ItemsPerPage("dòng trên trang")
            .First("Trang kế")
            .Last("Trang tiếp")
            .Next("Đầu trang")
            .Previous("Cuối trang")
        )
    )
    .Scrollable()
    .Events(e => { e.DataBound("Databound"); })
    .Navigatable()
    .Resizable(r => r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Resizable(r => r.Columns(true))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(20)
    //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
    .Model(model =>
    {
        //model.Id(p => p.nam_ke_hoach);
    })

    .Read(read => read.Action("Read", "ReportPR"))
    ))
</div>

<script>
    function Databound() {
        resizeGrid();
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 25);
    }

    function filter() {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = $("#txtSearch").val();
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_phieu", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_phieu", operator: "contains", value: text });
            filterOr.filters.push({ field: "ma_san_pham", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }
</script>