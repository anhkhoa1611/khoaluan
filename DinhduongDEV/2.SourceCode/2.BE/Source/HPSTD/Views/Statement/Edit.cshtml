@model StatementHeader
@using HDBank.Core.Entities
@{
    ViewBag.Title = "Sửa bảng tổng hợp";
    var newdata = new StatementHeader();
    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
<script src="@Url.Content("~/Scripts/jquery.blockUI.js")"></script>

<form action="@Url.Content("~/Statement/UpdateNew")" id="EditForm" method="post" enctype="multipart/form-data">
    <div class="row-fluid">
        <div class="span2">
            <input type="hidden" name="id" value="@Model.id" />
            <div class="control-group">
                <label>Số phiếu (*)</label>
                <div class="controls">
                    <input type="text" class="span12" placeholder="Số phiếu" name="ma_phieu" id="ma_phieu" readonly>
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Tên phiếu (*)</label>
                <div class="controls">
                    <input type="text" class="span12" placeholder="Tên phiếu" name="ten_phieu" id="ten_phieu">
                </div>
            </div>
        </div>
        @*<div class="span2">
                <div class="control-group">
                    <label>Đơn vị (*)</label>
                    @(Html.Kendo().DropDownList()
                    .Name("ma_don_vi")
                    .DataTextField("ten_chi_nhanh")
                    .DataValueField("ma_chi_nhanh")
                    .HtmlAttributes(new { @style = "width:100%;" })
                    .Filter("contains")
                    .OptionLabel("Đơn vị")
                    //.Value(Model.ma_don_vi)
                    .BindTo(ViewBag.listDonVi)
                    )
                </div>
            </div>*@
        <div class="span2">
            <div class="control-group">
                <label>Ngày yêu cầu</label>
                <div class="controls">
                    <input type="text" class="span12 date-picker" placeholder="Ngày tạo yêu càu" name="ngay_tao_yeu_cau" id="ngay_tao_yeu_cau" value="@Model.ngay_tao_yeu_cau.ToString("dd/MM/yyyy")" disabled="disabled">
                </div>
            </div>
        </div>
        <div class="span2">
            <div class="control-group">
                <label>Ngày cấp thiết bị</label>
                <div class="controls">
                    <input type="text" class="span12 date-picker" placeholder="Ngày cấp thiết bị" name="ngay_cap_thiet_bi" id="ngay_cap_thiet_bi" value="@Model.ngay_cap_thiet_bi.ToString("dd/MM/yyyy")">
                </div>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        @(Html.Kendo()
        .Grid<HDBank.Core.Entities.StatementDetail>()
        .Name("gridPYC")
        .Columns(columns =>
        {
        columns.Bound(p => p.id).Hidden();
        //.HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
        //.ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#'/> ")
        //.Width(25).Filterable(false).Title("").Sortable(false);
        //columns.Bound(p => p.ma_phieu_header).Width(90).Title("Mã phiếu");
        //columns.Bound(p => p.ma_san_pham).Width(90).Title("Mã sản phẩm");
        columns.Template(@<text></text>).HeaderHtmlAttributes(new { @style = "text-align: center" })
        .ClientTemplate("<span><a class='btn btn-mini btn-danger' onclick='removeDetail(#=id#)'><i class='fa fa-trash'></i></a></span>").Width(45);
            columns.ForeignKey(p => p.ma_san_pham, (System.Collections.IEnumerable)ViewBag.listProduct, "ma_san_pham", "ten_san_pham")
            .Title("Tên vật tư").Width(160);
            columns.Bound(p => p.so_luong).Title("SL").Filterable(false).Width(75).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right", columnname = "so_luong" });
            columns.Bound(p => p.don_gia_vat).Title("Chi phí (VAT)").Filterable(false).Width(150).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right", columnname = "chi_phi" });
            columns.Bound(p => p.thong_so_ky_thuat).Title("Thông tin kỹ thuật").Filterable(false).Width(220);
            columns.Bound(p => p.muc_dich_su_dung).Title("Mục đích sử dụng").Filterable(false).Width(180);
            columns.ForeignKey(p => p.ma_nha_cung_cap, (System.Collections.IEnumerable)ViewBag.Vendor, "nha_cung_cap_id", "ten_nha_cung_cap")
            .Title("NCC").EditorTemplateName("GridNullableForeignKey").HtmlAttributes(new { columnname = "ma_nha_cung_cap" }).Width(160);
            columns.Bound(p => p.noi_dung_xac_nhan_ton_kho).Title("Ý kiến xác nhận tồn kho").Filterable(false).Width(130).HtmlAttributes(new { columnname = "noi_dung_xac_nhan_ton_kho" });
            columns.Bound(p => p.noi_dung_xac_nhan_cap_3).Title("Ý kiến xác nhận cấp 3").Filterable(false).Width(130).HtmlAttributes(new { columnname = "noi_dung_xac_nhan_cap_3" });
            columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right", columnname = "ngay_tao" });
            columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
            columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right", columnname = "ngay_sua" });
            columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
            columns.Bound(p => p.don_gia).Hidden();
            columns.Bound(p => p.thue_vat).Hidden();
            columns.Bound(p => p.don_vi_tinh).Hidden();
            columns.Bound(p => p.ma_chinh_sach_gia).Hidden();
        })
            .ToolBar(toolbar =>
            {
            toolbar.Template(@<text>
            @if (sua)
            {
                <div class="pull-left">
                    <a class="btn btn-info btn-mini" href="javascript:void(0)" onclick="Save()">
                        Lưu
                    </a>
                </div>
            }
            @if (them)
            {
                <div class="pull-left">
                    <a class="btn btn-danger btn-mini" href="javascript:void(0)" onclick="OpenPopup()">
                        Thêm chi tiết
                    </a>
                </div>
                <div class="pull-left">
                    <a class="btn btn-primary btn-mini" href="javascript:void(0)" onclick="review('print')">
                        In phiếu
                    </a>
                </div>
            }
            @if (xuat)
            {
                <a class="btn btn-info btn-mini" href="@Url.Action("ExportData", "Statement", new { filter = "~", sort = "~", ma_phieu_header = Model.ma_phieu })" id="btnGridExport">
                    <i class="fa fa-file-excel-o"></i> Xuất Excel
                </a>
            }
            </text>);
            })
                .Sortable()
                .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                .Pageable(p => p
                .Messages(m => m
                .Display("{0}-{1} của {2} dòng")
                .Empty("Không có dòng nào")
                .ItemsPerPage("dòng trên trang")
                .First("Trang kế")
                .Last("Trang tiếp")
                .Next("Đầu trang")
                .Previous("Cuối trang")
                )
                )
                .Scrollable()
                .Events(e =>
                {
                    e.DataBound("Databound");
                    e.Edit("onEdit");
                })
                .Editable(edit => edit.Mode(GridEditMode.InCell))
                .Navigatable()
                .Reorderable(r => r.Columns(true))
                .Resizable(r => r.Columns(true))
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })

                .Events(e =>
                {
                    e.Change("onChange");
                })
                .Model(model =>
                {
                    model.Id(p => p.id);
                    model.Field(m => m.ma_san_pham).Editable(false);
                    model.Field(m => m.so_luong).Editable(false);
                    model.Field(m => m.don_gia_vat).Editable(false);
                    model.Field(m => m.thong_so_ky_thuat).Editable(true);
                    model.Field(m => m.muc_dich_su_dung).Editable(true);
                    model.Field(m => m.ma_nha_cung_cap).Editable(false);
                    model.Field(m => m.nguoi_tao).Editable(false);
                    model.Field(m => m.ngay_tao).Editable(false);
                    model.Field(m => m.ngay_cap_nhat).Editable(false);
                    model.Field(m => m.nguoi_cap_nhat).Editable(false);
                    model.Field(m => m.noi_dung_xac_nhan_ton_kho).Editable(false);
                    model.Field(m => m.noi_dung_xac_nhan_cap_3).Editable(false);

                })
                .Read(read => read.Action("ReadDetail", "Statement", new { @ma_phieu_header = Model.ma_phieu }))
                ))
        <br />
    </div>

</form>

<div id="popup-confirm" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="DeleteDetail()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>

<script type="text/x-kendo-template" id="EditTemplate">


</script>

<div id="DetailPopup" class="modal hide" tabindex="-1">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title" id="titlePopupDetail">Thêm</span>
    </div>
    <div class="row-fluid">
        <div class="row-fluid">
            <div class="span12">
                <input type="text" class="span2 date-picker" placeholder="Từ ngày" name="from_date" id="from_date">
                <input type="text" class="span2 date-picker" placeholder="Đến ngày" name="to_date" id="to_date">
                <button type="button" id="btnSearch" class="btn btn-primary btn-small btnSearch" onclick="doSearchpopup()" style="float:none">Lọc dữ liệu</button>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        @(Html.Kendo()
            .Grid<HDBank.Core.Entities.PRequestDetail>
                ()
                .Name("gridDetail")
                .Columns(columns =>
                {
                    columns.Bound(p => p.id)
                    .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
                    .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#'/> ")
                    .Width(25).Filterable(false).Title("").Sortable(false);
                    //columns.Bound(p => p.ma_phieu_header).Width(90).Title("Mã phiếu");
                    columns.ForeignKey(p => p.ma_phieu, (System.Collections.IEnumerable)ViewBag.PORequestHeader, "ma_phieu", "ma_phieu")
                    .Title("Mã phiếu").Width(160);
                    //columns.Bound(p => p.ma_san_pham).Width(90).Title("Mã sản phẩm");
                    columns.ForeignKey(p => p.ma_san_pham, (System.Collections.IEnumerable)ViewBag.listProduct, "ma_san_pham", "ten_san_pham")
                    .Title("Tên vật tư").Width(160);
                    columns.Bound(p => p.so_luong_duyet).Title("SL").Filterable(false).Width(75).Format("{0:N0}");
                    columns.Bound(p => p.thong_so_ky_thuat).Title("Thông tin kỹ thuật").Filterable(false).Width(220);
                    columns.Bound(p => p.don_gia_vat).Title("Chi phí (VAT)").Filterable(false).Width(180).Format("{0:N0}");
                    columns.ForeignKey(p => p.ma_nha_cung_cap, (System.Collections.IEnumerable)ViewBag.Vendor, "nha_cung_cap_id", "ten_nha_cung_cap")
                          .Title("NCC").Width(160);
                    columns.Bound(p => p.noi_dung_xac_nhan_ton_kho).Title("Ý kiến xác nhận tồn kho").Filterable(false).Width(130).HtmlAttributes(new { columnname = "noi_dung_xac_nhan_ton_kho" });
                    columns.Bound(p => p.noi_dung_xac_nhan_cap_3).Title("Ý kiến xác nhận cấp 3").Filterable(false).Width(130).HtmlAttributes(new { columnname = "noi_dung_xac_nhan_cap_3" });
                    columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                    columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
                    columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                    columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
                    columns.Bound(p => p.don_gia).Hidden();
                    columns.Bound(p => p.thue_vat).Hidden();
                    columns.Bound(p => p.don_vi_tinh).Hidden();
                    columns.Bound(p => p.ma_chinh_sach_gia).Hidden();
                })
                .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
                .Pageable(p => p
                .Messages(m => m
                .Display("{0}-{1} của {2} dòng")
                .Empty("Không có dòng nào")
                .ItemsPerPage("dòng trên trang")
                .First("Trang kế")
                .Last("Trang tiếp")
                .Next("Đầu trang")
                .Previous("Cuối trang")
                )
                )
                .Scrollable()
                //.Events(e => { e.DataBound("Databound"); })
                .Navigatable()
                .Reorderable(r => r.Columns(true))
                .Resizable(r => r.Columns(true))
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(p => p.id);
                })
                .Read(read => read.Action("ReadPYC", "Statement"))
            ))
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-info btn-small" onclick="addDetail()">Lưu</button>
        <button type="button" class="btn btn-default btn-small" data-dismiss="modal">Thoát</button>
    </div>
</div>

<script>
    function addDetail() {
        var checked = false;
        var details = [];

        $("#gridDetail").find(".checkrowid").each(function () {
            if ($(this).prop('checked') == true) {
                checked = true;
                var item = $('#gridDetail').data('kendoGrid').dataItem($(this).closest("tr"));
                details.push({
                    id: item.id,
                    ma_pyc_header: item.ma_phieu,
                    ma_san_pham: item.ma_san_pham,
                    so_luong: item.so_luong_duyet,
                    thong_so_ky_thuat: item.thong_so_ky_thuat,
                    ma_nha_cung_cap: item.ma_nha_cung_cap,
                    don_gia_vat: item.don_gia_vat,
                    don_gia: item.don_gia,
                    thue_vat: item.thue_vat,
                    don_vi_tinh: item.don_vi_tinh,
                    ma_chinh_sach_gia: item.ma_chinh_sach_gia,
                    ma_don_vi: item.ma_don_vi,
                    ma_chi_nhanh: item.ma_chi_nhanh,
                    noi_dung_xac_nhan_ton_kho: item.noi_dung_xac_nhan_ton_kho,
                    noi_dung_xac_nhan_cap_3: item.noi_dung_xac_nhan_cap_3,
                });
            }
        });

        if (checked == false) {
            $.gritter.add({
                title: '',
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
            return;
        }

        var data = new Object();
        data.ma_don_vi = $('#ma_don_vi').val();

        $.ajax({
            type: "POST",
            async: false,
            url: r + "/Statement/Adddetail",
            data: { ma_phieu_header: '@ViewBag.StatementHeader.ma_phieu', details: details },
            success: function (data) {
                if (data.success) {
                    $("#gridPYC").data("kendoGrid").dataSource.read({ ma_phieu_header: '@ViewBag.StatementHeader.ma_phieu' });
                    readdatapopup();
                    $.gritter.add({
                        text: "Lưu thành công",
                        class_name: 'gritter-success'
                    });
                    $('#ma_phieu_header').val('@ViewBag.StatementHeader.ma_phieu');
                    $("#DetailPopup").modal('hide');
                }
                else {
                    $.gritter.add({
                        title: '',
                        text: data.error,
                        class_name: 'gritter-error'
                    });
                }
            }
        });
    }
    $(document).ready(function () {
        //var dropdownlist = $("#ma_don_vi").data("kendoDropDownList");
        //dropdownlist.readonly();
        $("#ma_phieu").val('@ViewBag.StatementHeader.ma_phieu');
        $("#ten_phieu").val('@ViewBag.StatementHeader.ten_phieu');
        $('.date-picker').datepicker({ format: 'dd/mm/yyyy', autoclose: true, todayHighlight: true });
        $("#EditForm").validate({
            rules: {
                'ten_phieu': { required: true },
                'ngay_cap_thiet_bi': { required: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                var details = [];

                $.each($("#gridPYC").data("kendoGrid").dataSource.data(), function () {
                    details.push({
                        id: this.id,
                        ma_pyc_header: this.ma_phieu,
                        ma_san_pham: this.ma_san_pham,
                        ma_nha_cung_cap: this.ma_nha_cung_cap,
                        don_gia_vat: this.don_gia_vat,
                        don_gia: this.don_gia,
                        thue_vat: this.thue_vat,
                        don_vi_tinh: this.don_vi_tinh,
                        ma_chinh_sach_gia: this.ma_chinh_sach_gia,
                        so_luong: this.so_luong,
                        thong_so_ky_thuat: this.thong_so_ky_thuat,
                        muc_dich_su_dung: this.muc_dich_su_dung,
                        noi_dung_xac_nhan_ton_kho: this.noi_dung_xac_nhan_ton_kho,
                        noi_dung_xac_nhan_cap_3: this.noi_dung_xac_nhan_cap_3,
                    });
                });

                $(form).ajaxSubmit({
                    clearForm: false,
                    beforeSubmit: function () {
                        blockUI(true);
                    },
                    data: { details: details },
                    success: function (data) {
                        if (data.success) {
                            $("#gridPYC").data("kendoGrid").dataSource.read({ ma_phieu_header: '@ViewBag.StatementHeader.ma_phieu' });
                            $.gritter.add({
                                text: "Lưu thành công",
                                class_name: 'gritter-success'
                            });
                            $('#ma_phieu_header').val('@ViewBag.StatementHeader.ma_phieu');
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }
                        blockUI(false);
                    }
                });
                return false;
            }
        });


    })

    var Id;

    function removeDetail(id) {
        $('#popup-confirm').modal('show');
        Id = id;
    }

    function DeleteDetail() {
        $.post(r + "/Statement/DeleteDetail", { id: Id }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Xóa thành công",
                    class_name: 'gritter-success'
                });
                $("#gridPYC").data("kendoGrid").dataSource.read({ ma_phieu_header: '@ViewBag.StatementHeader.ma_phieu' });
                $("#popup-confirm").modal('hide');
            } else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'error-success'
                });
            }
        })
    }

    function Databound() {
        resizeGrid();
    }

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#gridPYC').offset().top);
        var gridElement = $("#gridPYC"),
    dataArea = gridElement.find(".k-grid-content"),
    otherElements = gridElement.children().not(".k-grid-content"),
    otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 12);
    }

    function Save() {

        $("#EditForm").submit();
    }

    function readdatapopup() {
        grid = $("#gridDetail").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var filterOr = { logic: "or", filters: [] };
        @*filterOr.filters.push({ field: "ma_don_vi", operator: "eq", value: @Model.ma_don_vi });*@
        filter.filters.push(filterOr);
        grid.dataSource.filter(filter);
    }

    function OpenPopup() {
        //readdatapopup();
        $("#gridDetail").data("kendoGrid").dataSource.read();
        $("#DetailPopup").modal('show');
    }

    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#gridDetail").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }

</script>


<script>
    function review() {
        Process(@ViewBag.StatementHeader.id);
    }
    function printContract(html) {
        var printWin = window.open("target", "_blank", "toolbar=yes,scrollbars=yes,resizable=yes");
        printWin.document.write(html);
        printWin.document.close();
        printWin.focus();
        setTimeout(function () {
            printWin.window.print();
            window.close();
        }, 100);
    }
    function Process(id) {
        var listrowid = "";
        if (id != "") {
            listrowid = id;
            if (listrowid != "" && listrowid != null) {
                $.ajax({
                    url: r + '/Statement/ExportPrint/',
                    type: 'POST',
                    data: { Id: 1, isView: 'True', listPO: '@ViewBag.StatementHeader.ma_phieu' },
                    success: function (data, textStatus, jqXHR) {
                        printContract(data);
                    },
                });
            }
        }
        else {
            $.gritter.add({
                title: '',
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }

    function doSearchpopup() {
        var grid = $("#gridDetail").data("kendoGrid");
        var filter = { logic: "and", filters: [] };

        var from_date = $('#from_date').val();
        if (from_date) {

            var from = from_date.trim().split("/");
            var startdate = new Date(from[2], from[1] - 1, from[0]);

            filter.filters.push({ field: "ngay_tao", operator: "gte", value: kendo.toString(startdate, 'yyyy-MM-dd') });
        }

        var to_date = $('#to_date').val();
        if (to_date) {

            var to = to_date.trim().split("/");
            var todate = new Date(to[2], to[1] - 1, to[0]);

            todate.setDate(todate.getDate() + 1);
            filter.filters.push({ field: "ngay_tao", operator: "lt", value: kendo.toString(todate, 'yyyy-MM-dd') });
        }

        grid.dataSource.filter(filter);
    }

    function onEdit(e) {
        var dataItem = $("#gridPYC").data('kendoGrid').dataItem($(e.container).closest("tr"));
        var ma_san_pham = dataItem.ma_san_pham;
        var so_luong = dataItem.so_luong;
        var ma_nha_cung_cap = dataItem.ma_nha_cung_cap;

        $.ajax({
            type: "GET",
            async: false,
            url: r + "/PR/GetVenderByProduct",
            data: { ma_san_pham: ma_san_pham },
            success: function (data) {
                if (data.success) {
                    dataVender = data.data;
                    $("#ma_nha_cung_cap").kendoDropDownList({
                        dataSource: dataVender,
                        dataTextField: "ten_nha_cung_cap",
                        dataValueField: "nha_cung_cap_id",
                        optionLabel: "Select ...",
                        filter: "startswith",
                    });
                }
            }
        });
    }

    function onChange(e) {
        //var model = $('#grid').data('kendoGrid').dataItem($(e.container).closest("tr"));
        var model = e.items[0];
        if (model != null) {

            $.ajax({
                type: "GET",
                async: false,
                url: r + "/PR/GetPriceByCGSVender",
                data: { ma_san_pham: model.ma_san_pham, so_luong: model.so_luong, ma_nha_cung_cap: model.ma_nha_cung_cap },
                success: function (data) {
                    if (data.success) {
                        model.don_gia_vat = data.data.gia_bao_gom_vat;
                        model.don_gia = data.data.gia_bao;
                        model.thue_vat = data.data.thue_vat;
                        model.don_vi_tinh = data.data.don_vi_tinh;
                        model.ma_chinh_sach_gia = data.data.ma_chinh_sach_gia;

                        $("#gridPYC").find("tr[data-uid='" + model.uid + "'] td:eq(4)").text(currency2String(data.data.gia_bao_gom_vat));
                    }
                }
            });
        }
    }

    function currency2String(value) {
        return value.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")
    }

    function blockUI(isMark) {
        if (isMark) {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false })).ajaxStop($.unblockUI);
        }
        else {
            $(document).ajaxStart($.blockUI({ message: '<i class="fa fa-spinner fa-3x fa-lg fa-spin txt-color-blueDark"></i>', theme: false, overlayCSS: { backgroundColor: 'transparent' } })).ajaxStop($.unblockUI);
        }
    }
</script>