@using HPSTD.Core.Entities
@{
    ViewBag.Title = "Bảng tổng hợp";
    var newData = new StatementHeader();
    bool xem = ViewBag.accessDetail != null ? ViewBag.accessDetail.xem : false;
    bool sua = ViewBag.accessDetail != null ? ViewBag.accessDetail.sua : false;
    bool them = ViewBag.accessDetail != null ? ViewBag.accessDetail.them : false;
    bool xoa = ViewBag.accessDetail != null ? ViewBag.accessDetail.xoa : false;
    bool xuat = ViewBag.accessDetail != null ? ViewBag.accessDetail.xuat : false;
    bool nhap = ViewBag.accessDetail != null ? ViewBag.accessDetail.nhap : false;
}
<style>
    .form-actions {
        background: 0 0 !important;
        padding: 0px 0px !important;
        border: none !important;
    }

        .form-actions.right {
            text-align: right !important;
        }
</style>
<script src="~/Scripts/autoNumeric-min.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>

<div class="row-fluid widget-box">
    <div class="span12">
        <div class="span4">
            <input type="text" class="span12" placeholder="Mã phiếu, tên phiếu" onkeyup="filter(this)" />
        </div>
    </div>
</div>

<div class="row-fluid">
    @(Html.Kendo()
    .Grid<HPSTD.Core.Entities.StatementHeader>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.id).HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
            .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#'/> ")
            .Width(25).Filterable(false).Sortable(false);
        columns.Template(@<text></text>).HtmlAttributes(new { style = "text-align: center;" })
            .ClientTemplate("<span ><a class='btn btn-mini btn-warning' href=" + Url.Action("Edit", "Statement", new { @id = "#=id#" }) + " style ='width:40px'> Sửa </a></span> "
                        +  "<span ><a class='btn btn-mini btn-primary' style ='width:60px' onclick='InPhieu(this)'> In phiếu </a></span>").Width(150);

        //columns.Bound(p => p.ma_phieu).ClientTemplate("<a href=" + Url.Action("Edit", "Statement", new { @id = "#=id#" }) + ">#=ma_phieu#</a>").Title("Số phiếu").Width(110);
        columns.Bound(p => p.ma_phieu).Title("Bảng tổng hợp số").Width(110);
     
            
        columns.Bound(p => p.ten_phieu).Width(140).Title("Mô tả");
        columns.Bound(p => p.ngay_tao_yeu_cau).Title("Ngày yêu cầu").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right", columnname = "ngay_yeu_cau" });
        columns.Bound(p => p.trang_thai).Width(90).Title("Trạng thái").ClientTemplate("#if(trang_thai=='MOI'){#<span class='btn btn-danger btn-mini'>Mới</span>#}else{#Ngưng hoạt động#}#");
        columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right", columnname = "ngay_tao" });
        columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
        columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}").HtmlAttributes(new { @style = "text-align:right", columnname = "ngay_sua" });
        columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
    })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
            <div class="pull-left">
                @if (them)
                {
                    <a class="btn btn-primary btn-small" href="@Url.Action("Create", "Statement")">Thêm</a>
                }
            </div>
            <div class="pull-left" style="margin-left:2px">
                @if (xoa)
                {
                    <a class="btn btn-danger btn-small" href="javascript:void(0)" onclick="showConfirmPopup(1)">Xóa</a>
                }
            </div>
        </text>);
        })
        .Sortable()
        .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
        .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
        .Pageable(p => p
            .Messages(m => m
                .Display("{0}-{1} của {2} dòng")
                .Empty("Không có dòng nào")
                .ItemsPerPage("dòng trên trang")
                .First("Trang kế")
                .Last("Trang tiếp")
                .Next("Đầu trang")
                .Previous("Cuối trang")
        ))
        .Scrollable()
        .Events(e =>
        {
            e.DataBound("Databound");
        })
        .Navigatable()
        .Reorderable(r => r.Columns(true))
        .Resizable(r => r.Columns(true))
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
        .Model(model =>
        {
            model.Id(p => p.id);
        })
        .Read(read => read.Action("Read", "Statement"))
        ))
</div>

<div id="popup-confirm" class="modal hide">
    <div class="k-window-titlebar k-header">
        <span class="k-window-title">Thông báo</span>
    </div>
    <div class="modal-body overflow-visible">
        <div class="row-fluid form-horizontal">
            <p>
                <span>Bạn có chắc chắn muốn xóa dữ liệu</span>
            </p>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-info btn-small" onclick="DeleteList()"> Đồng ý</a>
        <a class="btn btn-default btn-small" data-dismiss="modal">Bỏ qua</a>
    </div>
</div>

<script>

    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#grid").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function showConfirmPopup(e) {
        if (e == 1) {
            var listrowid = "";
            $('#grid').find(".checkrowid").each(function () {
                if ($(this).prop('checked') == true) {
                    listrowid += $(this).attr("id") + '@@@@';
                }
            });
            if (listrowid != "" && listrowid != null) {
                deleteId = 1;
                $("#divMaskPopup").show();
                $('#popup-confirm').modal('show');
            }
            else {
                $.gritter.add({
                    title: '',
                    text: 'Vui lòng chọn dữ liệu',
                    class_name: 'gritter-error'
                });
            }
        }
        else {
        }
    }
    function DeleteList() {
        if (deleteId == 1) {
            var listrowid = "";
            $('#grid').find(".checkrowid").each(function () {
                if ($(this).prop('checked') == true) {
                    listrowid += $(this).attr("id") + '@@@@';
                }
            });
            if (listrowid != "" && listrowid != null) {
                $.post(r + "/Statement/DeleteList", { data: listrowid }, function (data) {
                    if (data.success) {
                        $.gritter.add({
                            text: "Xóa thành công",
                            class_name: 'gritter-success'
                        });
                        $("#grid").data("kendoGrid").dataSource.read();
                    }
                    else {
                        $.gritter.add({
                            text: data.error,
                            class_name: 'gritter-error'
                        });
                    }
                    $('#popup-confirm').modal('hide');
                });
            }
        }
    }

    function Databound() {
        resizeGrid();
    }

    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 25);
    }
    function filter(e) {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = e.value;
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "ma_phieu", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_phieu", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
    }

</script>
@* Print-BaoHV *@
<script>
    function InPhieu(e) {
        var data = $("#grid").data("kendoGrid").dataItem($(e).closest("tr"));
        var ma_phieu = data.ma_phieu;
        //  console.log(data);
        if (ma_phieu != "" && ma_phieu != null) {
            $.ajax({
                url: r + '/Statement/ExportPrint/',
                type: 'POST',
                data: { Id: 1, isView: 'True', listPO: ma_phieu },
                success: function (data, textStatus, jqXHR) {
                    printContract(data);
                },
            });
        }
    }
    function review() {
        if (ma_phieu_header == 0 || ma_phieu_header == "") {
            $.gritter.add({
                title: '',
                text: 'Vui lòng tạo phiếu trước khi in',
                class_name: 'gritter-error'
            });
        }
        else {
            Process(ma_phieu_header);
        }
    }
    function printContract(html) {
        var printWin = window.open("target", "baohv", "toolbar=yes,scrollbars=yes,resizable=yes");
        printWin.document.write(html);
        printWin.document.close();
        printWin.focus();
        setTimeout(function () {
            printWin.window.print();
            window.close();
        }, 100);
    }
    function Process(id) {
        var listrowid = "";
        if (id != "") {
            listrowid = id;
            if (listrowid != "" && listrowid != null) {
                //bootbox.confirm({
                //    size: "small",
                //    message: "Xác nhận In phiếu yêu cầu?",
                //    buttons: {
                //        confirm: {
                //            label: '<i class="fa fa-check"></i> Xác nhận',
                //            className: 'btn-success'
                //        },
                //        cancel: {
                //            label: '<i class="fa fa-times"></i> Bỏ qua',
                //            className: 'btn-default'
                //        }
                //    },
                //    className: "medium",
                //    callback: function (result) {
                //        if (result != "" && result != null) {
                $.ajax({
                    url: r + '/Statement/ExportPrint/',
                    type: 'POST',
                    data: { Id: 1, isView: 'True', listPO: listrowid },
                    success: function (data, textStatus, jqXHR) {
                        printContract(data);
                    },
                });
            }
            //    }
            //});
            // }
        }
        else {
            $.gritter.add({
                title: '',
                text: 'Vui lòng chọn dữ liệu',
                class_name: 'gritter-error'
            });
        }
    }
</script>
