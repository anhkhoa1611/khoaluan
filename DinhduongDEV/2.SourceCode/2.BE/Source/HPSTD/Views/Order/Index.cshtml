@using HPSTD.Core.Entities
@{
    ViewBag.Title = "Danh sách đơn đặt hàng";
    var newData = new OrderHeader();
}
<style>
    .form-actions {
        background: 0 0 !important;
        padding: 19px 10px !important;
    }
    .form-actions.right {
        text-align: right !important;
    }
</style>
<div class="row-fluid widget-box">
    <div class="span12">
        <div class="span4">
            <input type="text" class="span12" placeholder="Mã đơn hàng, tên đơn hàng" onkeyup="filter(this)" />
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        <div class="row-fluid">
            <div class="col-sm-6">
                <div class="tabbable">
                    <ul class="nav nav-tabs tab-color-blue" id="myTab">
                        <li class="active">
                            <a data-toggle="tab" href="#home" aria-expanded="true" id="tabList">
                                <i class="green ace-icon fa fa-home bigger-120"></i>
                                Danh sách đơn hàng
                            </a>
                        </li>
                        <li class="">
                            <a data-toggle="tab" href="#edit" aria-expanded="false" id="tabAdd">
                                Thêm sản phẩm
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content" style="padding-bottom:0px!important">
                        <div id="home" class="tab-pane fade active in">
                            <div class="row-fluid">
                                @(Html.Kendo()
                                .Grid<HPSTD.Core.Entities.OrderHeader>()
                                .Name("grid")
                                //.HtmlAttributes(new { @style = "height:500px" })
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.id)
                                        .HeaderTemplate("<input style='text-align:center;opacity:1;' type='checkbox' id= 'checkboxcheckAll'  onClick='checkAll(this)' />")
                                        .ClientTemplate("<input style='text-align:center' class='checkrowid' type='checkbox' id='#=id#'/> ")
                                        .Width(25).Filterable(false).Sortable(false);
                                    columns.Bound(p => p.so_don_hang).Width(90).Title("Số đơn hàng").ClientTemplate("<span style='cursor:pointer; color:\\#040001;' onclick='edit(this)'>#=so_don_hang#</span>");
                                    columns.ForeignKey(p => p.ma_don_vi, (System.Collections.IEnumerable)ViewBag.listDonVi, "id", "aliasname").Title("Đơn vị").Width(120);
                                    columns.Bound(p => p.ten_don_hang).Width(140).Title("Tên đơn hàng");
                                    columns.Bound(p => p.ngay_to_trinh).Title("Ngày tờ trình").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                                    columns.Bound(p => p.trang_thai).Width(90).Title("Trạng thái").ClientTemplate("#if(trang_thai=='MOI'){#<span class='btn btn-danger btn-mini'>Mới</span>#}else{#Ngưng hoạt động#}#");
                                    columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                                    columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
                                    columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
                                    columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
                                })
                                .ToolBar(toolbar =>
                                {
                                    toolbar.Custom().Text("Xóa")
                                    .HtmlAttributes(new { @class = "btn btn-danger", @Href = "javascript:void(0)", @onclick = "showConfirmPopup(1)" });
                                })
                                .Sortable()
                                .Pageable(pager => pager.PageSizes(new[] { 20, 100, 200, 300 }))
                                .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                                .Pageable(p => p
                                .Messages(m => m
                                .Display("{0}-{1} của {2} dòng")
                                .Empty("Không có dòng nào")
                                .ItemsPerPage("dòng trên trang")
                                .First("Trang kế")
                                .Last("Trang tiếp")
                                .Next("Đầu trang")
                                .Previous("Cuối trang")
                                )
                                )
                                .Scrollable()
                                .Events(e =>
                                {
                                    e.DataBound("Databound");
                                })
                                .Navigatable()
                                .Reorderable(r => r.Columns(true))
                                .Resizable(r => r.Columns(true))
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(20)
                                .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
                                .Model(model =>
                                {
                                    model.Id(p => p.id);
                                })

                                .Read(read => read.Action("Read", "Order"))
                                ))
                            </div>

                        </div>
                        <div id="edit" class="tab-pane fade">
                            <div class="span12 formEdit">
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/template" id="EditTemplate">
    <form action="@Url.Content("~/Order/CreateUpdate")" id="EditForm" method="post" enctype="multipart/form-data">
        <div class="row-fluid">
            <div class="span3">
                <input type="hidden" name="id" value="#=id#" />
                <div class="control-group">
                    <label>Số đơn hàng (*)</label>
                    <div class="controls">
                        <input type="text" class="span12" readonly placeholder="Số đơn hàng" name="so_don_hang" value="#=so_don_hang!=null ? so_don_hang : ''#">
                    </div>
                </div>
            </div>
            <div class="span3">
                <div class="control-group">
                    <label>Tên đơn hàng (*)</label>
                    <div class="controls">
                        <input type="text" class="span12" placeholder="Tên đơn hàng" name="ten_don_hang" value="#=ten_don_hang!=null ? ten_don_hang : ''#">
                    </div>
                </div>
            </div>
            <div class="span3">
                <div class="control-group">
                    <label>Tên đơn vị</label>
                    <div class="controls">
                        <select name="ma_don_vi" class="span12 select2">
                            <option></option>
                            @foreach (var item in ViewBag.listDonVi)
                            {
                                <option value="@item.id">@item.aliasname</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="span3">
                <div class="control-group">
                    <label>Ngày tờ trình</label>
                    <div class="controls">
                        <input type="text" class="span12 date-picker" placeholder="Ngày tờ trình" name="ngay_to_trinh" value="#=kendo.toString(kendo.parseDate(ngay_to_trinh),'dd/MM/yyyy') !='01/01/0001' && kendo.toString(kendo.parseDate(ngay_to_trinh),'dd/MM/yyyy') !='01/01/1900'  ? kendo.toString(kendo.parseDate(ngay_to_trinh),'dd/MM/yyyy'): ''#">
                    </div>
                </div>
            </div>
        </div>
        
    </form>
    <div class="row-fluid">
        @(Html.Kendo()
        .Grid<HPSTD.Core.Entities.OrderDetail>()
        .Name("gridDetail")
        .Columns(columns =>
        {
        columns.Bound(p => p.id).Hidden();
        columns.Template(@<text></text>).HeaderHtmlAttributes(new { @style = "text-align: center" })
        .ClientTemplate("<span><a class='btn btn-danger btn-mini' onclick='removeDetail(\\#=id\\#)'><i class='fa fa-pencil'></i>Xóa</a></span> " +
                 "<span><a class='btn btn-success btn-mini' onclick='editDetail(this)'><i class='fa fa-pencil'></i>Sửa</a></span>").Width(90);
            columns.ForeignKey(p => p.ma_san_pham, (System.Collections.IEnumerable)ViewBag.listProduct, "id", "ten_san_pham")
            .Title("Tên vật tư").Width(160);
            columns.ForeignKey(p => p.ma_don_vi_tinh, (System.Collections.IEnumerable)ViewBag.listDonViTinh, "ma_tham_so", "gia_tri")
            .Title("Đơn vị tính").Width(160);
            columns.Bound(p => p.so_luong).Title("Số lượng").Filterable(false).Width(75).Format("{0:N0}").HtmlAttributes(new { @style = "text-align:right" })
            .FooterTemplate("<div style='height: 20px'><span>Tổng:</span><span class='pull-right' style='color:red' id='tong_so_luong'>0</span></div></div>"); ;

            columns.Bound(p => p.don_gia_chua_VAT).Title("Đơn giá chưa VAT").
            Filterable(false).Width(180).Format("{0:N0}").
            HtmlAttributes(new { @style = "text-align:right" })
             .FooterTemplate("<div style='height: 20px'><span>TC(vnđ):</span><span class='pull-right' style='color:red' id='totalNoVAT'>0</span></div></div>");

            columns.Bound(p => p.don_gia_chua_VAT).Title("Đơn giá đã VAT").
            Filterable(false).Width(180).Format("{0:N0}").
            HtmlAttributes(new { @style = "text-align:right" })
             .FooterTemplate("<div style='height: 20px'><span>TC(vnđ):</span><span class='pull-right' style='color:red' id='totalVAT'>0</span></div></div>");

           columns.Bound(p => p.don_gia_chua_VAT).Title("Thành tiền").
           Filterable(false).Width(180).Format("{0:N0}").
           HtmlAttributes(new { @style = "text-align:right" })
            .FooterTemplate("<div style='height: 20px'><span>TC(vnđ):</span><span class='pull-right' style='color:red' id='totalVAT'>0</span></div></div>");

            columns.Bound(p => p.ngay_tao).Title("Ngày tạo").Filterable(false).Width(100).Format("{0:dd/MM/yyyy HH:mm}");
            columns.Bound(p => p.nguoi_tao).Title("Người tạo").Filterable(false).Width(90);
            columns.Bound(p => p.ngay_cap_nhat).Title("Ngày sửa").Filterable(false).Width(120).Format("{0:dd/MM/yyyy HH:mm}");
            columns.Bound(p => p.nguoi_cap_nhat).Title("Người sửa").Filterable(false).Width(90);
        })
        .ToolBar(toolbar =>
        {
        toolbar.Template(@<text>
            <div class="pull-left">
                <a class="btn btn-info btn-mini" href="javascript:void(0)" onclick="AddDetail()">
                    Thêm chi tiết
                </a>
                <a class="btn btn-primary btn-mini" href="javascript:void(0)" onclick="review('print')">
                    In phiếu
                </a>
            </div>
        </text>);
        })
        //.Sortable()
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Pageable(pager => pager.PageSizes(new[] { 50, 100, 200, 300 }))
        .Selectable(s => s.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
        .Pageable(p => p
        .Messages(m => m
        .Display("{0}-{1} của {2} dòng")
        .Empty("Không có dòng nào")
        .ItemsPerPage("dòng trên trang")
        .First("Trang kế")
        .Last("Trang tiếp")
        .Next("Đầu trang")
        .Previous("Cuối trang")
        )
        )
        .Scrollable()
        //.Events(e => { e.DataBound("onDatabound"); })
        .Navigatable()
        .Reorderable(r => r.Columns(true))
        .Resizable(r => r.Columns(true))
        .AutoBind(false)
        .DataSource(dataSource => dataSource
        .Ajax()
        .Aggregates(aggregates =>
        {
            aggregates.Add(p => p.don_gia_chua_VAT).Sum();
            aggregates.Add(p => p.don_gia_da_VAT).Sum();
        })
        .PageSize(20)
        //.Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd"); })
        .Model(model =>
        {
            model.Id(p => p.id);
        })
        .Read(read => read.Action("ReadDetail", "Order", new { order_id_header = 0 }))
        )
        .ToClientTemplate()
        )
    </div>
    <div class="form-actions right">
        <a onclick="clearForm()" class="btn btn-xs">Hủy</a>
        #if(id > 0){#
        <a onclick="removeUser('#=id#')" class="btn btn-danger">Xóa</a>
        #}#
        <a onclick="saveFrom()" class="btn btn-info">Lưu</a>
        <a onclick="saveAndClear()" class="btn btn-primary">Lưu &amp; Mới</a>
    </div>
</script>

<script>
    function AddDetail() {
        $("#gridDetail").data("kendoGrid").dataSource.insert()
    }
    function Databound() {
        resizeGrid();
    }
    function resizeGrid() {
        var offsetbottom = parseInt($(window).height()) - parseInt($('#grid').offset().top);
        var gridElement = $("#grid"),
        dataArea = gridElement.find(".k-grid-content"),
        otherElements = gridElement.children().not(".k-grid-content"),
        otherElementsHeight = 0;
        otherElements.each(function () {
            otherElementsHeight += $(this).outerHeight();
        });
        dataArea.height(offsetbottom - otherElementsHeight - 15);
    }
    function checkAll(e) {
        var x = $(e).prop('checked');
        $("#grid").find(".checkrowid").each(function () {
            $(this).prop('checked', x);
        });
    }
    function filter(e) {
        grid = $("#grid").data("kendoGrid");
        var filter = { logic: "and", filters: [] };
        var text = e.value;
        if (text) {
            var filterOr = { logic: "or", filters: [] };
            filterOr.filters.push({ field: "so_hoa_don", operator: "contains", value: text });
            filterOr.filters.push({ field: "ten_don_hang", operator: "contains", value: text });
            filter.filters.push(filterOr);
        }
        grid.dataSource.filter(filter);
        console.log(text)
    }
    loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    function loadForm(data) {
        var EditTemplate = kendo.template($("#EditTemplate").html());
        $(".formEdit").html(EditTemplate(data));
        $('.date-picker').datepicker({ format: 'dd/mm/yyyy', autoclose: true, todayHighlight: true, startDate: 'today' });
        loadValidate(data);
    }
    function edit(e) {
        var data = $("#grid").data("kendoGrid").dataItem($(e).closest("tr"));
        $("#tabAdd").trigger("click");
        $('#tabAdd').text('').append('Chỉnh sửa sản phẩm')
        loadForm(data);
        $('select[name="ma_don_vi"]').val(data.ma_don_vi)
        //ma_phieu_header = data.id
        //$("#gridDetail").data("kendoGrid").dataSource.read({ ma_phieu_header: data.id });
    }
    $("#tabList").bind('click', function () {
        $('#tabAdd').text('').append('Thêm sản phẩm')
    });
    $("#tabAdd").bind('click', function () {
        loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
    });
    var reset = false;
    function saveAndClear(key) {
        $('#EditForm').submit();
    }
    function saveFrom(key) {
        $('#EditForm').submit();
    }
    var Id;
    function removeUser(id) {
        $('#popup-confirm').modal('show');
        Id = id;
    }
    function Delete() {
        $.post(r + "/Order/Delete", { id: Id }, function (data) {
            if (data.success) {
                $.gritter.add({
                    text: "Xóa thành công",
                    class_name: 'gritter-success'
                });
                $("#grid").data("kendoGrid").dataSource.read();
                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
            } else {
                $.gritter.add({
                    text: data.error,
                    class_name: 'error-success'
                });
            }
        })
    }
    function loadValidate() {
        $("#EditForm").validate({
            rules: {
                'ma_don_vi': { required: true },
                'ten_don_hang': { required: true },
            },
            errorPlacement: function (error, element) {
            },
            submitHandler: function (form) {
                $(form).ajaxSubmit({
                    clearForm: false,
                    success: function (data) {
                        if (data.success) {
                            $("#grid").data("kendoGrid").dataSource.read();
                            $.gritter.add({
                                text: "Lưu thành công",
                                class_name: 'gritter-success'
                            });
                            //ma_phieu_header = data.id;
                            if (reset) {
                                reset = false;
                                loadForm(JSON.parse('@Html.Raw(Json.Encode(newData))'));
                            }
                        }
                        else {
                            $.gritter.add({
                                text: data.error,
                                class_name: 'gritter-error'
                            });
                        }

                    }
                });
                return false;
            }
        });
    }
</script>

